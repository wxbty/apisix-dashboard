import{applyFontInfo}from"./domFontInfo.js";export class CharWidthRequest{constructor(t,e){this.chr=t,this.type=e,this.width=0}fulfill(t){this.width=t}}class DomCharWidthReader{constructor(t,e){this._bareFontInfo=t,this._requests=e,this._container=null,this._testElements=null}read(){this._createDomElements(),document.body.appendChild(this._container),this._readFromDomElements(),document.body.removeChild(this._container),this._container=null,this._testElements=null}_createDomElements(){const t=document.createElement("div");t.style.position="absolute",t.style.top="-50000px",t.style.width="50000px";const e=document.createElement("div");applyFontInfo(e,this._bareFontInfo),t.appendChild(e);const n=document.createElement("div");applyFontInfo(n,this._bareFontInfo),n.style.fontWeight="bold",t.appendChild(n);const o=document.createElement("div");applyFontInfo(o,this._bareFontInfo),o.style.fontStyle="italic",t.appendChild(o);const s=[];for(const i of this._requests){let t;0===i.type&&(t=e),2===i.type&&(t=n),1===i.type&&(t=o),t.appendChild(document.createElement("br"));const l=document.createElement("span");DomCharWidthReader._render(l,i),t.appendChild(l),s.push(l)}this._container=t,this._testElements=s}static _render(t,e){if(" "===e.chr){let e="\xa0";for(let t=0;t<8;t++)e+=e;t.innerText=e}else{let n=e.chr;for(let t=0;t<8;t++)n+=n;t.textContent=n}}_readFromDomElements(){for(let t=0,e=this._requests.length;t<e;t++){const e=this._requests[t],n=this._testElements[t];e.fulfill(n.offsetWidth/256)}}}export function readCharWidths(t,e){const n=new DomCharWidthReader(t,e);n.read()}