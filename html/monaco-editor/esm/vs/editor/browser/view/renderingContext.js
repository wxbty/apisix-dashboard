export class RestrictedRenderingContext{constructor(t,e){this._restrictedRenderingContextBrand=void 0,this._viewLayout=t,this.viewportData=e,this.scrollWidth=this._viewLayout.getScrollWidth(),this.scrollHeight=this._viewLayout.getScrollHeight(),this.visibleRange=this.viewportData.visibleRange,this.bigNumbersDelta=this.viewportData.bigNumbersDelta;const i=this._viewLayout.getCurrentViewport();this.scrollTop=i.top,this.scrollLeft=i.left,this.viewportWidth=i.width,this.viewportHeight=i.height}getScrolledTopFromAbsoluteTop(t){return t-this.scrollTop}getVerticalOffsetForLineNumber(t){return this._viewLayout.getVerticalOffsetForLineNumber(t)}getDecorationsInViewport(){return this.viewportData.getDecorationsInViewport()}}export class RenderingContext extends RestrictedRenderingContext{constructor(t,e,i){super(t,e),this._renderingContextBrand=void 0,this._viewLines=i}linesVisibleRangesForRange(t,e){return this._viewLines.linesVisibleRangesForRange(t,e)}visibleRangeForPosition(t){return this._viewLines.visibleRangeForPosition(t)}}export class LineVisibleRanges{constructor(t,e,i){this.outsideRenderedLine=t,this.lineNumber=e,this.ranges=i}}export class HorizontalRange{constructor(t,e){this._horizontalRangeBrand=void 0,this.left=Math.round(t),this.width=Math.round(e)}static from(t){const e=new Array(t.length);for(let i=0,r=t.length;i<r;i++){const r=t[i];e[i]=new HorizontalRange(r.left,r.width)}return e}toString(){return`[${this.left},${this.width}]`}}export class FloatHorizontalRange{constructor(t,e){this._floatHorizontalRangeBrand=void 0,this.left=t,this.width=e}toString(){return`[${this.left},${this.width}]`}static compare(t,e){return t.left-e.left}}export class HorizontalPosition{constructor(t,e){this.outsideRenderedLine=t,this.originalLeft=e,this.left=Math.round(this.originalLeft)}}export class VisibleRanges{constructor(t,e){this.outsideRenderedLine=t,this.ranges=e}}