var _a;import{createFastDomNode}from"../../../base/browser/fastDomNode.js";import{createStringBuilder}from"../../common/core/stringBuilder.js";export class RenderedLinesCollection{constructor(e){this._createLine=e,this._set(1,[])}flush(){this._set(1,[])}_set(e,t){this._lines=t,this._rendLineNumberStart=e}_get(){return{rendLineNumberStart:this._rendLineNumberStart,lines:this._lines}}getStartLineNumber(){return this._rendLineNumberStart}getEndLineNumber(){return this._rendLineNumberStart+this._lines.length-1}getCount(){return this._lines.length}getLine(e){const t=e-this._rendLineNumberStart;if(t<0||t>=this._lines.length)throw new Error("Illegal value for lineNumber");return this._lines[t]}onLinesDeleted(e,t){if(0===this.getCount())return null;const n=this.getStartLineNumber(),i=this.getEndLineNumber();if(t<n){const n=t-e+1;return this._rendLineNumberStart-=n,null}if(e>i)return null;let r=0,s=0;for(let l=n;l<=i;l++){const n=l-this._rendLineNumberStart;e<=l&&l<=t&&(0===s?(r=n,s=1):s++)}if(e<n){let i=0;i=t<n?t-e+1:n-e,this._rendLineNumberStart-=i}const o=this._lines.splice(r,s);return o}onLinesChanged(e,t){if(0===this.getCount())return!1;const n=this.getStartLineNumber(),i=this.getEndLineNumber();let r=!1;for(let s=e;s<=t;s++)s>=n&&s<=i&&(this._lines[s-this._rendLineNumberStart].onContentChanged(),r=!0);return r}onLinesInserted(e,t){if(0===this.getCount())return null;const n=t-e+1,i=this.getStartLineNumber(),r=this.getEndLineNumber();if(e<=i)return this._rendLineNumberStart+=n,null;if(e>r)return null;if(n+e>r){const t=this._lines.splice(e-this._rendLineNumberStart,r-e+1);return t}const s=[];for(let a=0;a<n;a++)s[a]=this._createLine();const o=e-this._rendLineNumberStart,l=this._lines.slice(0,o),h=this._lines.slice(o,this._lines.length-n),d=this._lines.slice(this._lines.length-n,this._lines.length);return this._lines=l.concat(s).concat(h),d}onTokensChanged(e){if(0===this.getCount())return!1;const t=this.getStartLineNumber(),n=this.getEndLineNumber();let i=!1;for(let r=0,s=e.length;r<s;r++){const s=e[r];if(s.toLineNumber<t||s.fromLineNumber>n)continue;const o=Math.max(t,s.fromLineNumber),l=Math.min(n,s.toLineNumber);for(let e=o;e<=l;e++){const t=e-this._rendLineNumberStart;this._lines[t].onTokensChanged(),i=!0}}return i}}export class VisibleLinesCollection{constructor(e){this._host=e,this.domNode=this._createDomNode(),this._linesCollection=new RenderedLinesCollection((()=>this._host.createVisibleLine()))}_createDomNode(){const e=createFastDomNode(document.createElement("div"));return e.setClassName("view-layer"),e.setPosition("absolute"),e.domNode.setAttribute("role","presentation"),e.domNode.setAttribute("aria-hidden","true"),e}onConfigurationChanged(e){return!!e.hasChanged(131)}onFlushed(e){return this._linesCollection.flush(),!0}onLinesChanged(e){return this._linesCollection.onLinesChanged(e.fromLineNumber,e.toLineNumber)}onLinesDeleted(e){const t=this._linesCollection.onLinesDeleted(e.fromLineNumber,e.toLineNumber);if(t)for(let n=0,i=t.length;n<i;n++){const e=t[n].getDomNode();e&&this.domNode.domNode.removeChild(e)}return!0}onLinesInserted(e){const t=this._linesCollection.onLinesInserted(e.fromLineNumber,e.toLineNumber);if(t)for(let n=0,i=t.length;n<i;n++){const e=t[n].getDomNode();e&&this.domNode.domNode.removeChild(e)}return!0}onScrollChanged(e){return e.scrollTopChanged}onTokensChanged(e){return this._linesCollection.onTokensChanged(e.ranges)}onZonesChanged(e){return!0}getStartLineNumber(){return this._linesCollection.getStartLineNumber()}getEndLineNumber(){return this._linesCollection.getEndLineNumber()}getVisibleLine(e){return this._linesCollection.getLine(e)}renderLines(e){const t=this._linesCollection._get(),n=new ViewLayerRenderer(this.domNode.domNode,this._host,e),i={rendLineNumberStart:t.rendLineNumberStart,lines:t.lines,linesLength:t.lines.length},r=n.render(i,e.startLineNumber,e.endLineNumber,e.relativeVerticalOffset);this._linesCollection._set(r.rendLineNumberStart,r.lines)}}class ViewLayerRenderer{constructor(e,t,n){this.domNode=e,this.host=t,this.viewportData=n}render(e,t,n,i){const r={rendLineNumberStart:e.rendLineNumberStart,lines:e.lines.slice(0),linesLength:e.linesLength};if(r.rendLineNumberStart+r.linesLength-1<t||n<r.rendLineNumberStart){r.rendLineNumberStart=t,r.linesLength=n-t+1,r.lines=[];for(let e=t;e<=n;e++)r.lines[e-t]=this.host.createVisibleLine();return this._finishRendering(r,!0,i),r}if(this._renderUntouchedLines(r,Math.max(t-r.rendLineNumberStart,0),Math.min(n-r.rendLineNumberStart,r.linesLength-1),i,t),r.rendLineNumberStart>t){const e=t,s=Math.min(n,r.rendLineNumberStart-1);e<=s&&(this._insertLinesBefore(r,e,s,i,t),r.linesLength+=s-e+1)}else if(r.rendLineNumberStart<t){const e=Math.min(r.linesLength,t-r.rendLineNumberStart);e>0&&(this._removeLinesBefore(r,e),r.linesLength-=e)}if(r.rendLineNumberStart=t,r.rendLineNumberStart+r.linesLength-1<n){const e=r.rendLineNumberStart+r.linesLength,s=n;e<=s&&(this._insertLinesAfter(r,e,s,i,t),r.linesLength+=s-e+1)}else if(r.rendLineNumberStart+r.linesLength-1>n){const e=Math.max(0,n-r.rendLineNumberStart+1),t=r.linesLength-1,i=t-e+1;i>0&&(this._removeLinesAfter(r,i),r.linesLength-=i)}return this._finishRendering(r,!1,i),r}_renderUntouchedLines(e,t,n,i,r){const s=e.rendLineNumberStart,o=e.lines;for(let l=t;l<=n;l++){const e=s+l;o[l].layoutLine(e,i[e-r])}}_insertLinesBefore(e,t,n,i,r){const s=[];let o=0;for(let l=t;l<=n;l++)s[o++]=this.host.createVisibleLine();e.lines=s.concat(e.lines)}_removeLinesBefore(e,t){for(let n=0;n<t;n++){const t=e.lines[n].getDomNode();t&&this.domNode.removeChild(t)}e.lines.splice(0,t)}_insertLinesAfter(e,t,n,i,r){const s=[];let o=0;for(let l=t;l<=n;l++)s[o++]=this.host.createVisibleLine();e.lines=e.lines.concat(s)}_removeLinesAfter(e,t){const n=e.linesLength-t;for(let i=0;i<t;i++){const t=e.lines[n+i].getDomNode();t&&this.domNode.removeChild(t)}e.lines.splice(n,t)}_finishRenderingNewLines(e,t,n,i){ViewLayerRenderer._ttPolicy&&(n=ViewLayerRenderer._ttPolicy.createHTML(n));const r=this.domNode.lastChild;t||!r?this.domNode.innerHTML=n:r.insertAdjacentHTML("afterend",n);let s=this.domNode.lastChild;for(let o=e.linesLength-1;o>=0;o--){const t=e.lines[o];i[o]&&(t.setDomNode(s),s=s.previousSibling)}}_finishRenderingInvalidLines(e,t,n){const i=document.createElement("div");ViewLayerRenderer._ttPolicy&&(t=ViewLayerRenderer._ttPolicy.createHTML(t)),i.innerHTML=t;for(let r=0;r<e.linesLength;r++){const t=e.lines[r];if(n[r]){const e=i.firstChild,n=t.getDomNode();n.parentNode.replaceChild(e,n),t.setDomNode(e)}}}_finishRendering(e,t,n){const i=ViewLayerRenderer._sb,r=e.linesLength,s=e.lines,o=e.rendLineNumberStart,l=[];{i.reset();let h=!1;for(let e=0;e<r;e++){const t=s[e];l[e]=!1;const r=t.getDomNode();if(r)continue;const d=t.renderLine(e+o,n[e],this.viewportData,i);d&&(l[e]=!0,h=!0)}h&&this._finishRenderingNewLines(e,t,i.build(),l)}{i.reset();let t=!1;const h=[];for(let e=0;e<r;e++){const r=s[e];if(h[e]=!1,l[e])continue;const d=r.renderLine(e+o,n[e],this.viewportData,i);d&&(h[e]=!0,t=!0)}t&&this._finishRenderingInvalidLines(e,i.build(),h)}}}ViewLayerRenderer._ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("editorViewLayer",{createHTML:e=>e}),ViewLayerRenderer._sb=createStringBuilder(1e5);