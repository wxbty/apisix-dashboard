var _a,__decorate=this&&this.__decorate||function(e,i,t,n){var o,r=arguments.length,s=r<3?i:null===n?n=Object.getOwnPropertyDescriptor(i,t):n;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)s=Reflect.decorate(e,i,t,n);else for(var d=e.length-1;d>=0;d--)(o=e[d])&&(s=(r<3?o(s):r>3?o(i,t,s):o(i,t))||s);return r>3&&s&&Object.defineProperty(i,t,s),s},__param=this&&this.__param||function(e,i){return function(t,n){i(t,n,e)}},__awaiter=this&&this.__awaiter||function(e,i,t,n){function o(e){return e instanceof t?e:new t((function(i){i(e)}))}return new(t||(t=Promise))((function(t,r){function s(e){try{a(n.next(e))}catch(i){r(i)}}function d(e){try{a(n["throw"](e))}catch(i){r(i)}}function a(e){e.done?t(e.value):o(e.value).then(s,d)}a((n=n.apply(e,i||[])).next())}))};import"./media/diffReview.css";import*as nls from"../../../nls.js";import*as dom from"../../../base/browser/dom.js";import{createFastDomNode}from"../../../base/browser/fastDomNode.js";import{ActionBar}from"../../../base/browser/ui/actionbar/actionbar.js";import{DomScrollableElement}from"../../../base/browser/ui/scrollbar/scrollableElement.js";import{Action}from"../../../base/common/actions.js";import{Disposable}from"../../../base/common/lifecycle.js";import{applyFontInfo}from"../config/domFontInfo.js";import{EditorAction,registerEditorAction}from"../editorExtensions.js";import{ICodeEditorService}from"../services/codeEditorService.js";import{EditorFontLigatures}from"../../common/config/editorOptions.js";import{LineTokens}from"../../common/tokens/lineTokens.js";import{Position}from"../../common/core/position.js";import{editorLineNumbers}from"../../common/core/editorColorRegistry.js";import{RenderLineInput,renderViewLine2 as renderViewLine}from"../../common/viewLayout/viewLineRenderer.js";import{ViewLineRenderingData}from"../../common/viewModel/viewModel.js";import{ContextKeyExpr}from"../../../platform/contextkey/common/contextkey.js";import{scrollbarShadow}from"../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant,ThemeIcon}from"../../../platform/theme/common/themeService.js";import{Codicon}from"../../../base/common/codicons.js";import{registerIcon}from"../../../platform/theme/common/iconRegistry.js";import{ILanguageService}from"../../common/services/language.js";const DIFF_LINES_PADDING=3;class DiffEntry{constructor(e,i,t,n){this.originalLineStart=e,this.originalLineEnd=i,this.modifiedLineStart=t,this.modifiedLineEnd=n}getType(){return 0===this.originalLineStart?1:0===this.modifiedLineStart?2:0}}class Diff{constructor(e){this.entries=e}}const diffReviewInsertIcon=registerIcon("diff-review-insert",Codicon.add,nls.localize("diffReviewInsertIcon","Icon for 'Insert' in diff review.")),diffReviewRemoveIcon=registerIcon("diff-review-remove",Codicon.remove,nls.localize("diffReviewRemoveIcon","Icon for 'Remove' in diff review.")),diffReviewCloseIcon=registerIcon("diff-review-close",Codicon.close,nls.localize("diffReviewCloseIcon","Icon for 'Close' in diff review."));let DiffReview=class e extends Disposable{constructor(e,i){super(),this._languageService=i,this._width=0,this._diffEditor=e,this._isVisible=!1,this.shadow=createFastDomNode(document.createElement("div")),this.shadow.setClassName("diff-review-shadow"),this.actionBarContainer=createFastDomNode(document.createElement("div")),this.actionBarContainer.setClassName("diff-review-actions"),this._actionBar=this._register(new ActionBar(this.actionBarContainer.domNode)),this._actionBar.push(new Action("diffreview.close",nls.localize("label.close","Close"),"close-diff-review "+ThemeIcon.asClassName(diffReviewCloseIcon),!0,(()=>__awaiter(this,void 0,void 0,(function*(){return this.hide()})))),{label:!1,icon:!0}),this.domNode=createFastDomNode(document.createElement("div")),this.domNode.setClassName("diff-review monaco-editor-background"),this._content=createFastDomNode(document.createElement("div")),this._content.setClassName("diff-review-content"),this._content.setAttribute("role","code"),this.scrollbar=this._register(new DomScrollableElement(this._content.domNode,{})),this.domNode.domNode.appendChild(this.scrollbar.getDomNode()),this._register(e.onDidUpdateDiff((()=>{this._isVisible&&(this._diffs=this._compute(),this._render())}))),this._register(e.getModifiedEditor().onDidChangeCursorPosition((()=>{this._isVisible&&this._render()}))),this._register(dom.addStandardDisposableListener(this.domNode.domNode,"click",(e=>{e.preventDefault();const i=dom.findParentWithClass(e.target,"diff-review-row");i&&this._goToRow(i)}))),this._register(dom.addStandardDisposableListener(this.domNode.domNode,"keydown",(e=>{(e.equals(18)||e.equals(2066)||e.equals(530))&&(e.preventDefault(),this._goToRow(this._getNextRow())),(e.equals(16)||e.equals(2064)||e.equals(528))&&(e.preventDefault(),this._goToRow(this._getPrevRow())),(e.equals(9)||e.equals(2057)||e.equals(521)||e.equals(1033))&&(e.preventDefault(),this.hide()),(e.equals(10)||e.equals(3))&&(e.preventDefault(),this.accept())}))),this._diffs=[],this._currentDiff=null}prev(){let e=0;if(this._isVisible||(this._diffs=this._compute()),this._isVisible){let i=-1;for(let e=0,t=this._diffs.length;e<t;e++)if(this._diffs[e]===this._currentDiff){i=e;break}e=this._diffs.length+i-1}else e=this._findDiffIndex(this._diffEditor.getPosition());if(0===this._diffs.length)return;e%=this._diffs.length;const i=this._diffs[e].entries;this._diffEditor.setPosition(new Position(i[0].modifiedLineStart,1)),this._diffEditor.setSelection({startColumn:1,startLineNumber:i[0].modifiedLineStart,endColumn:1073741824,endLineNumber:i[i.length-1].modifiedLineEnd}),this._isVisible=!0,this._diffEditor.doLayout(),this._render(),this._goToRow(this._getNextRow())}next(){let e=0;if(this._isVisible||(this._diffs=this._compute()),this._isVisible){let i=-1;for(let e=0,t=this._diffs.length;e<t;e++)if(this._diffs[e]===this._currentDiff){i=e;break}e=i+1}else e=this._findDiffIndex(this._diffEditor.getPosition());if(0===this._diffs.length)return;e%=this._diffs.length;const i=this._diffs[e].entries;this._diffEditor.setPosition(new Position(i[0].modifiedLineStart,1)),this._diffEditor.setSelection({startColumn:1,startLineNumber:i[0].modifiedLineStart,endColumn:1073741824,endLineNumber:i[i.length-1].modifiedLineEnd}),this._isVisible=!0,this._diffEditor.doLayout(),this._render(),this._goToRow(this._getNextRow())}accept(){let e=-1;const i=this._getCurrentFocusedRow();if(i){const t=parseInt(i.getAttribute("data-line"),10);isNaN(t)||(e=t)}this.hide(),-1!==e&&(this._diffEditor.setPosition(new Position(e,1)),this._diffEditor.revealPosition(new Position(e,1),1))}hide(){this._isVisible=!1,this._diffEditor.updateOptions({readOnly:!1}),this._diffEditor.focus(),this._diffEditor.doLayout(),this._render()}_getPrevRow(){const e=this._getCurrentFocusedRow();return e?e.previousElementSibling?e.previousElementSibling:e:this._getFirstRow()}_getNextRow(){const e=this._getCurrentFocusedRow();return e?e.nextElementSibling?e.nextElementSibling:e:this._getFirstRow()}_getFirstRow(){return this.domNode.domNode.querySelector(".diff-review-row")}_getCurrentFocusedRow(){const e=document.activeElement;return e&&/diff-review-row/.test(e.className)?e:null}_goToRow(e){const i=this._getCurrentFocusedRow();e.tabIndex=0,e.focus(),i&&i!==e&&(i.tabIndex=-1),this.scrollbar.scanDomNode()}isVisible(){return this._isVisible}layout(e,i,t){this._width=i,this.shadow.setTop(e-6),this.shadow.setWidth(i),this.shadow.setHeight(this._isVisible?6:0),this.domNode.setTop(e),this.domNode.setWidth(i),this.domNode.setHeight(t),this._content.setHeight(t),this._content.setWidth(i),this._isVisible?(this.actionBarContainer.setAttribute("aria-hidden","false"),this.actionBarContainer.setDisplay("block")):(this.actionBarContainer.setAttribute("aria-hidden","true"),this.actionBarContainer.setDisplay("none"))}_compute(){const i=this._diffEditor.getLineChanges();if(!i||0===i.length)return[];const t=this._diffEditor.getOriginalEditor().getModel(),n=this._diffEditor.getModifiedEditor().getModel();return t&&n?e._mergeAdjacent(i,t.getLineCount(),n.getLineCount()):[]}static _mergeAdjacent(e,i,t){if(!e||0===e.length)return[];const n=[];let o=0;for(let a=0,l=e.length;a<l;a++){const r=e[a],s=r.originalStartLineNumber,d=r.originalEndLineNumber,f=r.modifiedStartLineNumber,c=r.modifiedEndLineNumber,h=[];let m=0;{const i=0===d?s:s-1,t=0===c?f:f-1;let n=1,o=1;if(a>0){const i=e[a-1];n=0===i.originalEndLineNumber?i.originalStartLineNumber+1:i.originalEndLineNumber+1,o=0===i.modifiedEndLineNumber?i.modifiedStartLineNumber+1:i.modifiedEndLineNumber+1}let r=i-DIFF_LINES_PADDING+1,l=t-DIFF_LINES_PADDING+1;if(r<n){const e=n-r;r+=e,l+=e}if(l<o){const e=o-l;r+=e,l+=e}h[m++]=new DiffEntry(r,i,l,t)}0!==d&&(h[m++]=new DiffEntry(s,d,0,0)),0!==c&&(h[m++]=new DiffEntry(0,0,f,c));{const n=0===d?s+1:d+1,o=0===c?f+1:c+1;let r=i,g=t;if(a+1<l){const i=e[a+1];r=0===i.originalEndLineNumber?i.originalStartLineNumber:i.originalStartLineNumber-1,g=0===i.modifiedEndLineNumber?i.modifiedStartLineNumber:i.modifiedStartLineNumber-1}let u=n+DIFF_LINES_PADDING-1,_=o+DIFF_LINES_PADDING-1;if(u>r){const e=r-u;u+=e,_+=e}if(_>g){const e=g-_;u+=e,_+=e}h[m++]=new DiffEntry(n,u,o,_)}n[o++]=new Diff(h)}let r=n[0].entries;const s=[];let d=0;for(let a=1,l=n.length;a<l;a++){const e=n[a].entries,i=r[r.length-1],t=e[0];0===i.getType()&&0===t.getType()&&t.originalLineStart<=i.originalLineEnd?(r[r.length-1]=new DiffEntry(i.originalLineStart,t.originalLineEnd,i.modifiedLineStart,t.modifiedLineEnd),r=r.concat(e.slice(1))):(s[d++]=new Diff(r),r=e)}return s[d++]=new Diff(r),s}_findDiffIndex(e){const i=e.lineNumber;for(let t=0,n=this._diffs.length;t<n;t++){const e=this._diffs[t].entries,n=e[e.length-1].modifiedLineEnd;if(i<=n)return t}return 0}_render(){const i=this._diffEditor.getOriginalEditor().getOptions(),t=this._diffEditor.getModifiedEditor().getOptions(),n=this._diffEditor.getOriginalEditor().getModel(),o=this._diffEditor.getModifiedEditor().getModel(),r=n.getOptions(),s=o.getOptions();if(!this._isVisible||!n||!o)return dom.clearNode(this._content.domNode),this._currentDiff=null,void this.scrollbar.scanDomNode();this._diffEditor.updateOptions({readOnly:!0});const d=this._findDiffIndex(this._diffEditor.getPosition());if(this._diffs[d]===this._currentDiff)return;this._currentDiff=this._diffs[d];const a=this._diffs[d].entries,l=document.createElement("div");l.className="diff-review-table",l.setAttribute("role","list"),l.setAttribute("aria-label",'Difference review. Use "Stage | Unstage | Revert Selected Ranges" commands'),applyFontInfo(l,t.get(44));let f=0,c=0,h=0,m=0;for(let e=0,N=a.length;e<N;e++){const i=a[e],t=i.originalLineStart,n=i.originalLineEnd,o=i.modifiedLineStart,r=i.modifiedLineEnd;0!==t&&(0===f||t<f)&&(f=t),0!==n&&(0===c||n>c)&&(c=n),0!==o&&(0===h||o<h)&&(h=o),0!==r&&(0===m||r>m)&&(m=r)}const g=document.createElement("div");g.className="diff-review-row";const u=document.createElement("div");u.className="diff-review-cell diff-review-summary";const _=c-f+1,p=m-h+1;u.appendChild(document.createTextNode(`${d+1}/${this._diffs.length}: @@ -${f},${_} +${h},${p} @@`)),g.setAttribute("data-line",String(h));const w=e=>0===e?nls.localize("no_lines_changed","no lines changed"):1===e?nls.localize("one_line_changed","1 line changed"):nls.localize("more_lines_changed","{0} lines changed",e),b=w(_),v=w(p);g.setAttribute("aria-label",nls.localize({key:"header",comment:["This is the ARIA label for a git diff header.","A git diff header looks like this: @@ -154,12 +159,39 @@.","That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.","Variables 0 and 1 refer to the diff index out of total number of diffs.","Variables 2 and 4 will be numbers (a line number).",'Variables 3 and 5 will be "no lines changed", "1 line changed" or "X lines changed", localized separately.']},"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}",d+1,this._diffs.length,f,b,h,v)),g.appendChild(u),g.setAttribute("role","listitem"),l.appendChild(g);const E=t.get(59);let L=h;for(let N=0,D=a.length;N<D;N++){const d=a[N];e._renderSection(l,d,L,E,this._width,i,n,r,t,o,s,this._languageService.languageIdCodec),0!==d.modifiedLineStart&&(L=d.modifiedLineEnd)}dom.clearNode(this._content.domNode),this._content.domNode.appendChild(l),this.scrollbar.scanDomNode()}static _renderSection(i,t,n,o,r,s,d,a,l,f,c,h){const m=t.getType();let g="diff-review-row",u="";const _="diff-review-spacer";let p=null;switch(m){case 1:g="diff-review-row line-insert",u=" char-insert",p=diffReviewInsertIcon;break;case 2:g="diff-review-row line-delete",u=" char-delete",p=diffReviewRemoveIcon;break}const w=t.originalLineStart,b=t.originalLineEnd,v=t.modifiedLineStart,E=t.modifiedLineEnd,L=Math.max(E-v,b-w),N=s.get(131),D=N.glyphMarginWidth+N.lineNumbersWidth,R=l.get(131),C=10+R.glyphMarginWidth+R.lineNumbersWidth;for(let I=0;I<=L;I++){const t=0===w?0:w+I,b=0===v?0:v+I,E=document.createElement("div");E.style.minWidth=r+"px",E.className=g,E.setAttribute("role","listitem"),0!==b&&(n=b),E.setAttribute("data-line",String(n));const L=document.createElement("div");L.className="diff-review-cell",L.style.height=`${o}px`,E.appendChild(L);const N=document.createElement("span");N.style.width=D+"px",N.style.minWidth=D+"px",N.className="diff-review-line-number"+u,0!==t?N.appendChild(document.createTextNode(String(t))):N.innerText="\xa0",L.appendChild(N);const R=document.createElement("span");R.style.width=C+"px",R.style.minWidth=C+"px",R.style.paddingRight="10px",R.className="diff-review-line-number"+u,0!==b?R.appendChild(document.createTextNode(String(b))):R.innerText="\xa0",L.appendChild(R);const y=document.createElement("span");if(y.className=_,p){const e=document.createElement("span");e.className=ThemeIcon.asClassName(p),e.innerText="\xa0\xa0",y.appendChild(e)}else y.innerText="\xa0\xa0";let S;if(L.appendChild(y),0!==b){let i=this._renderLine(f,l,c.tabSize,b,h);e._ttPolicy&&(i=e._ttPolicy.createHTML(i)),L.insertAdjacentHTML("beforeend",i),S=f.getLineContent(b)}else{let i=this._renderLine(d,s,a.tabSize,t,h);e._ttPolicy&&(i=e._ttPolicy.createHTML(i)),L.insertAdjacentHTML("beforeend",i),S=d.getLineContent(t)}0===S.length&&(S=nls.localize("blankLine","blank"));let x="";switch(m){case 0:x=t===b?nls.localize({key:"unchangedLine",comment:["The placeholders are contents of the line and should not be translated."]},"{0} unchanged line {1}",S,t):nls.localize("equalLine","{0} original line {1} modified line {2}",S,t,b);break;case 1:x=nls.localize("insertLine","+ {0} modified line {1}",S,b);break;case 2:x=nls.localize("deleteLine","- {0} original line {1}",S,t);break}E.setAttribute("aria-label",x),i.appendChild(E)}}static _renderLine(e,i,t,n,o){const r=e.getLineContent(n),s=i.get(44),d=LineTokens.createEmpty(r,o),a=ViewLineRenderingData.isBasicASCII(r,e.mightContainNonBasicASCII()),l=ViewLineRenderingData.containsRTL(r,a,e.mightContainRTL()),f=renderViewLine(new RenderLineInput(s.isMonospace&&!i.get(29),s.canUseHalfwidthRightwardsArrow,r,!1,a,l,0,d,[],t,0,s.spaceWidth,s.middotWidth,s.wsmiddotWidth,i.get(105),i.get(88),i.get(83),i.get(45)!==EditorFontLigatures.OFF,null));return f.html}};DiffReview._ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("diffReview",{createHTML:e=>e}),DiffReview=__decorate([__param(1,ILanguageService)],DiffReview);export{DiffReview};registerThemingParticipant(((e,i)=>{const t=e.getColor(editorLineNumbers);t&&i.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${t}; }`);const n=e.getColor(scrollbarShadow);n&&i.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${n} 0 -6px 6px -6px inset; }`)}));class DiffReviewNext extends EditorAction{constructor(){super({id:"editor.action.diffReview.next",label:nls.localize("editor.action.diffReview.next","Go to Next Difference"),alias:"Go to Next Difference",precondition:ContextKeyExpr.has("isInDiffEditor"),kbOpts:{kbExpr:null,primary:65,weight:100}})}run(e,i){const t=findFocusedDiffEditor(e);t&&t.diffReviewNext()}}class DiffReviewPrev extends EditorAction{constructor(){super({id:"editor.action.diffReview.prev",label:nls.localize("editor.action.diffReview.prev","Go to Previous Difference"),alias:"Go to Previous Difference",precondition:ContextKeyExpr.has("isInDiffEditor"),kbOpts:{kbExpr:null,primary:1089,weight:100}})}run(e,i){const t=findFocusedDiffEditor(e);t&&t.diffReviewPrev()}}function findFocusedDiffEditor(e){const i=e.get(ICodeEditorService),t=i.listDiffEditors(),n=i.getActiveCodeEditor();if(!n)return null;for(let o=0,r=t.length;o<r;o++){const e=t[o];if(e.getModifiedEditor().getId()===n.getId()||e.getOriginalEditor().getId()===n.getId())return e}return null}registerEditorAction(DiffReviewNext),registerEditorAction(DiffReviewPrev);