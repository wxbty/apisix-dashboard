import"./selections.css";import{DynamicViewOverlay}from"../../view/dynamicViewOverlay.js";import{editorInactiveSelection,editorSelectionBackground,editorSelectionForeground}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";class HorizontalRangeWithStyle{constructor(e){this.left=e.left,this.width=e.width,this.startStyle=null,this.endStyle=null}}class LineVisibleRangesWithStyle{constructor(e,t){this.lineNumber=e,this.ranges=t}}function toStyledRange(e){return new HorizontalRangeWithStyle(e)}function toStyled(e){return new LineVisibleRangesWithStyle(e.lineNumber,e.ranges.map(toStyledRange))}export class SelectionsOverlay extends DynamicViewOverlay{constructor(e){super(),this._previousFrameVisibleRangesWithStyle=[],this._context=e;const t=this._context.configuration.options;this._lineHeight=t.get(59),this._roundedSelection=t.get(90),this._typicalHalfwidthCharacterWidth=t.get(44).typicalHalfwidthCharacterWidth,this._selections=[],this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}onConfigurationChanged(e){const t=this._context.configuration.options;return this._lineHeight=t.get(59),this._roundedSelection=t.get(90),this._typicalHalfwidthCharacterWidth=t.get(44).typicalHalfwidthCharacterWidth,!0}onCursorStateChanged(e){return this._selections=e.selections.slice(0),!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}_visibleRangesHaveGaps(e){for(let t=0,n=e.length;t<n;t++){const n=e[t];if(n.ranges.length>1)return!0}return!1}_enrichVisibleRangesWithStyle(e,t,n){const i=this._typicalHalfwidthCharacterWidth/4;let o=null,l=null;if(n&&n.length>0&&t.length>0){const i=t[0].lineNumber;if(i===e.startLineNumber)for(let e=0;!o&&e<n.length;e++)n[e].lineNumber===i&&(o=n[e].ranges[0]);const r=t[t.length-1].lineNumber;if(r===e.endLineNumber)for(let e=n.length-1;!l&&e>=0;e--)n[e].lineNumber===r&&(l=n[e].ranges[0]);o&&!o.startStyle&&(o=null),l&&!l.startStyle&&(l=null)}for(let r=0,s=t.length;r<s;r++){const e=t[r].ranges[0],n=e.left,a=e.left+e.width,c={top:0,bottom:0},h={top:0,bottom:0};if(r>0){const e=t[r-1].ranges[0].left,o=t[r-1].ranges[0].left+t[r-1].ranges[0].width;abs(n-e)<i?c.top=2:n>e&&(c.top=1),abs(a-o)<i?h.top=2:e<a&&a<o&&(h.top=1)}else o&&(c.top=o.startStyle.top,h.top=o.endStyle.top);if(r+1<s){const e=t[r+1].ranges[0].left,o=t[r+1].ranges[0].left+t[r+1].ranges[0].width;abs(n-e)<i?c.bottom=2:e<n&&n<o&&(c.bottom=1),abs(a-o)<i?h.bottom=2:a<o&&(h.bottom=1)}else l&&(c.bottom=l.startStyle.bottom,h.bottom=l.endStyle.bottom);e.startStyle=c,e.endStyle=h}}_getVisibleRangesWithStyle(e,t,n){const i=t.linesVisibleRangesForRange(e,!0)||[],o=i.map(toStyled),l=this._visibleRangesHaveGaps(o);return!l&&this._roundedSelection&&this._enrichVisibleRangesWithStyle(t.visibleRange,o,n),o}_createSelectionPiece(e,t,n,i,o){return'<div class="cslr '+n+'" style="top:'+e.toString()+"px;left:"+i.toString()+"px;width:"+o.toString()+"px;height:"+t+'px;"></div>'}_actualRenderOneSelection(e,t,n,i){if(0===i.length)return;const o=!!i[0].ranges[0].startStyle,l=this._lineHeight.toString(),r=(this._lineHeight-1).toString(),s=i[0].lineNumber,a=i[i.length-1].lineNumber;for(let c=0,h=i.length;c<h;c++){const h=i[c],S=h.lineNumber,d=S-t,_=n&&(S===a||S===s)?r:l,g=n&&S===s?1:0;let u="",O="";for(let e=0,t=h.ranges.length;e<t;e++){const t=h.ranges[e];if(o){const e=t.startStyle,n=t.endStyle;if(1===e.top||1===e.bottom){u+=this._createSelectionPiece(g,_,SelectionsOverlay.SELECTION_CLASS_NAME,t.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH);let n=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1===e.top&&(n+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),1===e.bottom&&(n+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT),u+=this._createSelectionPiece(g,_,n,t.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}if(1===n.top||1===n.bottom){u+=this._createSelectionPiece(g,_,SelectionsOverlay.SELECTION_CLASS_NAME,t.left+t.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH);let e=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1===n.top&&(e+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),1===n.bottom&&(e+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),u+=this._createSelectionPiece(g,_,e,t.left+t.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}}let n=SelectionsOverlay.SELECTION_CLASS_NAME;if(o){const e=t.startStyle,i=t.endStyle;0===e.top&&(n+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),0===e.bottom&&(n+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),0===i.top&&(n+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),0===i.bottom&&(n+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT)}O+=this._createSelectionPiece(g,_,n,t.left,t.width)}e[d][0]+=u,e[d][1]+=O}}prepareRender(e){const t=[],n=e.visibleRange.startLineNumber,i=e.visibleRange.endLineNumber;for(let l=n;l<=i;l++){const e=l-n;t[e]=["",""]}const o=[];for(let l=0,r=this._selections.length;l<r;l++){const i=this._selections[l];if(i.isEmpty()){o[l]=null;continue}const r=this._getVisibleRangesWithStyle(i,e,this._previousFrameVisibleRangesWithStyle[l]);o[l]=r,this._actualRenderOneSelection(t,n,this._selections.length>1,r)}this._previousFrameVisibleRangesWithStyle=o,this._renderResult=t.map((([e,t])=>e+t))}render(e,t){if(!this._renderResult)return"";const n=t-e;return n<0||n>=this._renderResult.length?"":this._renderResult[n]}}function abs(e){return e<0?-e:e}SelectionsOverlay.SELECTION_CLASS_NAME="selected-text",SelectionsOverlay.SELECTION_TOP_LEFT="top-left-radius",SelectionsOverlay.SELECTION_BOTTOM_LEFT="bottom-left-radius",SelectionsOverlay.SELECTION_TOP_RIGHT="top-right-radius",SelectionsOverlay.SELECTION_BOTTOM_RIGHT="bottom-right-radius",SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME="monaco-editor-background",SelectionsOverlay.ROUNDED_PIECE_WIDTH=10,registerThemingParticipant(((e,t)=>{const n=e.getColor(editorSelectionBackground);n&&t.addRule(`.monaco-editor .focused .selected-text { background-color: ${n}; }`);const i=e.getColor(editorInactiveSelection);i&&t.addRule(`.monaco-editor .selected-text { background-color: ${i}; }`);const o=e.getColor(editorSelectionForeground);o&&!o.isTransparent()&&t.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${o}; }`)}));