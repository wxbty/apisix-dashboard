import"./currentLineHighlight.css";import{DynamicViewOverlay}from"../../view/dynamicViewOverlay.js";import{editorLineHighlight,editorLineHighlightBorder}from"../../../common/core/editorColorRegistry.js";import*as arrays from"../../../../base/common/arrays.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";import{Selection}from"../../../common/core/selection.js";export class AbstractLineHighlightOverlay extends DynamicViewOverlay{constructor(e){super(),this._context=e;const t=this._context.configuration.options,r=t.get(131);this._lineHeight=t.get(59),this._renderLineHighlight=t.get(85),this._renderLineHighlightOnlyWhenFocus=t.get(86),this._contentLeft=r.contentLeft,this._contentWidth=r.contentWidth,this._selectionIsEmpty=!0,this._focused=!1,this._cursorLineNumbers=[1],this._selections=[new Selection(1,1,1,1)],this._renderData=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}_readFromSelections(){let e=!1;const t=this._selections.map((e=>e.positionLineNumber));t.sort(((e,t)=>e-t)),arrays.equals(this._cursorLineNumbers,t)||(this._cursorLineNumbers=t,e=!0);const r=this._selections.every((e=>e.isEmpty()));return this._selectionIsEmpty!==r&&(this._selectionIsEmpty=r,e=!0),e}onThemeChanged(e){return this._readFromSelections()}onConfigurationChanged(e){const t=this._context.configuration.options,r=t.get(131);return this._lineHeight=t.get(59),this._renderLineHighlight=t.get(85),this._renderLineHighlightOnlyWhenFocus=t.get(86),this._contentLeft=r.contentLeft,this._contentWidth=r.contentWidth,!0}onCursorStateChanged(e){return this._selections=e.selections,this._readFromSelections()}onFlushed(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollWidthChanged||e.scrollTopChanged}onZonesChanged(e){return!0}onFocusChanged(e){return!!this._renderLineHighlightOnlyWhenFocus&&(this._focused=e.isFocused,!0)}prepareRender(e){if(!this._shouldRenderThis())return void(this._renderData=null);const t=this._renderOne(e),r=e.visibleRange.startLineNumber,n=e.visibleRange.endLineNumber,i=this._cursorLineNumbers.length;let s=0;const o=[];for(let h=r;h<=n;h++){const e=h-r;while(s<i&&this._cursorLineNumbers[s]<h)s++;s<i&&this._cursorLineNumbers[s]===h?o[e]=t:o[e]=""}this._renderData=o}render(e,t){if(!this._renderData)return"";const r=t-e;return r>=this._renderData.length?"":this._renderData[r]}_shouldRenderInMargin(){return("gutter"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}_shouldRenderInContent(){return("line"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&this._selectionIsEmpty&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}}export class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(e){const t="current-line"+(this._shouldRenderOther()?" current-line-both":"");return`<div class="${t}" style="width:${Math.max(e.scrollWidth,this._contentWidth)}px; height:${this._lineHeight}px;"></div>`}_shouldRenderThis(){return this._shouldRenderInContent()}_shouldRenderOther(){return this._shouldRenderInMargin()}}export class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(e){const t="current-line"+(this._shouldRenderInMargin()?" current-line-margin":"")+(this._shouldRenderOther()?" current-line-margin-both":"");return`<div class="${t}" style="width:${this._contentLeft}px; height:${this._lineHeight}px;"></div>`}_shouldRenderThis(){return!0}_shouldRenderOther(){return this._shouldRenderInContent()}}registerThemingParticipant(((e,t)=>{const r=e.getColor(editorLineHighlight);if(r&&(t.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${r}; }`),t.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${r}; border: none; }`)),!r||r.isTransparent()||e.defines(editorLineHighlightBorder)){const r=e.getColor(editorLineHighlightBorder);r&&(t.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${r}; }`),t.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${r}; }`),"hc"===e.type&&(t.addRule(".monaco-editor .view-overlays .current-line { border-width: 1px; }"),t.addRule(".monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }")))}}));