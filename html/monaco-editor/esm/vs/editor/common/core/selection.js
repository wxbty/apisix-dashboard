import{Position}from"./position.js";import{Range}from"./range.js";export class Selection extends Range{constructor(t,e,n,i){super(t,e,n,i),this.selectionStartLineNumber=t,this.selectionStartColumn=e,this.positionLineNumber=n,this.positionColumn=i}toString(){return"["+this.selectionStartLineNumber+","+this.selectionStartColumn+" -> "+this.positionLineNumber+","+this.positionColumn+"]"}equalsSelection(t){return Selection.selectionsEqual(this,t)}static selectionsEqual(t,e){return t.selectionStartLineNumber===e.selectionStartLineNumber&&t.selectionStartColumn===e.selectionStartColumn&&t.positionLineNumber===e.positionLineNumber&&t.positionColumn===e.positionColumn}getDirection(){return this.selectionStartLineNumber===this.startLineNumber&&this.selectionStartColumn===this.startColumn?0:1}setEndPosition(t,e){return 0===this.getDirection()?new Selection(this.startLineNumber,this.startColumn,t,e):new Selection(t,e,this.startLineNumber,this.startColumn)}getPosition(){return new Position(this.positionLineNumber,this.positionColumn)}getSelectionStart(){return new Position(this.selectionStartLineNumber,this.selectionStartColumn)}setStartPosition(t,e){return 0===this.getDirection()?new Selection(t,e,this.endLineNumber,this.endColumn):new Selection(this.endLineNumber,this.endColumn,t,e)}static fromPositions(t,e=t){return new Selection(t.lineNumber,t.column,e.lineNumber,e.column)}static fromRange(t,e){return 0===e?new Selection(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn):new Selection(t.endLineNumber,t.endColumn,t.startLineNumber,t.startColumn)}static liftSelection(t){return new Selection(t.selectionStartLineNumber,t.selectionStartColumn,t.positionLineNumber,t.positionColumn)}static selectionsArrEqual(t,e){if(t&&!e||!t&&e)return!1;if(!t&&!e)return!0;if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(!this.selectionsEqual(t[n],e[n]))return!1;return!0}static isISelection(t){return t&&"number"===typeof t.selectionStartLineNumber&&"number"===typeof t.selectionStartColumn&&"number"===typeof t.positionLineNumber&&"number"===typeof t.positionColumn}static createWithDirection(t,e,n,i,o){return 0===o?new Selection(t,e,n,i):new Selection(n,i,t,e)}}