export const USUAL_WORD_SEPARATORS="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function createWordRegExp(e=""){let n="(-?\\d*\\.\\d\\w*)|([^";for(const t of USUAL_WORD_SEPARATORS)e.indexOf(t)>=0||(n+="\\"+t);return n+="\\s]+)",new RegExp(n,"g")}export const DEFAULT_WORD_REGEXP=createWordRegExp();export function ensureValidWordDefinition(e){let n=DEFAULT_WORD_REGEXP;if(e&&e instanceof RegExp)if(e.global)n=e;else{let t="g";e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),n=new RegExp(e.source,t)}return n.lastIndex=0,n}const _defaultConfig={maxLen:1e3,windowSize:15,timeBudget:150};export function getWordAtText(e,n,t,o,i=_defaultConfig){if(t.length>i.maxLen){let r=e-i.maxLen/2;return r<0?r=0:o+=r,t=t.substring(r,e+i.maxLen/2),getWordAtText(e,n,t,o,i)}const r=Date.now(),l=e-1-o;let u=-1,d=null;for(let x=1;;x++){if(Date.now()-r>=i.timeBudget)break;const e=l-i.windowSize*x;n.lastIndex=Math.max(0,e);const o=_findRegexMatchEnclosingPosition(n,t,l,u);if(!o&&d)break;if(d=o,e<=0)break;u=e}if(d){const e={word:d[0],startColumn:o+1+d.index,endColumn:o+1+d.index+d[0].length};return n.lastIndex=0,e}return null}function _findRegexMatchEnclosingPosition(e,n,t,o){let i;while(i=e.exec(n)){const n=i.index||0;if(n<=t&&e.lastIndex>=t)return i;if(o>0&&n>o)return null}return null}