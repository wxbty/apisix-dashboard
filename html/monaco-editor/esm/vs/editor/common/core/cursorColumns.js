import*as strings from"../../../base/common/strings.js";export class CursorColumns{static _nextVisibleColumn(t,e,n){return 9===t?CursorColumns.nextRenderTabStop(e,n):strings.isFullWidthCharacter(t)||strings.isEmojiImprecise(t)?e+2:e+1}static visibleColumnFromColumn(t,e,n){const s=Math.min(e-1,t.length),r=t.substring(0,s),i=new strings.GraphemeIterator(r);let o=0;while(!i.eol()){const t=strings.getNextCodePoint(r,s,i.offset);i.nextGraphemeLength(),o=this._nextVisibleColumn(t,o,n)}return o}static columnFromVisibleColumn(t,e,n){if(e<=0)return 1;const s=t.length,r=new strings.GraphemeIterator(t);let i=0,o=1;while(!r.eol()){const a=strings.getNextCodePoint(t,s,r.offset);r.nextGraphemeLength();const l=this._nextVisibleColumn(a,i,n),m=r.offset+1;if(l>=e){const t=e-i,n=l-e;return n<t?m:o}i=l,o=m}return s+1}static nextRenderTabStop(t,e){return t+e-t%e}static nextIndentTabStop(t,e){return t+e-t%e}static prevRenderTabStop(t,e){return Math.max(0,t-1-(t-1)%e)}static prevIndentTabStop(t,e){return Math.max(0,t-1-(t-1)%e)}}