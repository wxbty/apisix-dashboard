import{Position}from"./position.js";export class Range{constructor(e,n,t,r){e>t||e===t&&n>r?(this.startLineNumber=t,this.startColumn=r,this.endLineNumber=e,this.endColumn=n):(this.startLineNumber=e,this.startColumn=n,this.endLineNumber=t,this.endColumn=r)}isEmpty(){return Range.isEmpty(this)}static isEmpty(e){return e.startLineNumber===e.endLineNumber&&e.startColumn===e.endColumn}containsPosition(e){return Range.containsPosition(this,e)}static containsPosition(e,n){return!(n.lineNumber<e.startLineNumber||n.lineNumber>e.endLineNumber)&&(!(n.lineNumber===e.startLineNumber&&n.column<e.startColumn)&&!(n.lineNumber===e.endLineNumber&&n.column>e.endColumn))}static strictContainsPosition(e,n){return!(n.lineNumber<e.startLineNumber||n.lineNumber>e.endLineNumber)&&(!(n.lineNumber===e.startLineNumber&&n.column<=e.startColumn)&&!(n.lineNumber===e.endLineNumber&&n.column>=e.endColumn))}containsRange(e){return Range.containsRange(this,e)}static containsRange(e,n){return!(n.startLineNumber<e.startLineNumber||n.endLineNumber<e.startLineNumber)&&(!(n.startLineNumber>e.endLineNumber||n.endLineNumber>e.endLineNumber)&&(!(n.startLineNumber===e.startLineNumber&&n.startColumn<e.startColumn)&&!(n.endLineNumber===e.endLineNumber&&n.endColumn>e.endColumn)))}strictContainsRange(e){return Range.strictContainsRange(this,e)}static strictContainsRange(e,n){return!(n.startLineNumber<e.startLineNumber||n.endLineNumber<e.startLineNumber)&&(!(n.startLineNumber>e.endLineNumber||n.endLineNumber>e.endLineNumber)&&(!(n.startLineNumber===e.startLineNumber&&n.startColumn<=e.startColumn)&&!(n.endLineNumber===e.endLineNumber&&n.endColumn>=e.endColumn)))}plusRange(e){return Range.plusRange(this,e)}static plusRange(e,n){let t,r,u,i;return n.startLineNumber<e.startLineNumber?(t=n.startLineNumber,r=n.startColumn):n.startLineNumber===e.startLineNumber?(t=n.startLineNumber,r=Math.min(n.startColumn,e.startColumn)):(t=e.startLineNumber,r=e.startColumn),n.endLineNumber>e.endLineNumber?(u=n.endLineNumber,i=n.endColumn):n.endLineNumber===e.endLineNumber?(u=n.endLineNumber,i=Math.max(n.endColumn,e.endColumn)):(u=e.endLineNumber,i=e.endColumn),new Range(t,r,u,i)}intersectRanges(e){return Range.intersectRanges(this,e)}static intersectRanges(e,n){let t=e.startLineNumber,r=e.startColumn,u=e.endLineNumber,i=e.endColumn,s=n.startLineNumber,m=n.startColumn,a=n.endLineNumber,o=n.endColumn;return t<s?(t=s,r=m):t===s&&(r=Math.max(r,m)),u>a?(u=a,i=o):u===a&&(i=Math.min(i,o)),t>u||t===u&&r>i?null:new Range(t,r,u,i)}equalsRange(e){return Range.equalsRange(this,e)}static equalsRange(e,n){return!!e&&!!n&&e.startLineNumber===n.startLineNumber&&e.startColumn===n.startColumn&&e.endLineNumber===n.endLineNumber&&e.endColumn===n.endColumn}getEndPosition(){return Range.getEndPosition(this)}static getEndPosition(e){return new Position(e.endLineNumber,e.endColumn)}getStartPosition(){return Range.getStartPosition(this)}static getStartPosition(e){return new Position(e.startLineNumber,e.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(e,n){return new Range(this.startLineNumber,this.startColumn,e,n)}setStartPosition(e,n){return new Range(e,n,this.endLineNumber,this.endColumn)}collapseToStart(){return Range.collapseToStart(this)}static collapseToStart(e){return new Range(e.startLineNumber,e.startColumn,e.startLineNumber,e.startColumn)}static fromPositions(e,n=e){return new Range(e.lineNumber,e.column,n.lineNumber,n.column)}static lift(e){return e?new Range(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn):null}static isIRange(e){return e&&"number"===typeof e.startLineNumber&&"number"===typeof e.startColumn&&"number"===typeof e.endLineNumber&&"number"===typeof e.endColumn}static areIntersectingOrTouching(e,n){return!(e.endLineNumber<n.startLineNumber||e.endLineNumber===n.startLineNumber&&e.endColumn<n.startColumn)&&!(n.endLineNumber<e.startLineNumber||n.endLineNumber===e.startLineNumber&&n.endColumn<e.startColumn)}static areIntersecting(e,n){return!(e.endLineNumber<n.startLineNumber||e.endLineNumber===n.startLineNumber&&e.endColumn<=n.startColumn)&&!(n.endLineNumber<e.startLineNumber||n.endLineNumber===e.startLineNumber&&n.endColumn<=e.startColumn)}static compareRangesUsingStarts(e,n){if(e&&n){const t=0|e.startLineNumber,r=0|n.startLineNumber;if(t===r){const t=0|e.startColumn,r=0|n.startColumn;if(t===r){const t=0|e.endLineNumber,r=0|n.endLineNumber;if(t===r){const t=0|e.endColumn,r=0|n.endColumn;return t-r}return t-r}return t-r}return t-r}const t=e?1:0,r=n?1:0;return t-r}static compareRangesUsingEnds(e,n){return e.endLineNumber===n.endLineNumber?e.endColumn===n.endColumn?e.startLineNumber===n.startLineNumber?e.startColumn-n.startColumn:e.startLineNumber-n.startLineNumber:e.endColumn-n.endColumn:e.endLineNumber-n.endLineNumber}static spansMultipleLines(e){return e.endLineNumber>e.startLineNumber}}