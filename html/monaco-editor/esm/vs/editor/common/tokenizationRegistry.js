var __awaiter=this&&this.__awaiter||function(e,t,s,i){function o(e){return e instanceof s?e:new s((function(t){t(e)}))}return new(s||(s=Promise))((function(s,r){function n(e){try{h(i.next(e))}catch(t){r(t)}}function a(e){try{h(i["throw"](e))}catch(t){r(t)}}function h(e){e.done?s(e.value):o(e.value).then(n,a)}h((i=i.apply(e,t||[])).next())}))};import{Emitter}from"../../base/common/event.js";import{Disposable,toDisposable}from"../../base/common/lifecycle.js";export class TokenizationRegistry{constructor(){this._map=new Map,this._factories=new Map,this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event,this._colorMap=null}fire(e){this._onDidChange.fire({changedLanguages:e,changedColorMap:!1})}register(e,t){return this._map.set(e,t),this.fire([e]),toDisposable((()=>{this._map.get(e)===t&&(this._map.delete(e),this.fire([e]))}))}registerFactory(e,t){var s;null===(s=this._factories.get(e))||void 0===s||s.dispose();const i=new TokenizationSupportFactoryData(this,e,t);return this._factories.set(e,i),toDisposable((()=>{const t=this._factories.get(e);t&&t===i&&(this._factories.delete(e),t.dispose())}))}getOrCreate(e){return __awaiter(this,void 0,void 0,(function*(){const t=this.get(e);if(t)return t;const s=this._factories.get(e);return!s||s.isResolved?null:(yield s.resolve(),this.get(e))}))}get(e){return this._map.get(e)||null}isResolved(e){const t=this.get(e);if(t)return!0;const s=this._factories.get(e);return!(s&&!s.isResolved)}setColorMap(e){this._colorMap=e,this._onDidChange.fire({changedLanguages:Array.from(this._map.keys()),changedColorMap:!0})}getColorMap(){return this._colorMap}getDefaultBackground(){return this._colorMap&&this._colorMap.length>2?this._colorMap[2]:null}}class TokenizationSupportFactoryData extends Disposable{constructor(e,t,s){super(),this._registry=e,this._languageId=t,this._factory=s,this._isDisposed=!1,this._resolvePromise=null,this._isResolved=!1}get isResolved(){return this._isResolved}dispose(){this._isDisposed=!0,super.dispose()}resolve(){return __awaiter(this,void 0,void 0,(function*(){return this._resolvePromise||(this._resolvePromise=this._create()),this._resolvePromise}))}_create(){return __awaiter(this,void 0,void 0,(function*(){const e=yield Promise.resolve(this._factory.createTokenizationSupport());this._isResolved=!0,e&&!this._isDisposed&&this._register(this._registry.register(this._languageId,e))}))}}