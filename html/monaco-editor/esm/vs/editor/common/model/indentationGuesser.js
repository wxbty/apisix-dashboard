class SpacesDiffResult{constructor(){this.spacesDiff=0,this.looksLikeAlignment=!1}}function spacesDiff(e,t,n,s,o){let i;for(o.spacesDiff=0,o.looksLikeAlignment=!1,i=0;i<t&&i<s;i++){const t=e.charCodeAt(i),s=n.charCodeAt(i);if(t!==s)break}let c=0,f=0;for(let g=i;g<t;g++){const t=e.charCodeAt(g);32===t?c++:f++}let a=0,r=0;for(let g=i;g<s;g++){const e=n.charCodeAt(g);32===e?a++:r++}if(c>0&&f>0)return;if(a>0&&r>0)return;const l=Math.abs(f-r),h=Math.abs(c-a);if(0===l)return o.spacesDiff=h,void(h>0&&0<=a-1&&a-1<e.length&&a<n.length&&32!==n.charCodeAt(a)&&32===e.charCodeAt(a-1)&&44===e.charCodeAt(e.length-1)&&(o.looksLikeAlignment=!0));h%l!==0||(o.spacesDiff=h/l)}export function guessIndentation(e,t,n){const s=Math.min(e.getLineCount(),1e4);let o=0,i=0,c="",f=0;const a=[2,4,6,8,3,5,7],r=8,l=[0,0,0,0,0,0,0,0,0],h=new SpacesDiffResult;for(let p=1;p<=s;p++){const s=e.getLineLength(p),a=e.getLineContent(p),g=s<=65536;let u=!1,A=0,C=0,d=0;for(let t=0,n=s;t<n;t++){const n=g?a.charCodeAt(t):e.getLineCharCode(p,t);if(9===n)d++;else{if(32!==n){u=!0,A=t;break}C++}}if(!u)continue;if(d>0?o++:C>1&&i++,spacesDiff(c,f,a,A,h),h.looksLikeAlignment&&(!n||t!==h.spacesDiff))continue;const k=h.spacesDiff;k<=r&&l[k]++,c=a,f=A}let g=n;o!==i&&(g=o<i);let u=t;if(g){let e=g?0:.1*s;a.forEach((t=>{const n=l[t];n>e&&(e=n,u=t)})),4===u&&l[4]>0&&l[2]>0&&l[2]>=l[4]/2&&(u=2)}return{insertSpaces:g,tabSize:u}}