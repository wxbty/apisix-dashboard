import*as strings from"../../../../base/common/strings.js";import{StringBuffer,createLineStarts,createLineStartsFast}from"./pieceTreeBase.js";import{PieceTreeTextBuffer}from"./pieceTreeTextBuffer.js";export class PieceTreeTextBufferFactory{constructor(s,t,i,r,e,h,n,c,a){this._chunks=s,this._bom=t,this._cr=i,this._lf=r,this._crlf=e,this._containsRTL=h,this._containsUnusualLineTerminators=n,this._isBasicASCII=c,this._normalizeEOL=a}_getEOL(s){const t=this._cr+this._lf+this._crlf,i=this._cr+this._crlf;return 0===t?1===s?"\n":"\r\n":i>t/2?"\r\n":"\n"}create(s){const t=this._getEOL(s),i=this._chunks;if(this._normalizeEOL&&("\r\n"===t&&(this._cr>0||this._lf>0)||"\n"===t&&(this._cr>0||this._crlf>0)))for(let e=0,h=i.length;e<h;e++){const s=i[e].buffer.replace(/\r\n|\r|\n/g,t),r=createLineStartsFast(s);i[e]=new StringBuffer(s,r)}const r=new PieceTreeTextBuffer(i,this._bom,t,this._containsRTL,this._containsUnusualLineTerminators,this._isBasicASCII,this._normalizeEOL);return{textBuffer:r,disposable:r}}}export class PieceTreeTextBufferBuilder{constructor(){this.chunks=[],this.BOM="",this._hasPreviousChar=!1,this._previousChar=0,this._tmpLineStarts=[],this.cr=0,this.lf=0,this.crlf=0,this.containsRTL=!1,this.containsUnusualLineTerminators=!1,this.isBasicASCII=!0}acceptChunk(s){if(0===s.length)return;0===this.chunks.length&&strings.startsWithUTF8BOM(s)&&(this.BOM=strings.UTF8_BOM_CHARACTER,s=s.substr(1));const t=s.charCodeAt(s.length-1);13===t||t>=55296&&t<=56319?(this._acceptChunk1(s.substr(0,s.length-1),!1),this._hasPreviousChar=!0,this._previousChar=t):(this._acceptChunk1(s,!1),this._hasPreviousChar=!1,this._previousChar=t)}_acceptChunk1(s,t){(t||0!==s.length)&&(this._hasPreviousChar?this._acceptChunk2(String.fromCharCode(this._previousChar)+s):this._acceptChunk2(s))}_acceptChunk2(s){const t=createLineStarts(this._tmpLineStarts,s);this.chunks.push(new StringBuffer(s,t.lineStarts)),this.cr+=t.cr,this.lf+=t.lf,this.crlf+=t.crlf,this.isBasicASCII&&(this.isBasicASCII=t.isBasicASCII),this.isBasicASCII||this.containsRTL||(this.containsRTL=strings.containsRTL(s)),this.isBasicASCII||this.containsUnusualLineTerminators||(this.containsUnusualLineTerminators=strings.containsUnusualLineTerminators(s))}finish(s=!0){return this._finish(),new PieceTreeTextBufferFactory(this.chunks,this.BOM,this.cr,this.lf,this.crlf,this.containsRTL,this.containsUnusualLineTerminators,this.isBasicASCII,s)}_finish(){if(0===this.chunks.length&&this._acceptChunk1("",!0),this._hasPreviousChar){this._hasPreviousChar=!1;const s=this.chunks[this.chunks.length-1];s.buffer+=String.fromCharCode(this._previousChar);const t=createLineStartsFast(s.buffer);s.lineStarts=t,13===this._previousChar&&this.cr++}}}