import*as arrays from"../../../base/common/arrays.js";import{Position}from"../core/position.js";import{ContiguousTokensEditing,EMPTY_LINE_TOKENS,toUint32Array}from"./contiguousTokensEditing.js";import{LineTokens}from"./lineTokens.js";import{TokenMetadata}from"../languages.js";export class ContiguousTokensStore{constructor(e){this._lineTokens=[],this._len=0,this._languageIdCodec=e}flush(){this._lineTokens=[],this._len=0}getTokens(e,n,t){let i=null;if(n<this._len&&(i=this._lineTokens[n]),null!==i&&i!==EMPTY_LINE_TOKENS)return new LineTokens(toUint32Array(i),t,this._languageIdCodec);const s=new Uint32Array(2);return s[0]=t.length,s[1]=getDefaultMetadata(this._languageIdCodec.encodeLanguageId(e)),new LineTokens(s,t,this._languageIdCodec)}static _massageTokens(e,n,t){const i=t?toUint32Array(t):null;if(0===n){let n=!1;if(i&&i.length>1&&(n=TokenMetadata.getLanguageId(i[1])!==e),!n)return EMPTY_LINE_TOKENS}if(!i||0===i.length){const t=new Uint32Array(2);return t[0]=n,t[1]=getDefaultMetadata(e),t.buffer}return i[i.length-2]=n,0===i.byteOffset&&i.byteLength===i.buffer.byteLength?i.buffer:i}_ensureLine(e){while(e>=this._len)this._lineTokens[this._len]=null,this._len++}_deleteLines(e,n){0!==n&&(e+n>this._len&&(n=this._len-e),this._lineTokens.splice(e,n),this._len-=n)}_insertLines(e,n){if(0===n)return;const t=[];for(let i=0;i<n;i++)t[i]=null;this._lineTokens=arrays.arrayInsert(this._lineTokens,e,t),this._len+=n}setTokens(e,n,t,i,s){const o=ContiguousTokensStore._massageTokens(this._languageIdCodec.encodeLanguageId(e),t,i);this._ensureLine(n);const r=this._lineTokens[n];return this._lineTokens[n]=o,!!s&&!ContiguousTokensStore._equals(r,o)}static _equals(e,n){if(!e||!n)return!e&&!n;const t=toUint32Array(e),i=toUint32Array(n);if(t.length!==i.length)return!1;for(let s=0,o=t.length;s<o;s++)if(t[s]!==i[s])return!1;return!0}acceptEdit(e,n,t){this._acceptDeleteRange(e),this._acceptInsertText(new Position(e.startLineNumber,e.startColumn),n,t)}_acceptDeleteRange(e){const n=e.startLineNumber-1;if(n>=this._len)return;if(e.startLineNumber===e.endLineNumber){if(e.startColumn===e.endColumn)return;return void(this._lineTokens[n]=ContiguousTokensEditing.delete(this._lineTokens[n],e.startColumn-1,e.endColumn-1))}this._lineTokens[n]=ContiguousTokensEditing.deleteEnding(this._lineTokens[n],e.startColumn-1);const t=e.endLineNumber-1;let i=null;t<this._len&&(i=ContiguousTokensEditing.deleteBeginning(this._lineTokens[t],e.endColumn-1)),this._lineTokens[n]=ContiguousTokensEditing.append(this._lineTokens[n],i),this._deleteLines(e.startLineNumber,e.endLineNumber-e.startLineNumber)}_acceptInsertText(e,n,t){if(0===n&&0===t)return;const i=e.lineNumber-1;i>=this._len||(0!==n?(this._lineTokens[i]=ContiguousTokensEditing.deleteEnding(this._lineTokens[i],e.column-1),this._lineTokens[i]=ContiguousTokensEditing.insert(this._lineTokens[i],e.column-1,t),this._insertLines(e.lineNumber,n)):this._lineTokens[i]=ContiguousTokensEditing.insert(this._lineTokens[i],e.column-1,t))}}function getDefaultMetadata(e){return(16384|e<<0|2<<23)>>>0}