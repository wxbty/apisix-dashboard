import{Selection}from"../core/selection.js";export class ReplaceCommand{constructor(t,e,i=!1){this._range=t,this._text=e,this.insertsAutoWhitespace=i}getEditOperations(t,e){e.addTrackedEditOperation(this._range,this._text)}computeCursorState(t,e){const i=e.getInverseEditOperations(),s=i[0].range;return Selection.fromPositions(s.getEndPosition())}}export class ReplaceCommandThatSelectsText{constructor(t,e){this._range=t,this._text=e}getEditOperations(t,e){e.addTrackedEditOperation(this._range,this._text)}computeCursorState(t,e){const i=e.getInverseEditOperations(),s=i[0].range;return Selection.fromRange(s,0)}}export class ReplaceCommandWithoutChangingPosition{constructor(t,e,i=!1){this._range=t,this._text=e,this.insertsAutoWhitespace=i}getEditOperations(t,e){e.addTrackedEditOperation(this._range,this._text)}computeCursorState(t,e){const i=e.getInverseEditOperations(),s=i[0].range;return Selection.fromPositions(s.getStartPosition())}}export class ReplaceCommandWithOffsetCursorState{constructor(t,e,i,s,r=!1){this._range=t,this._text=e,this._columnDeltaOffset=s,this._lineNumberDeltaOffset=i,this.insertsAutoWhitespace=r}getEditOperations(t,e){e.addTrackedEditOperation(this._range,this._text)}computeCursorState(t,e){const i=e.getInverseEditOperations(),s=i[0].range;return Selection.fromPositions(s.getEndPosition().delta(this._lineNumberDeltaOffset,this._columnDeltaOffset))}}export class ReplaceCommandThatPreservesSelection{constructor(t,e,i,s=!1){this._range=t,this._text=e,this._initialSelection=i,this._forceMoveMarkers=s,this._selectionId=null}getEditOperations(t,e){e.addTrackedEditOperation(this._range,this._text,this._forceMoveMarkers),this._selectionId=e.trackSelection(this._initialSelection)}computeCursorState(t,e){return e.getTrackedSelection(this._selectionId)}}