import*as strings from"../../../base/common/strings.js";import{EditOperation}from"../core/editOperation.js";import{Range}from"../core/range.js";export class TrimTrailingWhitespaceCommand{constructor(e,t){this._selection=e,this._cursors=t,this._selectionId=null}getEditOperations(e,t){const n=trimTrailingWhitespace(e,this._cursors);for(let i=0,o=n.length;i<o;i++){const e=n[i];t.addEditOperation(e.range,e.text)}this._selectionId=t.trackSelection(this._selection)}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}}export function trimTrailingWhitespace(e,t){t.sort(((e,t)=>e.lineNumber===t.lineNumber?e.column-t.column:e.lineNumber-t.lineNumber));for(let s=t.length-2;s>=0;s--)t[s].lineNumber===t[s+1].lineNumber&&t.splice(s,1);const n=[];let i=0,o=0;const r=t.length;for(let s=1,l=e.getLineCount();s<=l;s++){const l=e.getLineContent(s),c=l.length+1;let a=0;if(o<r&&t[o].lineNumber===s&&(a=t[o].column,o++,a===c))continue;if(0===l.length)continue;const m=strings.lastNonWhitespaceIndex(l);let u=0;if(-1===m)u=1;else{if(m===l.length-1)continue;u=m+2}u=Math.max(a,u),n[i++]=EditOperation.delete(new Range(s,u,s,c))}return n}