var __decorate=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(s=(o<3?r(s):o>3?r(t,n,s):r(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},__param=this&&this.__param||function(e,t){return function(n,i){t(n,i,e)}};import{Emitter}from"../../../base/common/event.js";import{Disposable,toDisposable}from"../../../base/common/lifecycle.js";import*as strings from"../../../base/common/strings.js";import{DEFAULT_WORD_REGEXP,ensureValidWordDefinition}from"../core/wordHelper.js";import{IndentAction,AutoClosingPairs}from"./languageConfiguration.js";import{createScopedLineTokens}from"./supports.js";import{CharacterPairSupport}from"./supports/characterPair.js";import{BracketElectricCharacterSupport}from"./supports/electricCharacter.js";import{IndentRulesSupport}from"./supports/indentRules.js";import{OnEnterSupport}from"./supports/onEnter.js";import{RichEditBrackets}from"./supports/richEditBrackets.js";import{createDecorator}from"../../../platform/instantiation/common/instantiation.js";import{IConfigurationService}from"../../../platform/configuration/common/configuration.js";import{ILanguageService}from"../services/language.js";import{registerSingleton}from"../../../platform/instantiation/common/extensions.js";export class LanguageConfigurationServiceChangeEvent{constructor(e){this.languageId=e}affects(e){return!this.languageId||this.languageId===e}}export const ILanguageConfigurationService=createDecorator("languageConfigurationService");let LanguageConfigurationService=class extends Disposable{constructor(e,t){super(),this.configurationService=e,this.languageService=t,this.onDidChangeEmitter=this._register(new Emitter),this.onDidChange=this.onDidChangeEmitter.event,this.configurations=new Map;const n=new Set(Object.values(customizedLanguageConfigKeys));this._register(this.configurationService.onDidChangeConfiguration((e=>{const t=e.change.keys.some((e=>n.has(e))),i=e.change.overrides.filter((([e,t])=>t.some((e=>n.has(e))))).map((([e])=>e));if(t)this.configurations.clear(),this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(void 0));else for(const n of i)this.languageService.isRegisteredLanguageId(n)&&(this.configurations.delete(n),this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(n)))}))),this._register(LanguageConfigurationRegistry.onDidChange((e=>{this.configurations.delete(e.languageId),this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId))})))}getLanguageConfiguration(e){let t=this.configurations.get(e);return t||(t=computeConfig(e,this.configurationService,this.languageService),this.configurations.set(e,t)),t}};LanguageConfigurationService=__decorate([__param(0,IConfigurationService),__param(1,ILanguageService)],LanguageConfigurationService);export{LanguageConfigurationService};function computeConfig(e,t,n){let i=LanguageConfigurationRegistry.getLanguageConfiguration(e);if(!i){if(!n.isRegisteredLanguageId(e))throw new Error("Unexpected languageId");i=new ResolvedLanguageConfiguration(e,{})}const r=getCustomizedLanguageConfig(i.languageId,t),o=combineLanguageConfigurations([i.underlyingConfig,r]),s=new ResolvedLanguageConfiguration(i.languageId,o);return s}const customizedLanguageConfigKeys={brackets:"editor.language.brackets",colorizedBracketPairs:"editor.language.colorizedBracketPairs"};function getCustomizedLanguageConfig(e,t){const n=t.getValue(customizedLanguageConfigKeys.brackets,{overrideIdentifier:e}),i=t.getValue(customizedLanguageConfigKeys.colorizedBracketPairs,{overrideIdentifier:e});return{brackets:validateBracketPairs(n),colorizedBracketPairs:validateBracketPairs(i)}}function validateBracketPairs(e){if(Array.isArray(e))return e.map((e=>{if(Array.isArray(e)&&2===e.length)return[e[0],e[1]]})).filter((e=>!!e))}export class LanguageConfigurationChangeEvent{constructor(e){this.languageId=e}}export class LanguageConfigurationRegistryImpl{constructor(){this._entries=new Map,this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event}register(e,t,n=0){let i=this._entries.get(e);i||(i=new ComposedLanguageConfiguration(e),this._entries.set(e,i));const r=i.register(t,n);return this._onDidChange.fire(new LanguageConfigurationChangeEvent(e)),toDisposable((()=>{r.dispose(),this._onDidChange.fire(new LanguageConfigurationChangeEvent(e))}))}getLanguageConfiguration(e){const t=this._entries.get(e);return(null===t||void 0===t?void 0:t.getResolvedConfiguration())||null}getComments(e){const t=this.getLanguageConfiguration(e);return t&&t.comments||null}getIndentRulesSupport(e){const t=this.getLanguageConfiguration(e);return t&&t.indentRulesSupport||null}getPrecedingValidLine(e,t,n){const i=e.getLanguageIdAtPosition(t,0);if(t>1){let r,o=-1;for(r=t-1;r>=1;r--){if(e.getLanguageIdAtPosition(r,0)!==i)return o;const t=e.getLineContent(r);if(!n.shouldIgnore(t)&&!/^\s+$/.test(t)&&""!==t)return r;o=r}}return-1}getInheritIndentForLine(e,t,n,i=!0){if(e<4)return null;const r=this.getIndentRulesSupport(t.getLanguageId());if(!r)return null;if(n<=1)return{indentation:"",action:null};const o=this.getPrecedingValidLine(t,n,r);if(o<0)return null;if(o<1)return{indentation:"",action:null};const s=t.getLineContent(o);if(r.shouldIncrease(s)||r.shouldIndentNextLine(s))return{indentation:strings.getLeadingWhitespace(s),action:IndentAction.Indent,line:o};if(r.shouldDecrease(s))return{indentation:strings.getLeadingWhitespace(s),action:null,line:o};{if(1===o)return{indentation:strings.getLeadingWhitespace(t.getLineContent(o)),action:null,line:o};const e=o-1,n=r.getIndentMetadata(t.getLineContent(e));if(!(3&n)&&4&n){let n=0;for(let i=e-1;i>0;i--)if(!r.shouldIndentNextLine(t.getLineContent(i))){n=i;break}return{indentation:strings.getLeadingWhitespace(t.getLineContent(n+1)),action:null,line:n+1}}if(i)return{indentation:strings.getLeadingWhitespace(t.getLineContent(o)),action:null,line:o};for(let i=o;i>0;i--){const e=t.getLineContent(i);if(r.shouldIncrease(e))return{indentation:strings.getLeadingWhitespace(e),action:IndentAction.Indent,line:i};if(r.shouldIndentNextLine(e)){let e=0;for(let n=i-1;n>0;n--)if(!r.shouldIndentNextLine(t.getLineContent(i))){e=n;break}return{indentation:strings.getLeadingWhitespace(t.getLineContent(e+1)),action:null,line:e+1}}if(r.shouldDecrease(e))return{indentation:strings.getLeadingWhitespace(e),action:null,line:i}}return{indentation:strings.getLeadingWhitespace(t.getLineContent(1)),action:null,line:1}}}getGoodIndentForLine(e,t,n,i,r){if(e<4)return null;const o=this.getLanguageConfiguration(n);if(!o)return null;const s=this.getIndentRulesSupport(n);if(!s)return null;const a=this.getInheritIndentForLine(e,t,i),g=t.getLineContent(i);if(a){const n=a.line;if(void 0!==n){const i=o.onEnter(e,"",t.getLineContent(n),"");if(i){let e=strings.getLeadingWhitespace(t.getLineContent(n));return i.removeText&&(e=e.substring(0,e.length-i.removeText)),i.indentAction===IndentAction.Indent||i.indentAction===IndentAction.IndentOutdent?e=r.shiftIndent(e):i.indentAction===IndentAction.Outdent&&(e=r.unshiftIndent(e)),s.shouldDecrease(g)&&(e=r.unshiftIndent(e)),i.appendText&&(e+=i.appendText),strings.getLeadingWhitespace(e)}}return s.shouldDecrease(g)?a.action===IndentAction.Indent?a.indentation:r.unshiftIndent(a.indentation):a.action===IndentAction.Indent?r.shiftIndent(a.indentation):a.indentation}return null}getIndentForEnter(e,t,n,i){if(e<4)return null;t.forceTokenization(n.startLineNumber);const r=t.getLineTokens(n.startLineNumber),o=createScopedLineTokens(r,n.startColumn-1),s=o.getLineContent();let a,g,u=!1;if(o.firstCharOffset>0&&r.getLanguageId(0)!==o.languageId?(u=!0,a=s.substr(0,n.startColumn-1-o.firstCharOffset)):a=r.getLineContent().substring(0,n.startColumn-1),n.isEmpty())g=s.substr(n.startColumn-1-o.firstCharOffset);else{const e=this.getScopedLineTokens(t,n.endLineNumber,n.endColumn);g=e.getLineContent().substr(n.endColumn-1-o.firstCharOffset)}const c=this.getIndentRulesSupport(o.languageId);if(!c)return null;const l=a,d=strings.getLeadingWhitespace(a),f={getLineTokens:e=>t.getLineTokens(e),getLanguageId:()=>t.getLanguageId(),getLanguageIdAtPosition:(e,n)=>t.getLanguageIdAtPosition(e,n),getLineContent:e=>e===n.startLineNumber?l:t.getLineContent(e)},h=strings.getLeadingWhitespace(r.getLineContent()),C=this.getInheritIndentForLine(e,f,n.startLineNumber+1);if(!C){const e=u?h:d;return{beforeEnter:e,afterEnter:e}}let p=u?h:C.indentation;return C.action===IndentAction.Indent&&(p=i.shiftIndent(p)),c.shouldDecrease(g)&&(p=i.unshiftIndent(p)),{beforeEnter:u?h:d,afterEnter:p}}getIndentActionForType(e,t,n,i,r){if(e<4)return null;const o=this.getScopedLineTokens(t,n.startLineNumber,n.startColumn);if(o.firstCharOffset)return null;const s=this.getIndentRulesSupport(o.languageId);if(!s)return null;const a=o.getLineContent(),g=a.substr(0,n.startColumn-1-o.firstCharOffset);let u;if(n.isEmpty())u=a.substr(n.startColumn-1-o.firstCharOffset);else{const e=this.getScopedLineTokens(t,n.endLineNumber,n.endColumn);u=e.getLineContent().substr(n.endColumn-1-o.firstCharOffset)}if(!s.shouldDecrease(g+u)&&s.shouldDecrease(g+i+u)){const i=this.getInheritIndentForLine(e,t,n.startLineNumber,!1);if(!i)return null;let o=i.indentation;return i.action!==IndentAction.Indent&&(o=r.unshiftIndent(o)),o}return null}getIndentMetadata(e,t){const n=this.getIndentRulesSupport(e.getLanguageId());return n?t<1||t>e.getLineCount()?null:n.getIndentMetadata(e.getLineContent(t)):null}getEnterAction(e,t,n){const i=this.getScopedLineTokens(t,n.startLineNumber,n.startColumn),r=this.getLanguageConfiguration(i.languageId);if(!r)return null;const o=i.getLineContent(),s=o.substr(0,n.startColumn-1-i.firstCharOffset);let a;if(n.isEmpty())a=o.substr(n.startColumn-1-i.firstCharOffset);else{const e=this.getScopedLineTokens(t,n.endLineNumber,n.endColumn);a=e.getLineContent().substr(n.endColumn-1-i.firstCharOffset)}let g="";if(n.startLineNumber>1&&0===i.firstCharOffset){const e=this.getScopedLineTokens(t,n.startLineNumber-1);e.languageId===i.languageId&&(g=e.getLineContent())}const u=r.onEnter(e,g,s,a);if(!u)return null;const c=u.indentAction;let l=u.appendText;const d=u.removeText||0;l?c===IndentAction.Indent&&(l="\t"+l):l=c===IndentAction.Indent||c===IndentAction.IndentOutdent?"\t":"";let f=this.getIndentationAtPosition(t,n.startLineNumber,n.startColumn);return d&&(f=f.substring(0,f.length-d)),{indentAction:c,appendText:l,removeText:d,indentation:f}}getIndentationAtPosition(e,t,n){const i=e.getLineContent(t);let r=strings.getLeadingWhitespace(i);return r.length>n-1&&(r=r.substring(0,n-1)),r}getScopedLineTokens(e,t,n){e.forceTokenization(t);const i=e.getLineTokens(t),r="undefined"===typeof n?e.getLineMaxColumn(t)-1:n-1;return createScopedLineTokens(i,r)}}export const LanguageConfigurationRegistry=new LanguageConfigurationRegistryImpl;class ComposedLanguageConfiguration{constructor(e){this.languageId=e,this._resolved=null,this._entries=[],this._order=0,this._resolved=null}register(e,t){const n=new LanguageConfigurationContribution(e,t,++this._order);return this._entries.push(n),this._resolved=null,toDisposable((()=>{for(let e=0;e<this._entries.length;e++)if(this._entries[e]===n){this._entries.splice(e,1),this._resolved=null;break}}))}getResolvedConfiguration(){if(!this._resolved){const e=this._resolve();e&&(this._resolved=new ResolvedLanguageConfiguration(this.languageId,e))}return this._resolved}_resolve(){return 0===this._entries.length?null:(this._entries.sort(LanguageConfigurationContribution.cmp),combineLanguageConfigurations(this._entries.map((e=>e.configuration))))}}function combineLanguageConfigurations(e){let t={comments:void 0,brackets:void 0,wordPattern:void 0,indentationRules:void 0,onEnterRules:void 0,autoClosingPairs:void 0,surroundingPairs:void 0,autoCloseBefore:void 0,folding:void 0,colorizedBracketPairs:void 0,__electricCharacterSupport:void 0};for(const n of e)t={comments:n.comments||t.comments,brackets:n.brackets||t.brackets,wordPattern:n.wordPattern||t.wordPattern,indentationRules:n.indentationRules||t.indentationRules,onEnterRules:n.onEnterRules||t.onEnterRules,autoClosingPairs:n.autoClosingPairs||t.autoClosingPairs,surroundingPairs:n.surroundingPairs||t.surroundingPairs,autoCloseBefore:n.autoCloseBefore||t.autoCloseBefore,folding:n.folding||t.folding,colorizedBracketPairs:n.colorizedBracketPairs||t.colorizedBracketPairs,__electricCharacterSupport:n.__electricCharacterSupport||t.__electricCharacterSupport};return t}class LanguageConfigurationContribution{constructor(e,t,n){this.configuration=e,this.priority=t,this.order=n}static cmp(e,t){return e.priority===t.priority?e.order-t.order:e.priority-t.priority}}export class ResolvedLanguageConfiguration{constructor(e,t){this.languageId=e,this.underlyingConfig=t,this._brackets=null,this._electricCharacter=null,this._onEnterSupport=this.underlyingConfig.brackets||this.underlyingConfig.indentationRules||this.underlyingConfig.onEnterRules?new OnEnterSupport(this.underlyingConfig):null,this.comments=ResolvedLanguageConfiguration._handleComments(this.underlyingConfig),this.characterPair=new CharacterPairSupport(this.underlyingConfig),this.wordDefinition=this.underlyingConfig.wordPattern||DEFAULT_WORD_REGEXP,this.indentationRules=this.underlyingConfig.indentationRules,this.underlyingConfig.indentationRules?this.indentRulesSupport=new IndentRulesSupport(this.underlyingConfig.indentationRules):this.indentRulesSupport=null,this.foldingRules=this.underlyingConfig.folding||{}}getWordDefinition(){return ensureValidWordDefinition(this.wordDefinition)}get brackets(){return!this._brackets&&this.underlyingConfig.brackets&&(this._brackets=new RichEditBrackets(this.languageId,this.underlyingConfig.brackets)),this._brackets}get electricCharacter(){return this._electricCharacter||(this._electricCharacter=new BracketElectricCharacterSupport(this.brackets)),this._electricCharacter}onEnter(e,t,n,i){return this._onEnterSupport?this._onEnterSupport.onEnter(e,t,n,i):null}getAutoClosingPairs(){return new AutoClosingPairs(this.characterPair.getAutoClosingPairs())}getAutoCloseBeforeSet(){return this.characterPair.getAutoCloseBeforeSet()}getSurroundingPairs(){return this.characterPair.getSurroundingPairs()}static _handleComments(e){const t=e.comments;if(!t)return null;const n={};if(t.lineComment&&(n.lineCommentToken=t.lineComment),t.blockComment){const[e,i]=t.blockComment;n.blockCommentStartToken=e,n.blockCommentEndToken=i}return n}}registerSingleton(ILanguageConfigurationService,LanguageConfigurationService);