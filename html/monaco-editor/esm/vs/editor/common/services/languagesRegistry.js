import{coalesce}from"../../../base/common/arrays.js";import{onUnexpectedError}from"../../../base/common/errors.js";import{Emitter}from"../../../base/common/event.js";import{Disposable}from"../../../base/common/lifecycle.js";import{regExpLeadsToEndlessLoop}from"../../../base/common/strings.js";import{clearLanguageAssociations,getMimeTypes,registerLanguageAssociation}from"./languagesAssociations.js";import{ModesRegistry,PLAINTEXT_LANGUAGE_ID}from"../languages/modesRegistry.js";import{Extensions}from"../../../platform/configuration/common/configurationRegistry.js";import{Registry}from"../../../platform/registry/common/platform.js";const hasOwnProperty=Object.prototype.hasOwnProperty,NULL_LANGUAGE_ID="vs.editor.nullLanguage";export class LanguageIdCodec{constructor(){this._languageIdToLanguage=[],this._languageToLanguageId=new Map,this._register(NULL_LANGUAGE_ID,0),this._register(PLAINTEXT_LANGUAGE_ID,1),this._nextLanguageId=2}_register(e,s){this._languageIdToLanguage[s]=e,this._languageToLanguageId.set(e,s)}register(e){if(this._languageToLanguageId.has(e))return;const s=this._nextLanguageId++;this._register(e,s)}encodeLanguageId(e){return this._languageToLanguageId.get(e)||0}decodeLanguageId(e){return this._languageIdToLanguage[e]||NULL_LANGUAGE_ID}}export class LanguagesRegistry extends Disposable{constructor(e=!0,s=!1){super(),this._onDidChange=this._register(new Emitter),this.onDidChange=this._onDidChange.event,LanguagesRegistry.instanceCount++,this._warnOnOverwrite=s,this.languageIdCodec=new LanguageIdCodec,this._dynamicLanguages=[],this._languages={},this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},e&&(this._initializeFromRegistry(),this._register(ModesRegistry.onDidChangeLanguages((e=>{this._initializeFromRegistry()}))))}dispose(){LanguagesRegistry.instanceCount--,super.dispose()}_initializeFromRegistry(){this._languages={},this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},clearLanguageAssociations();const e=[].concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);this._registerLanguages(e)}_registerLanguages(e){for(const s of e)this._registerLanguage(s);this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},Object.keys(this._languages).forEach((e=>{const s=this._languages[e];s.name&&(this._nameMap[s.name]=s.identifier),s.aliases.forEach((e=>{this._lowercaseNameMap[e.toLowerCase()]=s.identifier})),s.mimetypes.forEach((e=>{this._mimeTypesMap[e]=s.identifier}))})),Registry.as(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds()),this._onDidChange.fire()}_registerLanguage(e){const s=e.id;let a;hasOwnProperty.call(this._languages,s)?a=this._languages[s]:(this.languageIdCodec.register(s),a={identifier:s,name:null,mimetypes:[],aliases:[],extensions:[],filenames:[],configurationFiles:[],icons:[]},this._languages[s]=a),this._mergeLanguage(a,e)}_mergeLanguage(e,s){const a=s.id;let i=null;if(Array.isArray(s.mimetypes)&&s.mimetypes.length>0&&(e.mimetypes.push(...s.mimetypes),i=s.mimetypes[0]),i||(i=`text/x-${a}`,e.mimetypes.push(i)),Array.isArray(s.extensions)){s.configuration?e.extensions=s.extensions.concat(e.extensions):e.extensions=e.extensions.concat(s.extensions);for(let e of s.extensions)registerLanguageAssociation({id:a,mime:i,extension:e},this._warnOnOverwrite)}if(Array.isArray(s.filenames))for(let g of s.filenames)registerLanguageAssociation({id:a,mime:i,filename:g},this._warnOnOverwrite),e.filenames.push(g);if(Array.isArray(s.filenamePatterns))for(let g of s.filenamePatterns)registerLanguageAssociation({id:a,mime:i,filepattern:g},this._warnOnOverwrite);if("string"===typeof s.firstLine&&s.firstLine.length>0){let e=s.firstLine;"^"!==e.charAt(0)&&(e="^"+e);try{const s=new RegExp(e);regExpLeadsToEndlessLoop(s)||registerLanguageAssociation({id:a,mime:i,firstline:s},this._warnOnOverwrite)}catch(r){onUnexpectedError(r)}}e.aliases.push(a);let t=null;if("undefined"!==typeof s.aliases&&Array.isArray(s.aliases)&&(t=0===s.aliases.length?[null]:s.aliases),null!==t)for(const g of t)g&&0!==g.length&&e.aliases.push(g);const n=null!==t&&t.length>0;if(n&&null===t[0]);else{const s=(n?t[0]:null)||a;!n&&e.name||(e.name=s)}s.configuration&&e.configurationFiles.push(s.configuration),s.icon&&e.icons.push(s.icon)}isRegisteredLanguageId(e){return!!e&&hasOwnProperty.call(this._languages,e)}getRegisteredLanguageIds(){return Object.keys(this._languages)}getLanguageIdByLanguageName(e){const s=e.toLowerCase();return hasOwnProperty.call(this._lowercaseNameMap,s)?this._lowercaseNameMap[s]:null}getLanguageIdByMimeType(e){return e&&hasOwnProperty.call(this._mimeTypesMap,e)?this._mimeTypesMap[e]:null}guessLanguageIdByFilepathOrFirstLine(e,s){if(!e&&!s)return[];const a=getMimeTypes(e,s);return coalesce(a.map((e=>this.getLanguageIdByMimeType(e))))}}LanguagesRegistry.instanceCount=0;