import{match as matchGlobPattern}from"../../base/common/glob.js";import{normalize}from"../../base/common/path.js";export function score(e,t,r,s){if(Array.isArray(e)){let n=0;for(const o of e){const e=score(o,t,r,s);if(10===e)return e;e>n&&(n=e)}return n}if("string"===typeof e)return s?"*"===e?5:e===r?10:0:0;if(e){const{language:n,pattern:o,scheme:a,hasAccessToAllModels:i}=e;if(!s&&!i)return 0;let f=0;if(a)if(a===t.scheme)f=10;else{if("*"!==a)return 0;f=5}if(n)if(n===r)f=10;else{if("*"!==n)return 0;f=Math.max(f,5)}if(o){let e;if(e="string"===typeof o?o:Object.assign(Object.assign({},o),{base:normalize(o.base)}),e!==t.fsPath&&!matchGlobPattern(e,t.fsPath))return 0;f=10}return f}return 0}