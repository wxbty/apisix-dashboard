import{SingleCursorState}from"./cursorCommon.js";import{Position}from"../core/position.js";import{Range}from"../core/range.js";export class ColumnSelection{static columnSelect(e,o,i,n,t,m){const u=Math.abs(t-i)+1,l=i>t,r=n>m,s=n<m,c=[];for(let a=0;a<u;a++){const t=i+(l?-a:a),u=e.columnFromVisibleColumn(o,t,n),V=e.columnFromVisibleColumn(o,t,m),w=e.visibleColumnFromColumn(o,new Position(t,u)),C=e.visibleColumnFromColumn(o,new Position(t,V));if(s){if(w>m)continue;if(C<n)continue}if(r){if(C>n)continue;if(w<m)continue}c.push(new SingleCursorState(new Range(t,u,t,u),0,new Position(t,V),0))}if(0===c.length)for(let a=0;a<u;a++){const e=i+(l?-a:a),n=o.getLineMaxColumn(e);c.push(new SingleCursorState(new Range(e,n,e,n),0,new Position(e,n),0))}return{viewStates:c,reversed:l,fromLineNumber:i,fromVisualColumn:n,toLineNumber:t,toVisualColumn:m}}static columnSelectLeft(e,o,i){let n=i.toViewVisualColumn;return n>0&&n--,ColumnSelection.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,i.toViewLineNumber,n)}static columnSelectRight(e,o,i){let n=0;const t=Math.min(i.fromViewLineNumber,i.toViewLineNumber),m=Math.max(i.fromViewLineNumber,i.toViewLineNumber);for(let l=t;l<=m;l++){const i=o.getLineMaxColumn(l),t=e.visibleColumnFromColumn(o,new Position(l,i));n=Math.max(n,t)}let u=i.toViewVisualColumn;return u<n&&u++,this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,i.toViewLineNumber,u)}static columnSelectUp(e,o,i,n){const t=n?e.pageSize:1,m=Math.max(1,i.toViewLineNumber-t);return this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,m,i.toViewVisualColumn)}static columnSelectDown(e,o,i,n){const t=n?e.pageSize:1,m=Math.min(o.getLineCount(),i.toViewLineNumber+t);return this.columnSelect(e,o,i.fromViewLineNumber,i.fromViewVisualColumn,m,i.toViewVisualColumn)}}