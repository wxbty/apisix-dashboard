import{CursorColumns}from"../core/cursorColumns.js";export class AtomicTabMoveOperations{static whitespaceVisibleColumn(e,r,t){const o=e.length;let s=0,n=-1,a=-1;for(let c=0;c<o;c++){if(c===r)return[n,a,s];s%t===0&&(n=c,a=s);const o=e.charCodeAt(c);switch(o){case 32:s+=1;break;case 9:s=CursorColumns.nextRenderTabStop(s,t);break;default:return[-1,-1,-1]}}return r===o?[n,a,s]:[-1,-1,-1]}static atomicPosition(e,r,t,o){const s=e.length,[n,a,c]=AtomicTabMoveOperations.whitespaceVisibleColumn(e,r,t);if(-1===c)return-1;let u;switch(o){case 0:u=!0;break;case 1:u=!1;break;case 2:if(c%t===0)return r;u=c%t<=t/2;break}if(u){if(-1===n)return-1;let r=a;for(let o=n;o<s;++o){if(r===a+t)return n;const s=e.charCodeAt(o);switch(s){case 32:r+=1;break;case 9:r=CursorColumns.nextRenderTabStop(r,t);break;default:return-1}}return r===a+t?n:-1}const i=CursorColumns.nextRenderTabStop(c,t);let l=c;for(let b=r;b<s;b++){if(l===i)return b;const r=e.charCodeAt(b);switch(r){case 32:l+=1;break;case 9:l=CursorColumns.nextRenderTabStop(l,t);break;default:return-1}}return l===i?s:-1}}