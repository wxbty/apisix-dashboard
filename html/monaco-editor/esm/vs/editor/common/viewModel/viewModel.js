import*as strings from"../../../base/common/strings.js";import{Range}from"../core/range.js";export class Viewport{constructor(t,i,s,n){this._viewportBrand=void 0,this.top=0|t,this.left=0|i,this.width=0|s,this.height=0|n}}export class MinimapLinesRenderingData{constructor(t,i){this.tabSize=t,this.data=i}}export class ViewLineData{constructor(t,i,s,n,e,o,a){this._viewLineDataBrand=void 0,this.content=t,this.continuesWithWrappedLine=i,this.minColumn=s,this.maxColumn=n,this.startVisibleColumn=e,this.tokens=o,this.inlineDecorations=a}}export class ViewLineRenderingData{constructor(t,i,s,n,e,o,a,r,c,h){this.minColumn=t,this.maxColumn=i,this.content=s,this.continuesWithWrappedLine=n,this.isBasicASCII=ViewLineRenderingData.isBasicASCII(s,o),this.containsRTL=ViewLineRenderingData.containsRTL(s,this.isBasicASCII,e),this.tokens=a,this.inlineDecorations=r,this.tabSize=c,this.startVisibleColumn=h}static isBasicASCII(t,i){return!i||strings.isBasicASCII(t)}static containsRTL(t,i,s){return!(i||!s)&&strings.containsRTL(t)}}export class InlineDecoration{constructor(t,i,s){this.range=t,this.inlineClassName=i,this.type=s}}export class SingleLineInlineDecoration{constructor(t,i,s,n){this.startOffset=t,this.endOffset=i,this.inlineClassName=s,this.inlineClassNameAffectsLetterSpacing=n}toInlineDecoration(t){return new InlineDecoration(new Range(t,this.startOffset+1,t,this.endOffset+1),this.inlineClassName,this.inlineClassNameAffectsLetterSpacing?3:0)}}export class ViewModelDecoration{constructor(t,i){this._viewModelDecorationBrand=void 0,this.range=t,this.options=i}}export class OverviewRulerDecorationsGroup{constructor(t,i,s){this.color=t,this.zIndex=i,this.data=s}static cmp(t,i){return t.zIndex===i.zIndex?t.color<i.color?-1:t.color>i.color?1:0:t.zIndex-i.zIndex}}