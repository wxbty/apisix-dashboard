import*as strings from"../../../../base/common/strings.js";import{Range}from"../../../common/core/range.js";import{CancellationTokenSource}from"../../../../base/common/cancellation.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{EditorKeybindingCancellationTokenSource}from"./keybindingCancellation.js";export class EditorState{constructor(e,s){if(this.flags=s,0!==(1&this.flags)){const s=e.getModel();this.modelVersionId=s?strings.format("{0}#{1}",s.uri.toString(),s.getVersionId()):null}else this.modelVersionId=null;0!==(4&this.flags)?this.position=e.getPosition():this.position=null,0!==(2&this.flags)?this.selection=e.getSelection():this.selection=null,0!==(8&this.flags)?(this.scrollLeft=e.getScrollLeft(),this.scrollTop=e.getScrollTop()):(this.scrollLeft=-1,this.scrollTop=-1)}_equals(e){if(!(e instanceof EditorState))return!1;const s=e;return this.modelVersionId===s.modelVersionId&&(this.scrollLeft===s.scrollLeft&&this.scrollTop===s.scrollTop&&(!(!this.position&&s.position||this.position&&!s.position||this.position&&s.position&&!this.position.equals(s.position))&&!(!this.selection&&s.selection||this.selection&&!s.selection||this.selection&&s.selection&&!this.selection.equalsRange(s.selection))))}validate(e){return this._equals(new EditorState(e,this.flags))}}export class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource{constructor(e,s,o,t){super(e,t),this._listener=new DisposableStore,4&s&&this._listener.add(e.onDidChangeCursorPosition((e=>{o&&Range.containsPosition(o,e.position)||this.cancel()}))),2&s&&this._listener.add(e.onDidChangeCursorSelection((e=>{o&&Range.containsRange(o,e.selection)||this.cancel()}))),8&s&&this._listener.add(e.onDidScrollChange((e=>this.cancel()))),1&s&&(this._listener.add(e.onDidChangeModel((e=>this.cancel()))),this._listener.add(e.onDidChangeModelContent((e=>this.cancel()))))}dispose(){this._listener.dispose(),super.dispose()}}export class TextModelCancellationTokenSource extends CancellationTokenSource{constructor(e,s){super(s),this._listener=e.onDidChangeContent((()=>this.cancel()))}dispose(){this._listener.dispose(),super.dispose()}}