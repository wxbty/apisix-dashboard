import{Emitter}from"../../../../base/common/event.js";export class ColorPickerModel{constructor(t,e,o){this.presentationIndex=o,this._onColorFlushed=new Emitter,this.onColorFlushed=this._onColorFlushed.event,this._onDidChangeColor=new Emitter,this.onDidChangeColor=this._onDidChangeColor.event,this._onDidChangePresentation=new Emitter,this.onDidChangePresentation=this._onDidChangePresentation.event,this.originalColor=t,this._color=t,this._colorPresentations=e}get color(){return this._color}set color(t){this._color.equals(t)||(this._color=t,this._onDidChangeColor.fire(t))}get presentation(){return this.colorPresentations[this.presentationIndex]}get colorPresentations(){return this._colorPresentations}set colorPresentations(t){this._colorPresentations=t,this.presentationIndex>t.length-1&&(this.presentationIndex=0),this._onDidChangePresentation.fire(this.presentation)}selectNextColorPresentation(){this.presentationIndex=(this.presentationIndex+1)%this.colorPresentations.length,this.flushColor(),this._onDidChangePresentation.fire(this.presentation)}guessColorPresentation(t,e){for(let o=0;o<this.colorPresentations.length;o++)if(e.toLowerCase()===this.colorPresentations[o].label){this.presentationIndex=o,this._onDidChangePresentation.fire(this.presentation);break}}flushColor(){this._onColorFlushed.fire(this._color)}}