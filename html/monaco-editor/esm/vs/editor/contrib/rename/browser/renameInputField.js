var __decorate=this&&this.__decorate||function(t,e,i,n){var o,s=arguments.length,r=s<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(t,e,i,n);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(r=(s<3?o(r):s>3?o(e,i,r):o(e,i))||r);return s>3&&r&&Object.defineProperty(e,i,r),r},__param=this&&this.__param||function(t,e){return function(i,n){e(i,n,t)}};import{DisposableStore}from"../../../../base/common/lifecycle.js";import"./renameInputField.css";import{Position}from"../../../common/core/position.js";import{localize}from"../../../../nls.js";import{IContextKeyService,RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";import{IKeybindingService}from"../../../../platform/keybinding/common/keybinding.js";import{editorWidgetBackground,inputBackground,inputBorder,inputForeground,widgetShadow}from"../../../../platform/theme/common/colorRegistry.js";import{IThemeService}from"../../../../platform/theme/common/themeService.js";export const CONTEXT_RENAME_INPUT_VISIBLE=new RawContextKey("renameInputVisible",!1,localize("renameInputVisible","Whether the rename input widget is visible"));let RenameInputField=class{constructor(t,e,i,n,o){this._editor=t,this._acceptKeybindings=e,this._themeService=i,this._keybindingService=n,this._disposables=new DisposableStore,this.allowEditorOverflow=!0,this._visibleContextKey=CONTEXT_RENAME_INPUT_VISIBLE.bindTo(o),this._editor.addContentWidget(this),this._disposables.add(this._editor.onDidChangeConfiguration((t=>{t.hasChanged(44)&&this._updateFont()}))),this._disposables.add(i.onDidColorThemeChange(this._updateStyles,this))}dispose(){this._disposables.dispose(),this._editor.removeContentWidget(this)}getId(){return"__renameInputWidget"}getDomNode(){if(!this._domNode){this._domNode=document.createElement("div"),this._domNode.className="monaco-editor rename-box",this._input=document.createElement("input"),this._input.className="rename-input",this._input.type="text",this._input.setAttribute("aria-label",localize("renameAriaLabel","Rename input. Type new name and press Enter to commit.")),this._domNode.appendChild(this._input),this._label=document.createElement("div"),this._label.className="rename-label",this._domNode.appendChild(this._label);const t=()=>{var t,e;const[i,n]=this._acceptKeybindings;this._keybindingService.lookupKeybinding(i),this._label.innerText=localize({key:"label",comment:['placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"']},"{0} to Rename, {1} to Preview",null===(t=this._keybindingService.lookupKeybinding(i))||void 0===t?void 0:t.getLabel(),null===(e=this._keybindingService.lookupKeybinding(n))||void 0===e?void 0:e.getLabel())};t(),this._disposables.add(this._keybindingService.onDidUpdateKeybindings(t)),this._updateFont(),this._updateStyles(this._themeService.getColorTheme())}return this._domNode}_updateStyles(t){var e,i,n,o;if(!this._input||!this._domNode)return;const s=t.getColor(widgetShadow);this._domNode.style.backgroundColor=String(null!==(e=t.getColor(editorWidgetBackground))&&void 0!==e?e:""),this._domNode.style.boxShadow=s?` 0 0 8px 2px ${s}`:"",this._domNode.style.color=String(null!==(i=t.getColor(inputForeground))&&void 0!==i?i:""),this._input.style.backgroundColor=String(null!==(n=t.getColor(inputBackground))&&void 0!==n?n:"");const r=t.getColor(inputBorder);this._input.style.borderWidth=r?"1px":"0px",this._input.style.borderStyle=r?"solid":"none",this._input.style.borderColor=null!==(o=null===r||void 0===r?void 0:r.toString())&&void 0!==o?o:"none"}_updateFont(){if(!this._input||!this._label)return;const t=this._editor.getOption(44);this._input.style.fontFamily=t.fontFamily,this._input.style.fontWeight=t.fontWeight,this._input.style.fontSize=`${t.fontSize}px`,this._label.style.fontSize=.8*t.fontSize+"px"}getPosition(){return this._visible?{position:this._position,preference:[2,1]}:null}afterRender(t){t||this.cancelInput(!0)}acceptInput(t){this._currentAcceptInput&&this._currentAcceptInput(t)}cancelInput(t){this._currentCancelInput&&this._currentCancelInput(t)}getInput(t,e,i,n,o,s){this._domNode.classList.toggle("preview",o),this._position=new Position(t.startLineNumber,t.startColumn),this._input.value=e,this._input.setAttribute("selectionStart",i.toString()),this._input.setAttribute("selectionEnd",n.toString()),this._input.size=Math.max(1.1*(t.endColumn-t.startColumn),20);const r=new DisposableStore;return new Promise((t=>{this._currentCancelInput=e=>(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,t(e),!0),this._currentAcceptInput=i=>{0!==this._input.value.trim().length&&this._input.value!==e?(this._currentAcceptInput=void 0,this._currentCancelInput=void 0,t({newName:this._input.value,wantsPreview:o&&i})):this.cancelInput(!0)},s.onCancellationRequested((()=>this.cancelInput(!0))),r.add(this._editor.onDidBlurEditorWidget((()=>this.cancelInput(!1)))),this._show()})).finally((()=>{r.dispose(),this._hide()}))}_show(){this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber,0),this._visible=!0,this._visibleContextKey.set(!0),this._editor.layoutContentWidget(this),setTimeout((()=>{this._input.focus(),this._input.setSelectionRange(parseInt(this._input.getAttribute("selectionStart")),parseInt(this._input.getAttribute("selectionEnd")))}),100)}_hide(){this._visible=!1,this._visibleContextKey.reset(),this._editor.layoutContentWidget(this)}};RenameInputField=__decorate([__param(2,IThemeService),__param(3,IKeybindingService),__param(4,IContextKeyService)],RenameInputField);export{RenameInputField};