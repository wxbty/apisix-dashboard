import{EditorAction,registerEditorAction}from"../../../browser/editorExtensions.js";import{CursorMoveCommands}from"../../../common/cursor/cursorMoveCommands.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import*as nls from"../../../../nls.js";export class ExpandLineSelectionAction extends EditorAction{constructor(){super({id:"expandLineSelection",label:nls.localize("expandLineSelection","Expand Line Selection"),alias:"Expand Line Selection",precondition:void 0,kbOpts:{weight:0,kbExpr:EditorContextKeys.textInputFocus,primary:2090}})}run(e,o,t){if(t=t||{},!o.hasModel())return;const r=o._getViewModel();r.model.pushStackElement(),r.setCursorStates(t.source,3,CursorMoveCommands.expandLineSelection(r,r.getCursorStates())),r.revealPrimaryCursor(t.source,!0)}}registerEditorAction(ExpandLineSelectionAction);