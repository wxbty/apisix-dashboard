var __decorate=this&&this.__decorate||function(e,o,t,i){var r,n=arguments.length,s=n<3?o:null===i?i=Object.getOwnPropertyDescriptor(o,t):i;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)s=Reflect.decorate(e,o,t,i);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(s=(n<3?r(s):n>3?r(o,t,s):r(o,t))||s);return n>3&&s&&Object.defineProperty(o,t,s),s},__param=this&&this.__param||function(e,o){return function(t,i){o(t,i,e)}};import*as dom from"../../../../base/browser/dom.js";import{ActionBar}from"../../../../base/browser/ui/actionbar/actionbar.js";import{Action}from"../../../../base/common/actions.js";import{Codicon}from"../../../../base/common/codicons.js";import{Color}from"../../../../base/common/color.js";import{Emitter}from"../../../../base/common/event.js";import*as objects from"../../../../base/common/objects.js";import"./media/peekViewWidget.css";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{ICodeEditorService}from"../../../browser/services/codeEditorService.js";import{EmbeddedCodeEditorWidget}from"../../../browser/widget/embeddedCodeEditorWidget.js";import{ZoneWidget}from"../../zoneWidget/browser/zoneWidget.js";import*as nls from"../../../../nls.js";import{createActionViewItem}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{IContextKeyService,RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";import{registerSingleton}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator,IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";import{activeContrastBorder,contrastBorder,editorInfoForeground,registerColor,transparent}from"../../../../platform/theme/common/colorRegistry.js";export const IPeekViewService=createDecorator("IPeekViewService");registerSingleton(IPeekViewService,class{constructor(){this._widgets=new Map}addExclusiveWidget(e,o){const t=this._widgets.get(e);t&&(t.listener.dispose(),t.widget.dispose());const i=()=>{const t=this._widgets.get(e);t&&t.widget===o&&(t.listener.dispose(),this._widgets.delete(e))};this._widgets.set(e,{widget:o,listener:o.onDidClose(i)})}});export var PeekContext;(function(e){e.inPeekEditor=new RawContextKey("inReferenceSearchEditor",!0,nls.localize("inReferenceSearchEditor","Whether the current code editor is embedded inside peek")),e.notInPeekEditor=e.inPeekEditor.toNegated()})(PeekContext||(PeekContext={}));let PeekContextController=class{constructor(e,o){e instanceof EmbeddedCodeEditorWidget&&PeekContext.inPeekEditor.bindTo(o)}dispose(){}};PeekContextController.ID="editor.contrib.referenceController",PeekContextController=__decorate([__param(1,IContextKeyService)],PeekContextController),registerEditorContribution(PeekContextController.ID,PeekContextController);export function getOuterEditor(e){let o=e.get(ICodeEditorService).getFocusedCodeEditor();return o instanceof EmbeddedCodeEditorWidget?o.getParentEditor():o}const defaultOptions={headerBackgroundColor:Color.white,primaryHeadingColor:Color.fromHex("#333333"),secondaryHeadingColor:Color.fromHex("#6c6c6cb3")};let PeekViewWidget=class extends ZoneWidget{constructor(e,o,t){super(e,o),this.instantiationService=t,this._onDidClose=new Emitter,this.onDidClose=this._onDidClose.event,objects.mixin(this.options,defaultOptions,!1)}dispose(){this.disposed||(this.disposed=!0,super.dispose(),this._onDidClose.fire(this))}style(e){let o=this.options;e.headerBackgroundColor&&(o.headerBackgroundColor=e.headerBackgroundColor),e.primaryHeadingColor&&(o.primaryHeadingColor=e.primaryHeadingColor),e.secondaryHeadingColor&&(o.secondaryHeadingColor=e.secondaryHeadingColor),super.style(e)}_applyStyles(){super._applyStyles();let e=this.options;this._headElement&&e.headerBackgroundColor&&(this._headElement.style.backgroundColor=e.headerBackgroundColor.toString()),this._primaryHeading&&e.primaryHeadingColor&&(this._primaryHeading.style.color=e.primaryHeadingColor.toString()),this._secondaryHeading&&e.secondaryHeadingColor&&(this._secondaryHeading.style.color=e.secondaryHeadingColor.toString()),this._bodyElement&&e.frameColor&&(this._bodyElement.style.borderColor=e.frameColor.toString())}_fillContainer(e){this.setCssClass("peekview-widget"),this._headElement=dom.$(".head"),this._bodyElement=dom.$(".body"),this._fillHead(this._headElement),this._fillBody(this._bodyElement),e.appendChild(this._headElement),e.appendChild(this._bodyElement)}_fillHead(e,o){const t=dom.$(".peekview-title");this.options.supportOnTitleClick&&(t.classList.add("clickable"),dom.addStandardDisposableListener(t,"click",(e=>this._onTitleClick(e)))),dom.append(this._headElement,t),this._fillTitleIcon(t),this._primaryHeading=dom.$("span.filename"),this._secondaryHeading=dom.$("span.dirname"),this._metaHeading=dom.$("span.meta"),dom.append(t,this._primaryHeading,this._secondaryHeading,this._metaHeading);const i=dom.$(".peekview-actions");dom.append(this._headElement,i);const r=this._getActionBarOptions();this._actionbarWidget=new ActionBar(i,r),this._disposables.add(this._actionbarWidget),o||this._actionbarWidget.push(new Action("peekview.close",nls.localize("label.close","Close"),Codicon.close.classNames,!0,(()=>(this.dispose(),Promise.resolve()))),{label:!1,icon:!0})}_fillTitleIcon(e){}_getActionBarOptions(){return{actionViewItemProvider:createActionViewItem.bind(void 0,this.instantiationService),orientation:0}}_onTitleClick(e){}setTitle(e,o){this._primaryHeading&&this._secondaryHeading&&(this._primaryHeading.innerText=e,this._primaryHeading.setAttribute("title",e),o?this._secondaryHeading.innerText=o:dom.clearNode(this._secondaryHeading))}setMetaTitle(e){this._metaHeading&&(e?(this._metaHeading.innerText=e,dom.show(this._metaHeading)):dom.hide(this._metaHeading))}_doLayout(e,o){if(!this._isShowing&&e<0)return void this.dispose();const t=Math.ceil(1.2*this.editor.getOption(59)),i=Math.round(e-(t+2));this._doLayoutHead(t,o),this._doLayoutBody(i,o)}_doLayoutHead(e,o){this._headElement&&(this._headElement.style.height=`${e}px`,this._headElement.style.lineHeight=this._headElement.style.height)}_doLayoutBody(e,o){this._bodyElement&&(this._bodyElement.style.height=`${e}px`)}};PeekViewWidget=__decorate([__param(2,IInstantiationService)],PeekViewWidget);export{PeekViewWidget};export const peekViewTitleBackground=registerColor("peekViewTitle.background",{dark:transparent(editorInfoForeground,.1),light:transparent(editorInfoForeground,.1),hc:null},nls.localize("peekViewTitleBackground","Background color of the peek view title area."));export const peekViewTitleForeground=registerColor("peekViewTitleLabel.foreground",{dark:Color.white,light:Color.black,hc:Color.white},nls.localize("peekViewTitleForeground","Color of the peek view title."));export const peekViewTitleInfoForeground=registerColor("peekViewTitleDescription.foreground",{dark:"#ccccccb3",light:"#616161",hc:"#FFFFFF99"},nls.localize("peekViewTitleInfoForeground","Color of the peek view title info."));export const peekViewBorder=registerColor("peekView.border",{dark:editorInfoForeground,light:editorInfoForeground,hc:contrastBorder},nls.localize("peekViewBorder","Color of the peek view borders and arrow."));export const peekViewResultsBackground=registerColor("peekViewResult.background",{dark:"#252526",light:"#F3F3F3",hc:Color.black},nls.localize("peekViewResultsBackground","Background color of the peek view result list."));export const peekViewResultsMatchForeground=registerColor("peekViewResult.lineForeground",{dark:"#bbbbbb",light:"#646465",hc:Color.white},nls.localize("peekViewResultsMatchForeground","Foreground color for line nodes in the peek view result list."));export const peekViewResultsFileForeground=registerColor("peekViewResult.fileForeground",{dark:Color.white,light:"#1E1E1E",hc:Color.white},nls.localize("peekViewResultsFileForeground","Foreground color for file nodes in the peek view result list."));export const peekViewResultsSelectionBackground=registerColor("peekViewResult.selectionBackground",{dark:"#3399ff33",light:"#3399ff33",hc:null},nls.localize("peekViewResultsSelectionBackground","Background color of the selected entry in the peek view result list."));export const peekViewResultsSelectionForeground=registerColor("peekViewResult.selectionForeground",{dark:Color.white,light:"#6C6C6C",hc:Color.white},nls.localize("peekViewResultsSelectionForeground","Foreground color of the selected entry in the peek view result list."));export const peekViewEditorBackground=registerColor("peekViewEditor.background",{dark:"#001F33",light:"#F2F8FC",hc:Color.black},nls.localize("peekViewEditorBackground","Background color of the peek view editor."));export const peekViewEditorGutterBackground=registerColor("peekViewEditorGutter.background",{dark:peekViewEditorBackground,light:peekViewEditorBackground,hc:peekViewEditorBackground},nls.localize("peekViewEditorGutterBackground","Background color of the gutter in the peek view editor."));export const peekViewResultsMatchHighlight=registerColor("peekViewResult.matchHighlightBackground",{dark:"#ea5c004d",light:"#ea5c004d",hc:null},nls.localize("peekViewResultsMatchHighlight","Match highlight color in the peek view result list."));export const peekViewEditorMatchHighlight=registerColor("peekViewEditor.matchHighlightBackground",{dark:"#ff8f0099",light:"#f5d802de",hc:null},nls.localize("peekViewEditorMatchHighlight","Match highlight color in the peek view editor."));export const peekViewEditorMatchHighlightBorder=registerColor("peekViewEditor.matchHighlightBorder",{dark:null,light:null,hc:activeContrastBorder},nls.localize("peekViewEditorMatchHighlightBorder","Match highlight border in the peek view editor."));