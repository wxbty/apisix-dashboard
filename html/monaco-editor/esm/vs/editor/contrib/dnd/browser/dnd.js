import{Disposable}from"../../../../base/common/lifecycle.js";import{isMacintosh}from"../../../../base/common/platform.js";import"./dnd.css";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{ModelDecorationOptions}from"../../../common/model/textModel.js";import{DragAndDropCommand}from"./dragAndDropCommand.js";function hasTriggerModifier(o){return isMacintosh?o.altKey:o.ctrlKey}export class DragAndDropController extends Disposable{constructor(o){super(),this._editor=o,this._register(this._editor.onMouseDown((o=>this._onEditorMouseDown(o)))),this._register(this._editor.onMouseUp((o=>this._onEditorMouseUp(o)))),this._register(this._editor.onMouseDrag((o=>this._onEditorMouseDrag(o)))),this._register(this._editor.onMouseDrop((o=>this._onEditorMouseDrop(o)))),this._register(this._editor.onMouseDropCanceled((()=>this._onEditorMouseDropCanceled()))),this._register(this._editor.onKeyDown((o=>this.onEditorKeyDown(o)))),this._register(this._editor.onKeyUp((o=>this.onEditorKeyUp(o)))),this._register(this._editor.onDidBlurEditorWidget((()=>this.onEditorBlur()))),this._register(this._editor.onDidBlurEditorText((()=>this.onEditorBlur()))),this._dndDecorationIds=[],this._mouseDown=!1,this._modifierPressed=!1,this._dragSelection=null}onEditorBlur(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1}onEditorKeyDown(o){this._editor.getOption(31)&&!this._editor.getOption(18)&&(hasTriggerModifier(o)&&(this._modifierPressed=!0),this._mouseDown&&hasTriggerModifier(o)&&this._editor.updateOptions({mouseStyle:"copy"}))}onEditorKeyUp(o){this._editor.getOption(31)&&!this._editor.getOption(18)&&(hasTriggerModifier(o)&&(this._modifierPressed=!1),this._mouseDown&&o.keyCode===DragAndDropController.TRIGGER_KEY_VALUE&&this._editor.updateOptions({mouseStyle:"default"}))}_onEditorMouseDown(o){this._mouseDown=!0}_onEditorMouseUp(o){this._mouseDown=!1,this._editor.updateOptions({mouseStyle:"text"})}_onEditorMouseDrag(o){let t=o.target;if(null===this._dragSelection){const o=this._editor.getSelections()||[];let e=o.filter((o=>t.position&&o.containsPosition(t.position)));if(1!==e.length)return;this._dragSelection=e[0]}hasTriggerModifier(o.event)?this._editor.updateOptions({mouseStyle:"copy"}):this._editor.updateOptions({mouseStyle:"default"}),t.position&&(this._dragSelection.containsPosition(t.position)?this._removeDecoration():this.showAt(t.position))}_onEditorMouseDropCanceled(){this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}_onEditorMouseDrop(o){if(o.target&&(this._hitContent(o.target)||this._hitMargin(o.target))&&o.target.position){let t=new Position(o.target.position.lineNumber,o.target.position.column);if(null===this._dragSelection){let e=null;if(o.event.shiftKey){let o=this._editor.getSelection();if(o){const{selectionStartLineNumber:i,selectionStartColumn:r}=o;e=[new Selection(i,r,t.lineNumber,t.column)]}}else e=(this._editor.getSelections()||[]).map((o=>o.containsPosition(t)?new Selection(t.lineNumber,t.column,t.lineNumber,t.column):o));this._editor.setSelections(e||[],"mouse",3)}else(!this._dragSelection.containsPosition(t)||(hasTriggerModifier(o.event)||this._modifierPressed)&&(this._dragSelection.getEndPosition().equals(t)||this._dragSelection.getStartPosition().equals(t)))&&(this._editor.pushUndoStop(),this._editor.executeCommand(DragAndDropController.ID,new DragAndDropCommand(this._dragSelection,t,hasTriggerModifier(o.event)||this._modifierPressed)),this._editor.pushUndoStop())}this._editor.updateOptions({mouseStyle:"text"}),this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1}showAt(o){let t=[{range:new Range(o.lineNumber,o.column,o.lineNumber,o.column),options:DragAndDropController._DECORATION_OPTIONS}];this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,t),this._editor.revealPosition(o,1)}_removeDecoration(){this._dndDecorationIds=this._editor.deltaDecorations(this._dndDecorationIds,[])}_hitContent(o){return 6===o.type||7===o.type}_hitMargin(o){return 2===o.type||3===o.type||4===o.type}dispose(){this._removeDecoration(),this._dragSelection=null,this._mouseDown=!1,this._modifierPressed=!1,super.dispose()}}DragAndDropController.ID="editor.contrib.dragAndDrop",DragAndDropController.TRIGGER_KEY_VALUE=isMacintosh?6:5,DragAndDropController._DECORATION_OPTIONS=ModelDecorationOptions.register({description:"dnd-target",className:"dnd-target"}),registerEditorContribution(DragAndDropController.ID,DragAndDropController);