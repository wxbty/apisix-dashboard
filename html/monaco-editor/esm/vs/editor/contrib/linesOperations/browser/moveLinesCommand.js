import*as strings from"../../../../base/common/strings.js";import{ShiftCommand}from"../../../common/commands/shiftCommand.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{IndentAction}from"../../../common/languages/languageConfiguration.js";import{LanguageConfigurationRegistry}from"../../../common/languages/languageConfigurationRegistry.js";import*as indentUtils from"../../indentation/browser/indentUtils.js";export class MoveLinesCommand{constructor(e,t,n){this._selection=e,this._isMovingDown=t,this._autoIndent=n,this._selectionId=null,this._moveEndLineSelectionShrink=!1}getEditOperations(e,t){let n=e.getLineCount();if(this._isMovingDown&&this._selection.endLineNumber===n)return void(this._selectionId=t.trackSelection(this._selection));if(!this._isMovingDown&&1===this._selection.startLineNumber)return void(this._selectionId=t.trackSelection(this._selection));this._moveEndPositionDown=!1;let i=this._selection;i.startLineNumber<i.endLineNumber&&1===i.endColumn&&(this._moveEndPositionDown=!0,i=i.setEndPosition(i.endLineNumber-1,e.getLineMaxColumn(i.endLineNumber-1)));const{tabSize:o,indentSize:s,insertSpaces:r}=e.getOptions();let a=this.buildIndentConverter(o,s,r),g={getLineTokens:t=>e.getLineTokens(t),getLanguageId:()=>e.getLanguageId(),getLanguageIdAtPosition:(t,n)=>e.getLanguageIdAtPosition(t,n),getLineContent:null};if(i.startLineNumber===i.endLineNumber&&1===e.getLineMaxColumn(i.startLineNumber)){let n=i.startLineNumber,o=this._isMovingDown?n+1:n-1;1===e.getLineMaxColumn(o)?t.addEditOperation(new Range(1,1,1,1),null):(t.addEditOperation(new Range(n,1,n,1),e.getLineContent(o)),t.addEditOperation(new Range(o,1,o,e.getLineMaxColumn(o)),null)),i=new Selection(o,1,o,1)}else{let n,s;if(this._isMovingDown){n=i.endLineNumber+1,s=e.getLineContent(n),t.addEditOperation(new Range(n-1,e.getLineMaxColumn(n-1),n,e.getLineMaxColumn(n)),null);let d=s;if(this.shouldAutoIndent(e,i)){let u=this.matchEnterRule(e,a,o,n,i.startLineNumber-1);if(null!==u){let t=strings.getLeadingWhitespace(e.getLineContent(n)),i=u+indentUtils.getSpaceCnt(t,o),a=indentUtils.generateIndent(i,o,r);d=a+this.trimLeft(s)}else{g.getLineContent=t=>t===i.startLineNumber?e.getLineContent(n):e.getLineContent(t);let t=LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent,g,e.getLanguageIdAtPosition(n,1),i.startLineNumber,a);if(null!==t){let i=strings.getLeadingWhitespace(e.getLineContent(n)),a=indentUtils.getSpaceCnt(t,o),g=indentUtils.getSpaceCnt(i,o);if(a!==g){let e=indentUtils.generateIndent(a,o,r);d=e+this.trimLeft(s)}}}t.addEditOperation(new Range(i.startLineNumber,1,i.startLineNumber,1),d+"\n");let l=this.matchEnterRuleMovingDown(e,a,o,i.startLineNumber,n,d);if(null!==l)0!==l&&this.getIndentEditsOfMovingBlock(e,t,i,o,r,l);else{g.getLineContent=t=>t===i.startLineNumber?d:t>=i.startLineNumber+1&&t<=i.endLineNumber+1?e.getLineContent(t-1):e.getLineContent(t);let s=LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent,g,e.getLanguageIdAtPosition(n,1),i.startLineNumber+1,a);if(null!==s){const n=strings.getLeadingWhitespace(e.getLineContent(i.startLineNumber)),a=indentUtils.getSpaceCnt(s,o),g=indentUtils.getSpaceCnt(n,o);if(a!==g){const n=a-g;this.getIndentEditsOfMovingBlock(e,t,i,o,r,n)}}}}else t.addEditOperation(new Range(i.startLineNumber,1,i.startLineNumber,1),d+"\n")}else if(n=i.startLineNumber-1,s=e.getLineContent(n),t.addEditOperation(new Range(n,1,n+1,1),null),t.addEditOperation(new Range(i.endLineNumber,e.getLineMaxColumn(i.endLineNumber),i.endLineNumber,e.getLineMaxColumn(i.endLineNumber)),"\n"+s),this.shouldAutoIndent(e,i)){g.getLineContent=t=>t===n?e.getLineContent(i.startLineNumber):e.getLineContent(t);let s=this.matchEnterRule(e,a,o,i.startLineNumber,i.startLineNumber-2);if(null!==s)0!==s&&this.getIndentEditsOfMovingBlock(e,t,i,o,r,s);else{let s=LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent,g,e.getLanguageIdAtPosition(i.startLineNumber,1),n,a);if(null!==s){let n=strings.getLeadingWhitespace(e.getLineContent(i.startLineNumber)),a=indentUtils.getSpaceCnt(s,o),g=indentUtils.getSpaceCnt(n,o);if(a!==g){let n=a-g;this.getIndentEditsOfMovingBlock(e,t,i,o,r,n)}}}}}this._selectionId=t.trackSelection(i)}buildIndentConverter(e,t,n){return{shiftIndent:i=>ShiftCommand.shiftIndent(i,i.length+1,e,t,n),unshiftIndent:i=>ShiftCommand.unshiftIndent(i,i.length+1,e,t,n)}}parseEnterResult(e,t,n,i,o){if(o){let s=o.indentation;o.indentAction===IndentAction.None||o.indentAction===IndentAction.Indent?s=o.indentation+o.appendText:o.indentAction===IndentAction.IndentOutdent?s=o.indentation:o.indentAction===IndentAction.Outdent&&(s=t.unshiftIndent(o.indentation)+o.appendText);let r=e.getLineContent(i);if(this.trimLeft(r).indexOf(this.trimLeft(s))>=0){let o=strings.getLeadingWhitespace(e.getLineContent(i)),r=strings.getLeadingWhitespace(s),a=LanguageConfigurationRegistry.getIndentMetadata(e,i);null!==a&&2&a&&(r=t.unshiftIndent(r));let g=indentUtils.getSpaceCnt(r,n),d=indentUtils.getSpaceCnt(o,n);return g-d}}return null}matchEnterRuleMovingDown(e,t,n,i,o,s){if(strings.lastNonWhitespaceIndex(s)>=0){let s=e.getLineMaxColumn(o),r=LanguageConfigurationRegistry.getEnterAction(this._autoIndent,e,new Range(o,s,o,s));return this.parseEnterResult(e,t,n,i,r)}{let o=i-1;while(o>=1){let t=e.getLineContent(o),n=strings.lastNonWhitespaceIndex(t);if(n>=0)break;o--}if(o<1||i>e.getLineCount())return null;let s=e.getLineMaxColumn(o),r=LanguageConfigurationRegistry.getEnterAction(this._autoIndent,e,new Range(o,s,o,s));return this.parseEnterResult(e,t,n,i,r)}}matchEnterRule(e,t,n,i,o,s){let r=o;while(r>=1){let t;t=r===o&&void 0!==s?s:e.getLineContent(r);let n=strings.lastNonWhitespaceIndex(t);if(n>=0)break;r--}if(r<1||i>e.getLineCount())return null;let a=e.getLineMaxColumn(r),g=LanguageConfigurationRegistry.getEnterAction(this._autoIndent,e,new Range(r,a,r,a));return this.parseEnterResult(e,t,n,i,g)}trimLeft(e){return e.replace(/^\s+/,"")}shouldAutoIndent(e,t){if(this._autoIndent<4)return!1;if(!e.isCheapToTokenize(t.startLineNumber))return!1;let n=e.getLanguageIdAtPosition(t.startLineNumber,1),i=e.getLanguageIdAtPosition(t.endLineNumber,1);return n===i&&null!==LanguageConfigurationRegistry.getIndentRulesSupport(n)}getIndentEditsOfMovingBlock(e,t,n,i,o,s){for(let r=n.startLineNumber;r<=n.endLineNumber;r++){let a=e.getLineContent(r),g=strings.getLeadingWhitespace(a),d=indentUtils.getSpaceCnt(g,i),u=d+s,l=indentUtils.generateIndent(u,i,o);l!==g&&(t.addEditOperation(new Range(r,1,r,g.length+1),l),r===n.endLineNumber&&n.endColumn<=g.length+1&&""===l&&(this._moveEndLineSelectionShrink=!0))}}computeCursorState(e,t){let n=t.getTrackedSelection(this._selectionId);return this._moveEndPositionDown&&(n=n.setEndPosition(n.endLineNumber+1,1)),this._moveEndLineSelectionShrink&&n.startLineNumber<n.endLineNumber&&(n=n.setEndPosition(n.endLineNumber,2)),n}}