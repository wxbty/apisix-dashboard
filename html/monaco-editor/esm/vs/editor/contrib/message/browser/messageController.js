var __decorate=this&&this.__decorate||function(e,s,t,i){var o,r=arguments.length,n=r<3?s:null===i?i=Object.getOwnPropertyDescriptor(s,t):i;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)n=Reflect.decorate(e,s,t,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(n=(r<3?o(n):r>3?o(s,t,n):o(s,t))||n);return r>3&&n&&Object.defineProperty(s,t,n),n},__param=this&&this.__param||function(e,s){return function(t,i){s(t,i,e)}};import{alert}from"../../../../base/browser/ui/aria/aria.js";import{TimeoutTimer}from"../../../../base/common/async.js";import{DisposableStore,MutableDisposable}from"../../../../base/common/lifecycle.js";import"./messageController.css";import{EditorCommand,registerEditorCommand,registerEditorContribution}from"../../../browser/editorExtensions.js";import{Range}from"../../../common/core/range.js";import*as nls from"../../../../nls.js";import{IContextKeyService,RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";let MessageController=class e{constructor(s,t){this._messageWidget=new MutableDisposable,this._messageListeners=new DisposableStore,this._editor=s,this._visible=e.MESSAGE_VISIBLE.bindTo(t),this._editorListener=this._editor.onDidAttemptReadOnlyEdit((()=>this._onDidAttemptReadOnlyEdit()))}static get(s){return s.getContribution(e.ID)}dispose(){this._editorListener.dispose(),this._messageListeners.dispose(),this._messageWidget.dispose(),this._visible.reset()}showMessage(e,s){let t;alert(e),this._visible.set(!0),this._messageWidget.clear(),this._messageListeners.clear(),this._messageWidget.value=new MessageWidget(this._editor,s,e),this._messageListeners.add(this._editor.onDidBlurEditorText((()=>this.closeMessage()))),this._messageListeners.add(this._editor.onDidChangeCursorPosition((()=>this.closeMessage()))),this._messageListeners.add(this._editor.onDidDispose((()=>this.closeMessage()))),this._messageListeners.add(this._editor.onDidChangeModel((()=>this.closeMessage()))),this._messageListeners.add(new TimeoutTimer((()=>this.closeMessage()),3e3)),this._messageListeners.add(this._editor.onMouseMove((e=>{e.target.position&&(t?t.containsPosition(e.target.position)||this.closeMessage():t=new Range(s.lineNumber-3,1,e.target.position.lineNumber+3,1))})))}closeMessage(){this._visible.reset(),this._messageListeners.clear(),this._messageWidget.value&&this._messageListeners.add(MessageWidget.fadeOut(this._messageWidget.value))}_onDidAttemptReadOnlyEdit(){this._editor.hasModel()&&this.showMessage(nls.localize("editor.readonly","Cannot edit in read-only editor"),this._editor.getPosition())}};MessageController.ID="editor.contrib.messageController",MessageController.MESSAGE_VISIBLE=new RawContextKey("messageVisible",!1,nls.localize("messageVisible","Whether the editor is currently showing an inline message")),MessageController=__decorate([__param(1,IContextKeyService)],MessageController);export{MessageController};const MessageCommand=EditorCommand.bindToContribution(MessageController.get);registerEditorCommand(new MessageCommand({id:"leaveEditorMessage",precondition:MessageController.MESSAGE_VISIBLE,handler:e=>e.closeMessage(),kbOpts:{weight:130,primary:9}}));class MessageWidget{constructor(e,{lineNumber:s,column:t},i){this.allowEditorOverflow=!0,this.suppressMouseDown=!1,this._editor=e,this._editor.revealLinesInCenterIfOutsideViewport(s,s,0),this._position={lineNumber:s,column:t-1},this._domNode=document.createElement("div"),this._domNode.classList.add("monaco-editor-overlaymessage");const o=document.createElement("div");o.classList.add("anchor","top"),this._domNode.appendChild(o);const r=document.createElement("div");r.classList.add("message"),r.textContent=i,this._domNode.appendChild(r);const n=document.createElement("div");n.classList.add("anchor","below"),this._domNode.appendChild(n),this._editor.addContentWidget(this),this._domNode.classList.add("fadeIn")}static fadeOut(e){let s;const t=()=>{e.dispose(),clearTimeout(s),e.getDomNode().removeEventListener("animationend",t)};return s=setTimeout(t,110),e.getDomNode().addEventListener("animationend",t),e.getDomNode().classList.add("fadeOut"),{dispose:t}}dispose(){this._editor.removeContentWidget(this)}getId(){return"messageoverlay"}getDomNode(){return this._domNode}getPosition(){return{position:this._position,preference:[1,2]}}afterRender(e){this._domNode.classList.toggle("below",2===e)}}registerEditorContribution(MessageController.ID,MessageController);