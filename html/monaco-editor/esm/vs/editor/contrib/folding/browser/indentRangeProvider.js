import{computeIndentLevel}from"../../../common/model/utils.js";import{FoldingRegions,MAX_LINE_NUMBER}from"./foldingRanges.js";const MAX_FOLDING_REGIONS_FOR_INDENT_DEFAULT=5e3;export const ID_INDENT_PROVIDER="indent";export class IndentRangeProvider{constructor(e,n,t){this.editorModel=e,this.languageConfigurationService=n,this.maxFoldingRegions=t,this.id=ID_INDENT_PROVIDER}dispose(){}compute(e,n){let t=this.languageConfigurationService.getLanguageConfiguration(this.editorModel.getLanguageId()).foldingRules,i=t&&!!t.offSide,s=t&&t.markers;return Promise.resolve(computeRanges(this.editorModel,i,s,this.maxFoldingRegions,n))}}export class RangesCollector{constructor(e,n){this._notifyTooManyRegions=n,this._startIndexes=[],this._endIndexes=[],this._indentOccurrences=[],this._length=0,this._foldingRangesLimit=e}insertFirst(e,n,t){if(e>MAX_LINE_NUMBER||n>MAX_LINE_NUMBER)return;let i=this._length;this._startIndexes[i]=e,this._endIndexes[i]=n,this._length++,t<1e3&&(this._indentOccurrences[t]=(this._indentOccurrences[t]||0)+1)}toIndentRanges(e){if(this._length<=this._foldingRangesLimit){let e=new Uint32Array(this._length),n=new Uint32Array(this._length);for(let t=this._length-1,i=0;t>=0;t--,i++)e[i]=this._startIndexes[t],n[i]=this._endIndexes[t];return new FoldingRegions(e,n)}{this._notifyTooManyRegions&&this._notifyTooManyRegions(this._foldingRangesLimit);let n=0,t=this._indentOccurrences.length;for(let e=0;e<this._indentOccurrences.length;e++){let i=this._indentOccurrences[e];if(i){if(i+n>this._foldingRangesLimit){t=e;break}n+=i}}const i=e.getOptions().tabSize;let s=new Uint32Array(this._foldingRangesLimit),o=new Uint32Array(this._foldingRangesLimit);for(let r=this._length-1,l=0;r>=0;r--){let g=this._startIndexes[r],d=e.getLineContent(g),h=computeIndentLevel(d,i);(h<t||h===t&&n++<this._foldingRangesLimit)&&(s[l]=g,o[l]=this._endIndexes[r],l++)}return new FoldingRegions(s,o)}}}export function computeRanges(e,n,t,i,s){const o=e.getOptions().tabSize;i=null!==i&&void 0!==i?i:MAX_FOLDING_REGIONS_FOR_INDENT_DEFAULT;let r,l=new RangesCollector(i,s);t&&(r=new RegExp(`(${t.start.source})|(?:${t.end.source})`));let g=[],d=e.getLineCount()+1;g.push({indent:-1,endAbove:d,line:d});for(let h=e.getLineCount();h>0;h--){let t,i=e.getLineContent(h),s=computeIndentLevel(i,o),d=g[g.length-1];if(-1!==s){if(r&&(t=i.match(r))){if(!t[1]){g.push({indent:-2,endAbove:h,line:h});continue}{let e=g.length-1;while(e>0&&-2!==g[e].indent)e--;if(e>0){g.length=e+1,d=g[e],l.insertFirst(h,d.line,s),d.line=h,d.indent=s,d.endAbove=h;continue}}}if(d.indent>s){do{g.pop(),d=g[g.length-1]}while(d.indent>s);let e=d.endAbove-1;e-h>=1&&l.insertFirst(h,e,s)}d.indent===s?d.endAbove=h:g.push({indent:s,endAbove:h,line:h})}else n&&(d.endAbove=h)}return l.toIndentRanges(e)}