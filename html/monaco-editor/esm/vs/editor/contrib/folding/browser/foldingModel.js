import{Emitter}from"../../../../base/common/event.js";import{FoldingRegions}from"./foldingRanges.js";export class FoldingModel{constructor(e,t){this._updateEventEmitter=new Emitter,this.onDidChange=this._updateEventEmitter.event,this._textModel=e,this._decorationProvider=t,this._regions=new FoldingRegions(new Uint32Array(0),new Uint32Array(0)),this._editorDecorationIds=[],this._isInitialized=!1}get regions(){return this._regions}get textModel(){return this._textModel}get isInitialized(){return this._isInitialized}toggleCollapseState(e){if(!e.length)return;e=e.sort(((e,t)=>e.regionIndex-t.regionIndex));const t={};this._decorationProvider.changeDecorations((n=>{let i=0,o=-1,r=-1;const s=e=>{while(i<e){const e=this._regions.getEndLineNumber(i),t=this._regions.isCollapsed(i);e<=o&&n.changeDecorationOptions(this._editorDecorationIds[i],this._decorationProvider.getDecorationOption(t,e<=r)),t&&e>r&&(r=e),i++}};for(let l of e){let e=l.regionIndex,n=this._editorDecorationIds[e];if(n&&!t[n]){t[n]=!0,s(e);let i=!this._regions.isCollapsed(e);this._regions.setCollapsed(e,i),o=Math.max(o,this._regions.getEndLineNumber(e))}}s(this._regions.length)})),this._updateEventEmitter.fire({model:this,collapseStateChanged:e})}update(e,t=[]){let n=[],i=(e,n)=>{for(let i of t)if(e<i&&i<=n)return!0;return!1},o=-1,r=(t,r)=>{const s=e.getStartLineNumber(t),l=e.getEndLineNumber(t);r||(r=e.isCollapsed(t)),r&&i(s,l)&&(r=!1),e.setCollapsed(t,r);const g=this._textModel.getLineMaxColumn(s),a={startLineNumber:s,startColumn:Math.max(g-1,1),endLineNumber:s,endColumn:g};n.push({range:a,options:this._decorationProvider.getDecorationOption(r,l<=o)}),r&&l>o&&(o=l)},s=0,l=()=>{while(s<this._regions.length){let e=this._regions.isCollapsed(s);if(s++,e)return s-1}return-1},g=0,a=l();while(-1!==a&&g<e.length){let t=this._textModel.getDecorationRange(this._editorDecorationIds[a]);if(t){let n=t.startLineNumber;if(t.startColumn===Math.max(t.endColumn-1,1)&&this._textModel.getLineMaxColumn(n)===t.endColumn)while(g<e.length){let t=e.getStartLineNumber(g);if(!(n>=t))break;r(g,n===t),g++}}a=l()}while(g<e.length)r(g,!1),g++;this._editorDecorationIds=this._decorationProvider.deltaDecorations(this._editorDecorationIds,n),this._regions=e,this._isInitialized=!0,this._updateEventEmitter.fire({model:this})}getMemento(){let e=[];for(let t=0;t<this._regions.length;t++)if(this._regions.isCollapsed(t)){let n=this._textModel.getDecorationRange(this._editorDecorationIds[t]);if(n){let i=n.startLineNumber,o=n.endLineNumber+this._regions.getEndLineNumber(t)-this._regions.getStartLineNumber(t);e.push({startLineNumber:i,endLineNumber:o})}}if(e.length>0)return e}applyMemento(e){if(!Array.isArray(e))return;let t=[];for(let n of e){let e=this.getRegionAtLine(n.startLineNumber);e&&!e.isCollapsed&&t.push(e)}this.toggleCollapseState(t)}dispose(){this._decorationProvider.deltaDecorations(this._editorDecorationIds,[])}getAllRegionsAtLine(e,t){let n=[];if(this._regions){let i=this._regions.findRange(e),o=1;while(i>=0){let e=this._regions.toRegion(i);t&&!t(e,o)||n.push(e),o++,i=e.parentIndex}}return n}getRegionAtLine(e){if(this._regions){let t=this._regions.findRange(e);if(t>=0)return this._regions.toRegion(t)}return null}getRegionsInside(e,t){let n=[],i=e?e.regionIndex+1:0,o=e?e.endLineNumber:Number.MAX_VALUE;if(t&&2===t.length){const e=[];for(let r=i,s=this._regions.length;r<s;r++){let i=this._regions.toRegion(r);if(!(this._regions.getStartLineNumber(r)<o))break;while(e.length>0&&!i.containedBy(e[e.length-1]))e.pop();e.push(i),t(i,e.length)&&n.push(i)}}else for(let r=i,s=this._regions.length;r<s;r++){let e=this._regions.toRegion(r);if(!(this._regions.getStartLineNumber(r)<o))break;t&&!t(e)||n.push(e)}return n}}export function toggleCollapseState(e,t,n){let i=[];for(let o of n){let n=e.getRegionAtLine(o);if(n){const o=!n.isCollapsed;if(i.push(n),t>1){let r=e.getRegionsInside(n,((e,n)=>e.isCollapsed!==o&&n<t));i.push(...r)}}}e.toggleCollapseState(i)}export function setCollapseStateLevelsDown(e,t,n=Number.MAX_VALUE,i){let o=[];if(i&&i.length>0)for(let r of i){let i=e.getRegionAtLine(r);if(i&&(i.isCollapsed!==t&&o.push(i),n>1)){let r=e.getRegionsInside(i,((e,i)=>e.isCollapsed!==t&&i<n));o.push(...r)}}else{let i=e.getRegionsInside(null,((e,i)=>e.isCollapsed!==t&&i<n));o.push(...i)}e.toggleCollapseState(o)}export function setCollapseStateLevelsUp(e,t,n,i){let o=[];for(let r of i){let i=e.getAllRegionsAtLine(r,((e,i)=>e.isCollapsed!==t&&i<=n));o.push(...i)}e.toggleCollapseState(o)}export function setCollapseStateUp(e,t,n){let i=[];for(let o of n){let n=e.getAllRegionsAtLine(o,(e=>e.isCollapsed!==t));n.length>0&&i.push(n[0])}e.toggleCollapseState(i)}export function setCollapseStateAtLevel(e,t,n,i){let o=(e,o)=>o===t&&e.isCollapsed!==n&&!i.some((t=>e.containsLine(t))),r=e.getRegionsInside(null,o);e.toggleCollapseState(r)}export function setCollapseStateForRest(e,t,n){let i=[];for(let s of n){const t=e.getAllRegionsAtLine(s,void 0);t.length>0&&i.push(t[0])}let o=e=>i.every((t=>!t.containedBy(e)&&!e.containedBy(t)))&&e.isCollapsed!==t,r=e.getRegionsInside(null,o);e.toggleCollapseState(r)}export function setCollapseStateForMatchingLines(e,t,n){let i=e.textModel,o=e.regions,r=[];for(let s=o.length-1;s>=0;s--)if(n!==o.isCollapsed(s)){let e=o.getStartLineNumber(s);t.test(i.getLineContent(e))&&r.push(o.toRegion(s))}e.toggleCollapseState(r)}export function setCollapseStateForType(e,t,n){let i=e.regions,o=[];for(let r=i.length-1;r>=0;r--)n!==i.isCollapsed(r)&&t===i.getType(r)&&o.push(i.toRegion(r));e.toggleCollapseState(o)}export function getParentFoldLine(e,t){let n=null,i=t.getRegionAtLine(e);if(null!==i&&(n=i.startLineNumber,e===n)){let e=i.parentIndex;n=-1!==e?t.regions.getStartLineNumber(e):null}return n}export function getPreviousFoldLine(e,t){let n=t.getRegionAtLine(e);if(null!==n&&n.startLineNumber===e){if(e!==n.startLineNumber)return n.startLineNumber;{let e=n.parentIndex,i=0;-1!==e&&(i=t.regions.getStartLineNumber(n.parentIndex));while(null!==n){if(!(n.regionIndex>0))return null;if(n=t.regions.toRegion(n.regionIndex-1),n.startLineNumber<=i)return null;if(n.parentIndex===e)return n.startLineNumber}}}else if(t.regions.length>0){n=t.regions.toRegion(t.regions.length-1);while(null!==n){if(n.startLineNumber<e)return n.startLineNumber;n=n.regionIndex>0?t.regions.toRegion(n.regionIndex-1):null}}return null}export function getNextFoldLine(e,t){let n=t.getRegionAtLine(e);if(null!==n&&n.startLineNumber===e){let e=n.parentIndex,i=0;if(-1!==e)i=t.regions.getEndLineNumber(n.parentIndex);else{if(0===t.regions.length)return null;i=t.regions.getEndLineNumber(t.regions.length-1)}while(null!==n){if(!(n.regionIndex<t.regions.length))return null;if(n=t.regions.toRegion(n.regionIndex+1),n.startLineNumber>=i)return null;if(n.parentIndex===e)return n.startLineNumber}}else if(t.regions.length>0){n=t.regions.toRegion(0);while(null!==n){if(n.startLineNumber>e)return n.startLineNumber;n=n.regionIndex<t.regions.length?t.regions.toRegion(n.regionIndex+1):null}}return null}