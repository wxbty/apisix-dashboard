import{sanitizeRanges}from"./syntaxRangeProvider.js";export const ID_INIT_PROVIDER="init";export class InitializingRangeProvider{constructor(e,t,i,o){if(this.editorModel=e,this.id=ID_INIT_PROVIDER,t.length){let n=t=>({range:{startLineNumber:t.startLineNumber,startColumn:0,endLineNumber:t.endLineNumber,endColumn:e.getLineLength(t.endLineNumber)},options:{description:"folding-initializing-range-provider",stickiness:1}});this.decorationIds=e.deltaDecorations([],t.map(n)),this.timeout=setTimeout(i,o)}}dispose(){this.decorationIds&&(this.editorModel.deltaDecorations(this.decorationIds,[]),this.decorationIds=void 0),"number"===typeof this.timeout&&(clearTimeout(this.timeout),this.timeout=void 0)}compute(e){let t=[];if(this.decorationIds)for(let i of this.decorationIds){let e=this.editorModel.getDecorationRange(i);e&&t.push({start:e.startLineNumber,end:e.endLineNumber,rank:1})}return Promise.resolve(sanitizeRanges(t,Number.MAX_VALUE))}}