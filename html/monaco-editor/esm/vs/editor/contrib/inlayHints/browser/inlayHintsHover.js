var __decorate=this&&this.__decorate||function(e,t,r,o){var n,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(a=(i<3?n(a):i>3?n(t,r,a):n(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a},__param=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},__awaiter=this&&this.__awaiter||function(e,t,r,o){function n(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,i){function a(e){try{s(o.next(e))}catch(t){i(t)}}function c(e){try{s(o["throw"](e))}catch(t){i(t)}}function s(e){e.done?r(e.value):n(e.value).then(a,c)}s((o=o.apply(e,t||[])).next())}))},__asyncValues=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"===typeof __values?__values(e):e[Symbol.iterator](),t={},o("next"),o("throw"),o("return"),t[Symbol.asyncIterator]=function(){return this},t);function o(r){t[r]=e[r]&&function(t){return new Promise((function(o,i){t=e[r](t),n(o,i,t.done,t.value)}))}}function n(e,t,r,o){Promise.resolve(o).then((function(t){e({value:t,done:r})}),t)}};import{AsyncIterableObject}from"../../../../base/common/async.js";import{isEmptyMarkdownString,MarkdownString}from"../../../../base/common/htmlContent.js";import{Position}from"../../../common/core/position.js";import{HoverProviderRegistry}from"../../../common/languages.js";import{ModelDecorationInjectedTextOptions}from"../../../common/model/textModel.js";import{HoverForeignElementAnchor}from"../../hover/browser/hoverTypes.js";import{ILanguageService}from"../../../common/services/language.js";import{ITextModelService}from"../../../common/services/resolverService.js";import{getHover}from"../../hover/browser/getHover.js";import{MarkdownHover,MarkdownHoverParticipant}from"../../hover/browser/markdownHoverParticipant.js";import{RenderedInlayHintLabelPart,InlayHintsController}from"./inlayHintsController.js";import{IConfigurationService}from"../../../../platform/configuration/common/configuration.js";import{IOpenerService}from"../../../../platform/opener/common/opener.js";class InlayHintsHoverAnchor extends HoverForeignElementAnchor{constructor(e,t){super(10,t,e.item.anchor.range),this.part=e}}let InlayHintsHover=class extends MarkdownHoverParticipant{constructor(e,t,r,o,n){super(e,t,r,o),this._resolverService=n}suggestHoverAnchor(e){var t;const r=InlayHintsController.get(this._editor);if(!r)return null;if(6!==e.target.type)return null;const o=null===(t=e.target.detail.injectedText)||void 0===t?void 0:t.options;return o instanceof ModelDecorationInjectedTextOptions&&o.attachedData instanceof RenderedInlayHintLabelPart?new InlayHintsHoverAnchor(o.attachedData,this):null}computeSync(){return[]}computeAsync(e,t,r){return e instanceof InlayHintsHoverAnchor?new AsyncIterableObject((t=>__awaiter(this,void 0,void 0,(function*(){var o,n;const{part:i}=e;if(yield i.item.resolve(r),r.isCancellationRequested)return;let a,c;"string"===typeof i.item.hint.tooltip?a=(new MarkdownString).appendText(i.item.hint.tooltip):i.item.hint.tooltip&&(a=i.item.hint.tooltip),a&&t.emitOne(new MarkdownHover(this,e.range,[a],0)),"string"===typeof i.part.tooltip?c=(new MarkdownString).appendText(i.part.tooltip):i.part.tooltip&&(c=i.part.tooltip),c&&t.emitOne(new MarkdownHover(this,e.range,[c],1));const s=yield this._resolveInlayHintLabelPartHover(i,r);try{for(var l,m=__asyncValues(s);l=yield m.next(),!l.done;){let e=l.value;t.emitOne(e)}}catch(p){o={error:p}}finally{try{l&&!l.done&&(n=m.return)&&(yield n.call(m))}finally{if(o)throw o.error}}})))):AsyncIterableObject.EMPTY}_resolveInlayHintLabelPartHover(e,t){return __awaiter(this,void 0,void 0,(function*(){if(!e.part.location)return AsyncIterableObject.EMPTY;const{uri:r,range:o}=e.part.location,n=yield this._resolverService.createModelReference(r);try{const r=n.object.textEditorModel;return HoverProviderRegistry.has(r)?getHover(r,new Position(o.startLineNumber,o.startColumn),t).filter((e=>!isEmptyMarkdownString(e.hover.contents))).map((t=>new MarkdownHover(this,e.item.anchor.range,t.hover.contents,2+t.ordinal))):AsyncIterableObject.EMPTY}finally{n.dispose()}}))}};InlayHintsHover=__decorate([__param(1,ILanguageService),__param(2,IOpenerService),__param(3,IConfigurationService),__param(4,ITextModelService)],InlayHintsHover);export{InlayHintsHover};