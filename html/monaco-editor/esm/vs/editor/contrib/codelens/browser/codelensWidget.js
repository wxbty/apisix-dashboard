import*as dom from"../../../../base/browser/dom.js";import{renderLabelWithIcons}from"../../../../base/browser/ui/iconLabel/iconLabels.js";import"./codelensWidget.css";import{Range}from"../../../common/core/range.js";import{ModelDecorationOptions}from"../../../common/model/textModel.js";class CodeLensViewZone{constructor(t,e,o){this.afterColumn=1073741824,this.afterLineNumber=t,this.heightInPx=e,this._onHeight=o,this.suppressMouseDown=!0,this.domNode=document.createElement("div")}onComputedHeight(t){void 0===this._lastHeight?this._lastHeight=t:this._lastHeight!==t&&(this._lastHeight=t,this._onHeight())}isVisible(){return 0!==this._lastHeight&&this.domNode.hasAttribute("monaco-visible-view-zone")}}class CodeLensContentWidget{constructor(t,e,o){this.allowEditorOverflow=!1,this.suppressMouseDown=!0,this._commands=new Map,this._isEmpty=!0,this._editor=t,this._id="codelens.widget-"+CodeLensContentWidget._idPool++,this.updatePosition(o),this._domNode=document.createElement("span"),this._domNode.className=`codelens-decoration ${e}`}withCommands(t,e){this._commands.clear();let o=[],i=!1;for(let s=0;s<t.length;s++){const e=t[s];if(e&&(i=!0,e.command)){const i=renderLabelWithIcons(e.command.title.trim());e.command.id?(o.push(dom.$("a",{id:String(s),title:e.command.tooltip},...i)),this._commands.set(String(s),e.command)):o.push(dom.$("span",{title:e.command.tooltip},...i)),s+1<t.length&&o.push(dom.$("span",void 0,"\xa0|\xa0"))}}i?(dom.reset(this._domNode,...o),this._isEmpty&&e&&this._domNode.classList.add("fadein"),this._isEmpty=!1):dom.reset(this._domNode,dom.$("span",void 0,"no commands"))}getCommand(t){return t.parentElement===this._domNode?this._commands.get(t.id):void 0}getId(){return this._id}getDomNode(){return this._domNode}updatePosition(t){const e=this._editor.getModel().getLineFirstNonWhitespaceColumn(t);this._widgetPosition={position:{lineNumber:t,column:e},preference:[1]}}getPosition(){return this._widgetPosition||null}}CodeLensContentWidget._idPool=0;export class CodeLensHelper{constructor(){this._removeDecorations=[],this._addDecorations=[],this._addDecorationsCallbacks=[]}addDecoration(t,e){this._addDecorations.push(t),this._addDecorationsCallbacks.push(e)}removeDecoration(t){this._removeDecorations.push(t)}commit(t){let e=t.deltaDecorations(this._removeDecorations,this._addDecorations);for(let o=0,i=e.length;o<i;o++)this._addDecorationsCallbacks[o](e[o])}}export class CodeLensWidget{constructor(t,e,o,i,s,n,d){let a;this._isDisposed=!1,this._editor=e,this._className=o,this._data=t,this._decorationIds=[];let r=[];this._data.forEach(((t,e)=>{t.symbol.command&&r.push(t.symbol),i.addDecoration({range:t.symbol.range,options:ModelDecorationOptions.EMPTY},(t=>this._decorationIds[e]=t)),a=a?Range.plusRange(a,t.symbol.range):Range.lift(t.symbol.range)})),this._viewZone=new CodeLensViewZone(a.startLineNumber-1,n,d),this._viewZoneId=s.addZone(this._viewZone),r.length>0&&(this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(r,!1))}_createContentWidgetIfNecessary(){this._contentWidget?this._editor.layoutContentWidget(this._contentWidget):(this._contentWidget=new CodeLensContentWidget(this._editor,this._className,this._viewZone.afterLineNumber+1),this._editor.addContentWidget(this._contentWidget))}dispose(t,e){this._decorationIds.forEach(t.removeDecoration,t),this._decorationIds=[],e&&e.removeZone(this._viewZoneId),this._contentWidget&&(this._editor.removeContentWidget(this._contentWidget),this._contentWidget=void 0),this._isDisposed=!0}isDisposed(){return this._isDisposed}isValid(){return this._decorationIds.some(((t,e)=>{const o=this._editor.getModel().getDecorationRange(t),i=this._data[e].symbol;return!(!o||Range.isEmpty(i.range)!==o.isEmpty())}))}updateCodeLensSymbols(t,e){this._decorationIds.forEach(e.removeDecoration,e),this._decorationIds=[],this._data=t,this._data.forEach(((t,o)=>{e.addDecoration({range:t.symbol.range,options:ModelDecorationOptions.EMPTY},(t=>this._decorationIds[o]=t))}))}updateHeight(t,e){this._viewZone.heightInPx=t,e.layoutZone(this._viewZoneId),this._contentWidget&&this._editor.layoutContentWidget(this._contentWidget)}computeIfNecessary(t){if(!this._viewZone.isVisible())return null;for(let e=0;e<this._decorationIds.length;e++){const o=t.getDecorationRange(this._decorationIds[e]);o&&(this._data[e].symbol.range=o)}return this._data}updateCommands(t){this._createContentWidgetIfNecessary(),this._contentWidget.withCommands(t,!0);for(let e=0;e<this._data.length;e++){const o=t[e];if(o){const{symbol:t}=this._data[e];t.command=o.command||t.command}}}getCommand(t){var e;return null===(e=this._contentWidget)||void 0===e?void 0:e.getCommand(t)}getLineNumber(){const t=this._editor.getModel().getDecorationRange(this._decorationIds[0]);return t?t.startLineNumber:-1}update(t){if(this.isValid()){const e=this._editor.getModel().getDecorationRange(this._decorationIds[0]);e&&(this._viewZone.afterLineNumber=e.startLineNumber-1,t.layoutZone(this._viewZoneId),this._contentWidget&&(this._contentWidget.updatePosition(e.startLineNumber),this._editor.layoutContentWidget(this._contentWidget)))}}}