import{DisposableStore}from"../../../../base/common/lifecycle.js";import*as strings from"../../../../base/common/strings.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{ShiftCommand}from"../../../common/commands/shiftCommand.js";import{EditOperation}from"../../../common/core/editOperation.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{TextModel}from"../../../common/model/textModel.js";import{ILanguageConfigurationService,LanguageConfigurationRegistry}from"../../../common/languages/languageConfigurationRegistry.js";import{IModelService}from"../../../common/services/model.js";import*as indentUtils from"./indentUtils.js";import*as nls from"../../../../nls.js";import{IQuickInputService}from"../../../../platform/quickinput/common/quickInput.js";export function getReindentEditOperations(e,t,n,i,o){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return[];const s=t.getLanguageConfiguration(e.getLanguageId()).indentationRules;if(!s)return[];i=Math.min(i,e.getLineCount());while(n<=i){if(!s.unIndentedLinePattern)break;let t=e.getLineContent(n);if(!s.unIndentedLinePattern.test(t))break;n++}if(n>i-1)return[];const{tabSize:r,indentSize:a,insertSpaces:d}=e.getOptions(),l=(e,t)=>(t=t||1,ShiftCommand.shiftIndent(e,e.length+t,r,a,d)),c=(e,t)=>(t=t||1,ShiftCommand.unshiftIndent(e,e.length+t,r,a,d));let g,u=[],p=e.getLineContent(n),h=p;if(void 0!==o&&null!==o){g=o;let e=strings.getLeadingWhitespace(p);h=g+p.substring(e.length),s.decreaseIndentPattern&&s.decreaseIndentPattern.test(h)&&(g=c(g),h=g+p.substring(e.length)),p!==h&&u.push(EditOperation.replaceMove(new Selection(n,1,n,e.length+1),TextModel.normalizeIndentation(g,a,d)))}else g=strings.getLeadingWhitespace(p);let m=g;s.increaseIndentPattern&&s.increaseIndentPattern.test(h)?(m=l(m),g=l(g)):s.indentNextLinePattern&&s.indentNextLinePattern.test(h)&&(m=l(m)),n++;for(let I=n;I<=i;I++){let t=e.getLineContent(I),n=strings.getLeadingWhitespace(t),i=m+t.substring(n.length);s.decreaseIndentPattern&&s.decreaseIndentPattern.test(i)&&(m=c(m),g=c(g)),n!==m&&u.push(EditOperation.replaceMove(new Selection(I,1,I,n.length+1),TextModel.normalizeIndentation(m,a,d))),s.unIndentedLinePattern&&s.unIndentedLinePattern.test(t)||(s.increaseIndentPattern&&s.increaseIndentPattern.test(i)?(g=l(g),m=g):m=s.indentNextLinePattern&&s.indentNextLinePattern.test(i)?l(m):g)}return u}export class IndentationToSpacesAction extends EditorAction{constructor(){super({id:IndentationToSpacesAction.ID,label:nls.localize("indentationToSpaces","Convert Indentation to Spaces"),alias:"Convert Indentation to Spaces",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToSpacesCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!0})}}IndentationToSpacesAction.ID="editor.action.indentationToSpaces";export class IndentationToTabsAction extends EditorAction{constructor(){super({id:IndentationToTabsAction.ID,label:nls.localize("indentationToTabs","Convert Indentation to Tabs"),alias:"Convert Indentation to Tabs",precondition:EditorContextKeys.writable})}run(e,t){let n=t.getModel();if(!n)return;let i=n.getOptions(),o=t.getSelection();if(!o)return;const s=new IndentationToTabsCommand(o,i.tabSize);t.pushUndoStop(),t.executeCommands(this.id,[s]),t.pushUndoStop(),n.updateOptions({insertSpaces:!1})}}IndentationToTabsAction.ID="editor.action.indentationToTabs";export class ChangeIndentationSizeAction extends EditorAction{constructor(e,t){super(t),this.insertSpaces=e}run(e,t){const n=e.get(IQuickInputService),i=e.get(IModelService);let o=t.getModel();if(!o)return;const s=i.getCreationOptions(o.getLanguageId(),o.uri,o.isForSimpleWidget),r=[1,2,3,4,5,6,7,8].map((e=>({id:e.toString(),label:e.toString(),description:e===s.tabSize?nls.localize("configuredTabSize","Configured Tab Size"):void 0}))),a=Math.min(o.getOptions().tabSize-1,7);setTimeout((()=>{n.pick(r,{placeHolder:nls.localize({key:"selectTabWidth",comment:["Tab corresponds to the tab key"]},"Select Tab Size for Current File"),activeItem:r[a]}).then((e=>{e&&o&&!o.isDisposed()&&o.updateOptions({tabSize:parseInt(e.label,10),insertSpaces:this.insertSpaces})}))}),50)}}export class IndentUsingTabs extends ChangeIndentationSizeAction{constructor(){super(!1,{id:IndentUsingTabs.ID,label:nls.localize("indentUsingTabs","Indent Using Tabs"),alias:"Indent Using Tabs",precondition:void 0})}}IndentUsingTabs.ID="editor.action.indentUsingTabs";export class IndentUsingSpaces extends ChangeIndentationSizeAction{constructor(){super(!0,{id:IndentUsingSpaces.ID,label:nls.localize("indentUsingSpaces","Indent Using Spaces"),alias:"Indent Using Spaces",precondition:void 0})}}IndentUsingSpaces.ID="editor.action.indentUsingSpaces";export class DetectIndentation extends EditorAction{constructor(){super({id:DetectIndentation.ID,label:nls.localize("detectIndentation","Detect Indentation from Content"),alias:"Detect Indentation from Content",precondition:void 0})}run(e,t){const n=e.get(IModelService);let i=t.getModel();if(!i)return;const o=n.getCreationOptions(i.getLanguageId(),i.uri,i.isForSimpleWidget);i.detectIndentation(o.insertSpaces,o.tabSize)}}DetectIndentation.ID="editor.action.detectIndentation";export class ReindentLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentlines",label:nls.localize("editor.reindentlines","Reindent Lines"),alias:"Reindent Lines",precondition:EditorContextKeys.writable})}run(e,t){const n=e.get(ILanguageConfigurationService);let i=t.getModel();if(!i)return;let o=getReindentEditOperations(i,n,1,i.getLineCount());o.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,o),t.pushUndoStop())}}export class ReindentSelectedLinesAction extends EditorAction{constructor(){super({id:"editor.action.reindentselectedlines",label:nls.localize("editor.reindentselectedlines","Reindent Selected Lines"),alias:"Reindent Selected Lines",precondition:EditorContextKeys.writable})}run(e,t){const n=e.get(ILanguageConfigurationService);let i=t.getModel();if(!i)return;let o=t.getSelections();if(null===o)return;let s=[];for(let r of o){let e=r.startLineNumber,t=r.endLineNumber;if(e!==t&&1===r.endColumn&&t--,1===e){if(e===t)continue}else e--;let o=getReindentEditOperations(i,n,e,t);s.push(...o)}s.length>0&&(t.pushUndoStop(),t.executeEdits(this.id,s),t.pushUndoStop())}}export class AutoIndentOnPasteCommand{constructor(e,t){this._initialSelection=t,this._edits=[],this._selectionId=null;for(let n of e)n.range&&"string"===typeof n.text&&this._edits.push(n)}getEditOperations(e,t){for(let i of this._edits)t.addEditOperation(Range.lift(i.range),i.text);let n=!1;Array.isArray(this._edits)&&1===this._edits.length&&this._initialSelection.isEmpty()&&(this._edits[0].range.startColumn===this._initialSelection.endColumn&&this._edits[0].range.startLineNumber===this._initialSelection.endLineNumber?(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!0)):this._edits[0].range.endColumn===this._initialSelection.startColumn&&this._edits[0].range.endLineNumber===this._initialSelection.startLineNumber&&(n=!0,this._selectionId=t.trackSelection(this._initialSelection,!1))),n||(this._selectionId=t.trackSelection(this._initialSelection))}computeCursorState(e,t){return t.getTrackedSelection(this._selectionId)}}export class AutoIndentOnPaste{constructor(e){this.callOnDispose=new DisposableStore,this.callOnModel=new DisposableStore,this.editor=e,this.callOnDispose.add(e.onDidChangeConfiguration((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModel((()=>this.update()))),this.callOnDispose.add(e.onDidChangeModelLanguage((()=>this.update())))}update(){this.callOnModel.clear(),this.editor.getOption(9)<4||this.editor.getOption(48)||this.editor.hasModel()&&this.callOnModel.add(this.editor.onDidPaste((({range:e})=>{this.trigger(e)})))}trigger(e){let t=this.editor.getSelections();if(null===t||t.length>1)return;const n=this.editor.getModel();if(!n)return;if(!n.isCheapToTokenize(e.getStartPosition().lineNumber))return;const i=this.editor.getOption(9),{tabSize:o,indentSize:s,insertSpaces:r}=n.getOptions();let a=[],d={shiftIndent:e=>ShiftCommand.shiftIndent(e,e.length+1,o,s,r),unshiftIndent:e=>ShiftCommand.unshiftIndent(e,e.length+1,o,s,r)},l=e.startLineNumber;while(l<=e.endLineNumber){if(!this.shouldIgnoreLine(n,l))break;l++}if(l>e.endLineNumber)return;let c=n.getLineContent(l);if(!/\S/.test(c.substring(0,e.startColumn-1))){const e=LanguageConfigurationRegistry.getGoodIndentForLine(i,n,n.getLanguageId(),l,d);if(null!==e){let t=strings.getLeadingWhitespace(c),i=indentUtils.getSpaceCnt(e,o),s=indentUtils.getSpaceCnt(t,o);if(i!==s){let e=indentUtils.generateIndent(i,o,r);a.push({range:new Range(l,1,l,t.length+1),text:e}),c=e+c.substr(t.length)}else{let e=LanguageConfigurationRegistry.getIndentMetadata(n,l);if(0===e||8===e)return}}}const g=l;while(l<e.endLineNumber){if(/\S/.test(n.getLineContent(l+1)))break;l++}if(l!==e.endLineNumber){let t={getLineTokens:e=>n.getLineTokens(e),getLanguageId:()=>n.getLanguageId(),getLanguageIdAtPosition:(e,t)=>n.getLanguageIdAtPosition(e,t),getLineContent:e=>e===g?c:n.getLineContent(e)},s=LanguageConfigurationRegistry.getGoodIndentForLine(i,t,n.getLanguageId(),l+1,d);if(null!==s){let t=indentUtils.getSpaceCnt(s,o),i=indentUtils.getSpaceCnt(strings.getLeadingWhitespace(n.getLineContent(l+1)),o);if(t!==i){let s=t-i;for(let t=l+1;t<=e.endLineNumber;t++){let e=n.getLineContent(t),i=strings.getLeadingWhitespace(e),d=indentUtils.getSpaceCnt(i,o),l=d+s,c=indentUtils.generateIndent(l,o,r);c!==i&&a.push({range:new Range(t,1,t,i.length+1),text:c})}}}}if(a.length>0){this.editor.pushUndoStop();let e=new AutoIndentOnPasteCommand(a,this.editor.getSelection());this.editor.executeCommand("autoIndentOnPaste",e),this.editor.pushUndoStop()}}shouldIgnoreLine(e,t){e.forceTokenization(t);let n=e.getLineFirstNonWhitespaceColumn(t);if(0===n)return!0;let i=e.getLineTokens(t);if(i.getCount()>0){let e=i.findTokenIndexAtOffset(n);if(e>=0&&1===i.getStandardTokenType(e))return!0}return!1}dispose(){this.callOnDispose.dispose(),this.callOnModel.dispose()}}function getIndentationEditOperations(e,t,n,i){if(1===e.getLineCount()&&1===e.getLineMaxColumn(1))return;let o="";for(let r=0;r<n;r++)o+=" ";let s=new RegExp(o,"gi");for(let r=1,a=e.getLineCount();r<=a;r++){let n=e.getLineFirstNonWhitespaceColumn(r);if(0===n&&(n=e.getLineMaxColumn(r)),1===n)continue;const a=new Range(r,1,r,n),d=e.getValueInRange(a),l=i?d.replace(/\t/gi,o):d.replace(s,"\t");t.addEditOperation(a,l)}}AutoIndentOnPaste.ID="editor.contrib.autoIndentOnPaste";export class IndentationToSpacesCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!0)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}export class IndentationToTabsCommand{constructor(e,t){this.selection=e,this.tabSize=t,this.selectionId=null}getEditOperations(e,t){this.selectionId=t.trackSelection(this.selection),getIndentationEditOperations(e,t,this.tabSize,!1)}computeCursorState(e,t){return t.getTrackedSelection(this.selectionId)}}registerEditorContribution(AutoIndentOnPaste.ID,AutoIndentOnPaste),registerEditorAction(IndentationToSpacesAction),registerEditorAction(IndentationToTabsAction),registerEditorAction(IndentUsingTabs),registerEditorAction(IndentUsingSpaces),registerEditorAction(DetectIndentation),registerEditorAction(ReindentLinesAction),registerEditorAction(ReindentSelectedLinesAction);