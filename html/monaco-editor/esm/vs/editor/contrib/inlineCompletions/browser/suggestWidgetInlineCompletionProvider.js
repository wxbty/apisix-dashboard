import{compareBy,findMaxBy,numberComparator}from"../../../../base/common/arrays.js";import{RunOnceScheduler}from"../../../../base/common/async.js";import{Emitter,Event}from"../../../../base/common/event.js";import{Disposable}from"../../../../base/common/lifecycle.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{SnippetParser}from"../../snippet/browser/snippetParser.js";import{SnippetSession}from"../../snippet/browser/snippetSession.js";import{SuggestController}from"../../suggest/browser/suggestController.js";import{minimizeInlineCompletion}from"./inlineCompletionsModel.js";import{normalizedInlineCompletionsEquals}from"./inlineCompletionToGhostText.js";export class SuggestWidgetInlineCompletionProvider extends Disposable{constructor(e,t){super(),this.editor=e,this.suggestControllerPreselector=t,this.isSuggestWidgetVisible=!1,this.isShiftKeyPressed=!1,this._isActive=!1,this._currentSuggestItemInfo=void 0,this.onDidChangeEmitter=new Emitter,this.onDidChange=this.onDidChangeEmitter.event,this.setInactiveDelayed=this._register(new RunOnceScheduler((()=>{this.isSuggestWidgetVisible||this._isActive&&(this._isActive=!1,this.onDidChangeEmitter.fire())}),100)),this._register(e.onKeyDown((e=>{e.shiftKey&&!this.isShiftKeyPressed&&(this.isShiftKeyPressed=!0,this.update(this._isActive))}))),this._register(e.onKeyUp((e=>{e.shiftKey&&this.isShiftKeyPressed&&(this.isShiftKeyPressed=!1,this.update(this._isActive))})));const i=SuggestController.get(this.editor);if(i){this._register(i.registerSelector({priority:100,select:(e,t,s)=>{const n=this.editor.getModel(),o=minimizeInlineCompletion(n,this.suggestControllerPreselector());if(!o)return-1;const r=Position.lift(t),g=s.map(((e,t)=>{const s=suggestionToSuggestItemInfo(i,r,e,this.isShiftKeyPressed),g=minimizeInlineCompletion(n,null===s||void 0===s?void 0:s.normalizedInlineCompletion);if(!g)return;const m=rangeStartsWith(o.range,g.range)&&o.text.startsWith(g.text);return{index:t,valid:m,prefixLength:g.text.length,suggestItem:e}})).filter((e=>e&&e.valid)),m=findMaxBy(g,compareBy((e=>e.prefixLength),numberComparator));return m?m.index:-1}}));let e=!1;const t=()=>{e||(e=!0,this._register(i.widget.value.onDidShow((()=>{this.isSuggestWidgetVisible=!0,this.update(!0)}))),this._register(i.widget.value.onDidHide((()=>{this.isSuggestWidgetVisible=!1,this.setInactiveDelayed.schedule(),this.update(this._isActive)}))),this._register(i.widget.value.onDidFocus((()=>{this.isSuggestWidgetVisible=!0,this.update(!0)}))))};this._register(Event.once(i.model.onDidTrigger)((e=>{t()})))}this.update(this._isActive)}get state(){if(this._isActive)return{selectedItem:this._currentSuggestItemInfo}}update(e){const t=this.getSuggestItemInfo();let i=!1;suggestItemInfoEquals(this._currentSuggestItemInfo,t)||(this._currentSuggestItemInfo=t,i=!0),this._isActive!==e&&(this._isActive=e,i=!0),i&&this.onDidChangeEmitter.fire()}getSuggestItemInfo(){const e=SuggestController.get(this.editor);if(!e)return;if(!this.isSuggestWidgetVisible)return;const t=e.widget.value.getFocusedItem();return t?suggestionToSuggestItemInfo(e,this.editor.getPosition(),t.item,this.isShiftKeyPressed):void 0}stopForceRenderingAbove(){const e=SuggestController.get(this.editor);e&&e.stopForceRenderingAbove()}forceRenderingAbove(){const e=SuggestController.get(this.editor);e&&e.forceRenderingAbove()}}export function rangeStartsWith(e,t){return t.startLineNumber===e.startLineNumber&&t.startColumn===e.startColumn&&(t.endLineNumber<e.endLineNumber||t.endLineNumber===e.endLineNumber&&t.endColumn<=e.endColumn)}function suggestItemInfoEquals(e,t){return e===t||!(!e||!t)&&(e.completionItemKind===t.completionItemKind&&e.isSnippetText===t.isSnippetText&&normalizedInlineCompletionsEquals(e.normalizedInlineCompletion,t.normalizedInlineCompletion))}function suggestionToSuggestItemInfo(e,t,i,s){if(Array.isArray(i.completion.additionalTextEdits)&&i.completion.additionalTextEdits.length>0)return{completionItemKind:i.completion.kind,isSnippetText:!1,normalizedInlineCompletion:{range:Range.fromPositions(t,t),text:""}};let{insertText:n}=i.completion,o=!1;if(4&i.completion.insertTextRules){const i=(new SnippetParser).parse(n),s=e.editor.getModel();if(i.children.length>100)return;SnippetSession.adjustWhitespace(s,t,i,!0,!0),n=i.toString(),o=!0}const r=e.getOverwriteInfo(i,s);return{isSnippetText:o,completionItemKind:i.completion.kind,normalizedInlineCompletion:{text:n,range:Range.fromPositions(t.delta(0,-r.overwriteBefore),t.delta(0,Math.max(r.overwriteAfter,0)))}}}