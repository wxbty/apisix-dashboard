var __awaiter=this&&this.__awaiter||function(e,r,n,t){function o(e){return e instanceof n?e:new n((function(r){r(e)}))}return new(n||(n=Promise))((function(n,i){function a(e){try{s(t.next(e))}catch(r){i(r)}}function g(e){try{s(t["throw"](e))}catch(r){i(r)}}function s(e){e.done?n(e.value):o(e.value).then(a,g)}s((t=t.apply(e,r||[])).next())}))};import{Color}from"../../../base/common/color.js";import{Range}from"../../common/core/range.js";import*as languages from"../../common/languages.js";import{LanguageConfigurationRegistry}from"../../common/languages/languageConfigurationRegistry.js";import{ModesRegistry}from"../../common/languages/modesRegistry.js";import{ILanguageService}from"../../common/services/language.js";import*as standaloneEnums from"../../common/standalone/standaloneEnums.js";import{StandaloneServices}from"./standaloneServices.js";import{compile}from"../common/monarch/monarchCompile.js";import{MonarchTokenizer}from"../common/monarch/monarchLexer.js";import{IStandaloneThemeService}from"../common/standaloneTheme.js";import{IMarkerService}from"../../../platform/markers/common/markers.js";export function register(e){ModesRegistry.registerLanguage(e)}export function getLanguages(){let e=[];return e=e.concat(ModesRegistry.getLanguages()),e}export function getEncodedLanguageId(e){const r=StandaloneServices.get(ILanguageService);return r.languageIdCodec.encodeLanguageId(e)}export function onLanguage(e,r){const n=StandaloneServices.get(ILanguageService),t=n.onDidEncounterLanguage((n=>{n===e&&(t.dispose(),r())}));return t}export function setLanguageConfiguration(e,r){const n=StandaloneServices.get(ILanguageService);if(!n.isRegisteredLanguageId(e))throw new Error(`Cannot set configuration for unknown language ${e}`);return LanguageConfigurationRegistry.register(e,r,100)}export class EncodedTokenizationSupportAdapter{constructor(e,r){this._languageId=e,this._actual=r}getInitialState(){return this._actual.getInitialState()}tokenize(e,r,n){if("function"===typeof this._actual.tokenize)return TokenizationSupportAdapter.adaptTokenize(this._languageId,this._actual,e,n);throw new Error("Not supported!")}tokenizeEncoded(e,r,n){const t=this._actual.tokenizeEncoded(e,n);return new languages.EncodedTokenizationResult(t.tokens,t.endState)}}export class TokenizationSupportAdapter{constructor(e,r,n,t){this._languageId=e,this._actual=r,this._languageService=n,this._standaloneThemeService=t}getInitialState(){return this._actual.getInitialState()}static _toClassicTokens(e,r){const n=[];let t=0;for(let o=0,i=e.length;o<i;o++){const i=e[o];let a=i.startIndex;0===o?a=0:a<t&&(a=t),n[o]=new languages.Token(a,i.scopes,r),t=a}return n}static adaptTokenize(e,r,n,t){const o=r.tokenize(n,t),i=TokenizationSupportAdapter._toClassicTokens(o.tokens,e);let a;return a=o.endState.equals(t)?t:o.endState,new languages.TokenizationResult(i,a)}tokenize(e,r,n){return TokenizationSupportAdapter.adaptTokenize(this._languageId,this._actual,e,n)}_toBinaryTokens(e,r){const n=e.encodeLanguageId(this._languageId),t=this._standaloneThemeService.getColorTheme().tokenTheme,o=[];let i=0,a=0;for(let s=0,d=r.length;s<d;s++){const e=r[s],g=t.match(n,e.scopes);if(i>0&&o[i-1]===g)continue;let d=e.startIndex;0===s?d=0:d<a&&(d=a),o[i++]=d,o[i++]=g,a=d}const g=new Uint32Array(i);for(let s=0;s<i;s++)g[s]=o[s];return g}tokenizeEncoded(e,r,n){const t=this._actual.tokenize(e,n),o=this._toBinaryTokens(this._languageService.languageIdCodec,t.tokens);let i;return i=t.endState.equals(n)?n:t.endState,new languages.EncodedTokenizationResult(o,i)}}function isATokensProvider(e){return"function"===typeof e.getInitialState}function isEncodedTokensProvider(e){return"tokenizeEncoded"in e}function isThenable(e){return e&&"function"===typeof e.then}export function setColorMap(e){const r=StandaloneServices.get(IStandaloneThemeService);if(e){const n=[null];for(let r=1,t=e.length;r<t;r++)n[r]=Color.fromHex(e[r]);r.setColorMapOverride(n)}else r.setColorMapOverride(null)}function createTokenizationSupportAdapter(e,r){return isEncodedTokensProvider(r)?new EncodedTokenizationSupportAdapter(e,r):new TokenizationSupportAdapter(e,r,StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService))}export function registerTokensProviderFactory(e,r){const n={createTokenizationSupport:()=>__awaiter(this,void 0,void 0,(function*(){const n=yield Promise.resolve(r.create());return n?isATokensProvider(n)?createTokenizationSupportAdapter(e,n):new MonarchTokenizer(StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService),e,compile(e,n)):null}))};return languages.TokenizationRegistry.registerFactory(e,n)}export function setTokensProvider(e,r){const n=StandaloneServices.get(ILanguageService);if(!n.isRegisteredLanguageId(e))throw new Error(`Cannot set tokens provider for unknown language ${e}`);return isThenable(r)?registerTokensProviderFactory(e,{create:()=>r}):languages.TokenizationRegistry.register(e,createTokenizationSupportAdapter(e,r))}export function setMonarchTokensProvider(e,r){const n=r=>new MonarchTokenizer(StandaloneServices.get(ILanguageService),StandaloneServices.get(IStandaloneThemeService),e,compile(e,r));return isThenable(r)?registerTokensProviderFactory(e,{create:()=>r}):languages.TokenizationRegistry.register(e,n(r))}export function registerReferenceProvider(e,r){return languages.ReferenceProviderRegistry.register(e,r)}export function registerRenameProvider(e,r){return languages.RenameProviderRegistry.register(e,r)}export function registerSignatureHelpProvider(e,r){return languages.SignatureHelpProviderRegistry.register(e,r)}export function registerHoverProvider(e,r){return languages.HoverProviderRegistry.register(e,{provideHover:(e,n,t)=>{const o=e.getWordAtPosition(n);return Promise.resolve(r.provideHover(e,n,t)).then((e=>{if(e)return!e.range&&o&&(e.range=new Range(n.lineNumber,o.startColumn,n.lineNumber,o.endColumn)),e.range||(e.range=new Range(n.lineNumber,n.column,n.lineNumber,n.column)),e}))}})}export function registerDocumentSymbolProvider(e,r){return languages.DocumentSymbolProviderRegistry.register(e,r)}export function registerDocumentHighlightProvider(e,r){return languages.DocumentHighlightProviderRegistry.register(e,r)}export function registerLinkedEditingRangeProvider(e,r){return languages.LinkedEditingRangeProviderRegistry.register(e,r)}export function registerDefinitionProvider(e,r){return languages.DefinitionProviderRegistry.register(e,r)}export function registerImplementationProvider(e,r){return languages.ImplementationProviderRegistry.register(e,r)}export function registerTypeDefinitionProvider(e,r){return languages.TypeDefinitionProviderRegistry.register(e,r)}export function registerCodeLensProvider(e,r){return languages.CodeLensProviderRegistry.register(e,r)}export function registerCodeActionProvider(e,r,n){return languages.CodeActionProviderRegistry.register(e,{providedCodeActionKinds:null===n||void 0===n?void 0:n.providedCodeActionKinds,provideCodeActions:(e,n,t,o)=>{const i=StandaloneServices.get(IMarkerService),a=i.read({resource:e.uri}).filter((e=>Range.areIntersectingOrTouching(e,n)));return r.provideCodeActions(e,n,{markers:a,only:t.only},o)},resolveCodeAction:r.resolveCodeAction})}export function registerDocumentFormattingEditProvider(e,r){return languages.DocumentFormattingEditProviderRegistry.register(e,r)}export function registerDocumentRangeFormattingEditProvider(e,r){return languages.DocumentRangeFormattingEditProviderRegistry.register(e,r)}export function registerOnTypeFormattingEditProvider(e,r){return languages.OnTypeFormattingEditProviderRegistry.register(e,r)}export function registerLinkProvider(e,r){return languages.LinkProviderRegistry.register(e,r)}export function registerCompletionItemProvider(e,r){return languages.CompletionProviderRegistry.register(e,r)}export function registerColorProvider(e,r){return languages.ColorProviderRegistry.register(e,r)}export function registerFoldingRangeProvider(e,r){return languages.FoldingRangeProviderRegistry.register(e,r)}export function registerDeclarationProvider(e,r){return languages.DeclarationProviderRegistry.register(e,r)}export function registerSelectionRangeProvider(e,r){return languages.SelectionRangeRegistry.register(e,r)}export function registerDocumentSemanticTokensProvider(e,r){return languages.DocumentSemanticTokensProviderRegistry.register(e,r)}export function registerDocumentRangeSemanticTokensProvider(e,r){return languages.DocumentRangeSemanticTokensProviderRegistry.register(e,r)}export function registerInlineCompletionsProvider(e,r){return languages.InlineCompletionsProviderRegistry.register(e,r)}export function registerInlayHintsProvider(e,r){return languages.InlayHintsProviderRegistry.register(e,r)}export function createMonacoLanguagesAPI(){return{register:register,getLanguages:getLanguages,onLanguage:onLanguage,getEncodedLanguageId:getEncodedLanguageId,setLanguageConfiguration:setLanguageConfiguration,setColorMap:setColorMap,registerTokensProviderFactory:registerTokensProviderFactory,setTokensProvider:setTokensProvider,setMonarchTokensProvider:setMonarchTokensProvider,registerReferenceProvider:registerReferenceProvider,registerRenameProvider:registerRenameProvider,registerCompletionItemProvider:registerCompletionItemProvider,registerSignatureHelpProvider:registerSignatureHelpProvider,registerHoverProvider:registerHoverProvider,registerDocumentSymbolProvider:registerDocumentSymbolProvider,registerDocumentHighlightProvider:registerDocumentHighlightProvider,registerLinkedEditingRangeProvider:registerLinkedEditingRangeProvider,registerDefinitionProvider:registerDefinitionProvider,registerImplementationProvider:registerImplementationProvider,registerTypeDefinitionProvider:registerTypeDefinitionProvider,registerCodeLensProvider:registerCodeLensProvider,registerCodeActionProvider:registerCodeActionProvider,registerDocumentFormattingEditProvider:registerDocumentFormattingEditProvider,registerDocumentRangeFormattingEditProvider:registerDocumentRangeFormattingEditProvider,registerOnTypeFormattingEditProvider:registerOnTypeFormattingEditProvider,registerLinkProvider:registerLinkProvider,registerColorProvider:registerColorProvider,registerFoldingRangeProvider:registerFoldingRangeProvider,registerDeclarationProvider:registerDeclarationProvider,registerSelectionRangeProvider:registerSelectionRangeProvider,registerDocumentSemanticTokensProvider:registerDocumentSemanticTokensProvider,registerDocumentRangeSemanticTokensProvider:registerDocumentRangeSemanticTokensProvider,registerInlineCompletionsProvider:registerInlineCompletionsProvider,registerInlayHintsProvider:registerInlayHintsProvider,DocumentHighlightKind:standaloneEnums.DocumentHighlightKind,CompletionItemKind:standaloneEnums.CompletionItemKind,CompletionItemTag:standaloneEnums.CompletionItemTag,CompletionItemInsertTextRule:standaloneEnums.CompletionItemInsertTextRule,SymbolKind:standaloneEnums.SymbolKind,SymbolTag:standaloneEnums.SymbolTag,IndentAction:standaloneEnums.IndentAction,CompletionTriggerKind:standaloneEnums.CompletionTriggerKind,SignatureHelpTriggerKind:standaloneEnums.SignatureHelpTriggerKind,InlayHintKind:standaloneEnums.InlayHintKind,InlineCompletionTriggerKind:standaloneEnums.InlineCompletionTriggerKind,FoldingRangeKind:languages.FoldingRangeKind}}