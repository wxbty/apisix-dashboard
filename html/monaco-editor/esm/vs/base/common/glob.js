import{isThenable}from"./async.js";import{isEqualOrParent}from"./extpath.js";import{LRUCache}from"./map.js";import{basename,extname,posix,sep}from"./path.js";import{isLinux}from"./platform.js";import{escapeRegExpCharacters}from"./strings.js";export const GLOBSTAR="**";export const GLOB_SPLIT="/";const PATH_REGEX="[/\\\\]",NO_PATH_REGEX="[^/\\\\]",ALL_FORWARD_SLASHES=/\//g;function starsToRegExp(e){switch(e){case 0:return"";case 1:return`${NO_PATH_REGEX}*?`;default:return`(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`}}export function splitGlobAware(e,t){if(!e)return[];const n=[];let r=!1,s=!1,a="";for(const i of e){switch(i){case t:if(!r&&!s){n.push(a),a="";continue}break;case"{":r=!0;break;case"}":r=!1;break;case"[":s=!0;break;case"]":s=!1;break}a+=i}return a&&n.push(a),n}function parseRegExp(e){if(!e)return"";let t="";const n=splitGlobAware(e,GLOB_SPLIT);if(n.every((e=>e===GLOBSTAR)))t=".*";else{let e=!1;n.forEach(((r,s)=>{if(r===GLOBSTAR)return void(e||(t+=starsToRegExp(2),e=!0));let a=!1,i="",l=!1,o="";for(const e of r)if("}"!==e&&a)i+=e;else if(!l||"]"===e&&o)switch(e){case"{":a=!0;continue;case"[":l=!0;continue;case"}":{const e=splitGlobAware(i,","),n=`(?:${e.map((e=>parseRegExp(e))).join("|")})`;t+=n,a=!1,i="";break}case"]":t+="["+o+"]",l=!1,o="";break;case"?":t+=NO_PATH_REGEX;continue;case"*":t+=starsToRegExp(1);continue;default:t+=escapeRegExpCharacters(e)}else{let t;t="-"===e?e:"^"!==e&&"!"!==e||o?e===GLOB_SPLIT?"":escapeRegExpCharacters(e):"^",o+=t}s<n.length-1&&(n[s+1]!==GLOBSTAR||s+2<n.length)&&(t+=PATH_REGEX),e=!1}))}return t}const T1=/^\*\*\/\*\.[\w\.-]+$/,T2=/^\*\*\/([\w\.-]+)\/?$/,T3=/^{\*\*\/[\*\.]?[\w\.-]+\/?(,\*\*\/[\*\.]?[\w\.-]+\/?)*}$/,T3_2=/^{\*\*\/[\*\.]?[\w\.-]+(\/(\*\*)?)?(,\*\*\/[\*\.]?[\w\.-]+(\/(\*\*)?)?)*}$/,T4=/^\*\*((\/[\w\.-]+)+)\/?$/,T5=/^([\w\.-]+(\/[\w\.-]+)*)\/?$/,CACHE=new LRUCache(1e4),FALSE=function(){return!1},NULL=function(){return null};function parsePattern(e,t){if(!e)return NULL;let n;n="string"!==typeof e?e.pattern:e,n=n.trim();const r=`${n}_${!!t.trimForExclusions}`;let s,a=CACHE.get(r);if(a)return wrapRelativePattern(a,e);if(T1.test(n)){const e=n.substr(4);a=function(t,r){return"string"===typeof t&&t.endsWith(e)?n:null}}else a=(s=T2.exec(trimForExclusions(n,t)))?trivia2(s[1],n):(t.trimForExclusions?T3_2:T3).test(n)?trivia3(n,t):(s=T4.exec(trimForExclusions(n,t)))?trivia4and5(s[1].substr(1),n,!0):(s=T5.exec(trimForExclusions(n,t)))?trivia4and5(s[1],n,!1):toRegExp(n);return CACHE.set(r,a),wrapRelativePattern(a,e)}function wrapRelativePattern(e,t){return"string"===typeof t?e:function(n,r){return isEqualOrParent(n,t.base,!isLinux)?e(n.substr(t.base.length+1),r):null}}function trimForExclusions(e,t){return t.trimForExclusions&&e.endsWith("/**")?e.substr(0,e.length-2):e}function trivia2(e,t){const n=`/${e}`,r=`\\${e}`,s=function(s,a){return"string"!==typeof s?null:a?a===e?t:null:s===e||s.endsWith(n)||s.endsWith(r)?t:null},a=[e];return s.basenames=a,s.patterns=[t],s.allBasenames=a,s}function trivia3(e,t){const n=aggregateBasenameMatches(e.slice(1,-1).split(",").map((e=>parsePattern(e,t))).filter((e=>e!==NULL)),e),r=n.length;if(!r)return NULL;if(1===r)return n[0];const s=function(t,r){for(let s=0,a=n.length;s<a;s++)if(n[s](t,r))return e;return null},a=n.find((e=>!!e.allBasenames));a&&(s.allBasenames=a.allBasenames);const i=n.reduce(((e,t)=>t.allPaths?e.concat(t.allPaths):e),[]);return i.length&&(s.allPaths=i),s}function trivia4and5(e,t,n){const r=sep===posix.sep,s=r?e:e.replace(ALL_FORWARD_SLASHES,sep),a=sep+s,i=posix.sep+e,l=n?function(n,l){return"string"!==typeof n||n!==s&&!n.endsWith(a)&&(r||n!==e&&!n.endsWith(i))?null:t}:function(n,a){return"string"!==typeof n||n!==s&&(r||n!==e)?null:t};return l.allPaths=[(n?"*/":"./")+e],l}function toRegExp(e){try{const t=new RegExp(`^${parseRegExp(e)}$`);return function(n){return t.lastIndex=0,"string"===typeof n&&t.test(n)?e:null}}catch(t){return NULL}}export function match(e,t,n){return!(!e||"string"!==typeof t)&&parse(e)(t,void 0,n)}export function parse(e,t={}){if(!e)return FALSE;if("string"===typeof e||isRelativePattern(e)){const n=parsePattern(e,t);if(n===NULL)return FALSE;const r=function(e,t){return!!n(e,t)};return n.allBasenames&&(r.allBasenames=n.allBasenames),n.allPaths&&(r.allPaths=n.allPaths),r}return parsedExpression(e,t)}export function isRelativePattern(e){const t=e;return!!t&&("string"===typeof t.base&&"string"===typeof t.pattern)}function parsedExpression(e,t){const n=aggregateBasenameMatches(Object.getOwnPropertyNames(e).map((n=>parseExpressionPattern(n,e[n],t))).filter((e=>e!==NULL))),r=n.length;if(!r)return NULL;if(!n.some((e=>!!e.requiresSiblings))){if(1===r)return n[0];const e=function(e,t){for(let r=0,s=n.length;r<s;r++){const s=n[r](e,t);if(s)return s}return null},t=n.find((e=>!!e.allBasenames));t&&(e.allBasenames=t.allBasenames);const s=n.reduce(((e,t)=>t.allPaths?e.concat(t.allPaths):e),[]);return s.length&&(e.allPaths=s),e}const s=function(e,t,r){let s;for(let a=0,i=n.length;a<i;a++){const i=n[a];i.requiresSiblings&&r&&(t||(t=basename(e)),s||(s=t.substr(0,t.length-extname(e).length)));const l=i(e,t,s,r);if(l)return l}return null},a=n.find((e=>!!e.allBasenames));a&&(s.allBasenames=a.allBasenames);const i=n.reduce(((e,t)=>t.allPaths?e.concat(t.allPaths):e),[]);return i.length&&(s.allPaths=i),s}function parseExpressionPattern(e,t,n){if(!1===t)return NULL;const r=parsePattern(e,n);if(r===NULL)return NULL;if("boolean"===typeof t)return r;if(t){const n=t.when;if("string"===typeof n){const t=(t,s,a,i)=>{if(!i||!r(t,s))return null;const l=n.replace("$(basename)",a),o=i(l);return isThenable(o)?o.then((t=>t?e:null)):o?e:null};return t.requiresSiblings=!0,t}}return r}function aggregateBasenameMatches(e,t){const n=e.filter((e=>!!e.basenames));if(n.length<2)return e;const r=n.reduce(((e,t)=>{const n=t.basenames;return n?e.concat(n):e}),[]);let s;if(t){s=[];for(let e=0,n=r.length;e<n;e++)s.push(t)}else s=n.reduce(((e,t)=>{const n=t.patterns;return n?e.concat(n):e}),[]);const a=function(e,t){if("string"!==typeof e)return null;if(!t){let n;for(n=e.length;n>0;n--){const t=e.charCodeAt(n-1);if(47===t||92===t)break}t=e.substr(n)}const n=r.indexOf(t);return-1!==n?s[n]:null};a.basenames=r,a.patterns=s,a.allBasenames=r;const i=e.filter((e=>!e.basenames));return i.push(a),i}