import*as arrays from"./arrays.js";import*as types from"./types.js";import*as nls from"../../nls.js";function exceptionToErrorMessage(r,e){return e&&(r.stack||r.stacktrace)?nls.localize("stackTrace.format","{0}: {1}",detectSystemErrorMessage(r),stackToString(r.stack)||stackToString(r.stacktrace)):detectSystemErrorMessage(r)}function stackToString(r){return Array.isArray(r)?r.join("\n"):r}function detectSystemErrorMessage(r){return"string"===typeof r.code&&"number"===typeof r.errno&&"string"===typeof r.syscall?nls.localize("nodeExceptionMessage","A system error occurred ({0})",r.message):r.message||nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}export function toErrorMessage(r=null,e=!1){if(!r)return nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(r)){const s=arrays.coalesce(r),o=toErrorMessage(s[0],e);return s.length>1?nls.localize("error.moreErrors","{0} ({1} errors in total)",o,s.length):o}if(types.isString(r))return r;if(r.detail){const s=r.detail;if(s.error)return exceptionToErrorMessage(s.error,e);if(s.exception)return exceptionToErrorMessage(s.exception,e)}return r.stack?exceptionToErrorMessage(r,e):r.message?r.message:nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}