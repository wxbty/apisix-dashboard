import{Emitter}from"../common/event.js";import{Disposable}from"../common/lifecycle.js";class WindowManager{constructor(){this._zoomFactor=1}getZoomFactor(){return this._zoomFactor}}WindowManager.INSTANCE=new WindowManager;class PixelRatioImpl extends Disposable{constructor(){super(),this._onDidChange=this._register(new Emitter),this.onDidChange=this._onDidChange.event,this._value=this._getPixelRatio(),this._removeListener=this._installResolutionListener()}get value(){return this._value}dispose(){this._removeListener(),super.dispose()}_installResolutionListener(){const e=matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`),t=()=>this._updateValue();return e.addEventListener("change",t),()=>{e.removeEventListener("change",t)}}_updateValue(){this._value=this._getPixelRatio(),this._onDidChange.fire(this._value),this._removeListener=this._installResolutionListener()}_getPixelRatio(){const e=document.createElement("canvas").getContext("2d"),t=window.devicePixelRatio||1,i=e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return t/i}}class PixelRatioFacade{constructor(){this._pixelRatioMonitor=null}_getOrCreatePixelRatioMonitor(){return this._pixelRatioMonitor||(this._pixelRatioMonitor=new PixelRatioImpl),this._pixelRatioMonitor}get value(){return this._getOrCreatePixelRatioMonitor().value}get onDidChange(){return this._getOrCreatePixelRatioMonitor().onDidChange}}export const PixelRatio=new PixelRatioFacade;export function getZoomFactor(){return WindowManager.INSTANCE.getZoomFactor()}const userAgent=navigator.userAgent;export const isFirefox=userAgent.indexOf("Firefox")>=0;export const isWebKit=userAgent.indexOf("AppleWebKit")>=0;export const isChrome=userAgent.indexOf("Chrome")>=0;export const isSafari=!isChrome&&userAgent.indexOf("Safari")>=0;export const isWebkitWebView=!isChrome&&!isSafari&&isWebKit;export const isEdgeLegacyWebView=userAgent.indexOf("Edge/")>=0&&userAgent.indexOf("WebView/")>=0;export const isElectron=userAgent.indexOf("Electron/")>=0;export const isAndroid=userAgent.indexOf("Android")>=0;export const isStandalone=window.matchMedia&&window.matchMedia("(display-mode: standalone)").matches;