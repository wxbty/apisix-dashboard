var __decorate=this&&this.__decorate||function(e,t,i,a){var s,n=arguments.length,r=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,i):a;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)r=Reflect.decorate(e,t,i,a);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(r=(n<3?s(r):n>3?s(t,i,r):s(t,i))||r);return n>3&&r&&Object.defineProperty(t,i,r),r};import*as DomUtils from"./dom.js";import*as arrays from"../common/arrays.js";import{memoize}from"../common/decorators.js";import{Disposable}from"../common/lifecycle.js";export var EventType;(function(e){e.Tap="-monaco-gesturetap",e.Change="-monaco-gesturechange",e.Start="-monaco-gesturestart",e.End="-monaco-gesturesend",e.Contextmenu="-monaco-gesturecontextmenu"})(EventType||(EventType={}));export class Gesture extends Disposable{constructor(){super(),this.dispatched=!1,this.activeTouches={},this.handle=null,this.targets=[],this.ignoreTargets=[],this._lastSetTapCountTime=0,this._register(DomUtils.addDisposableListener(document,"touchstart",(e=>this.onTouchStart(e)),{passive:!1})),this._register(DomUtils.addDisposableListener(document,"touchend",(e=>this.onTouchEnd(e)))),this._register(DomUtils.addDisposableListener(document,"touchmove",(e=>this.onTouchMove(e)),{passive:!1}))}static addTarget(e){return Gesture.isTouchDevice()?(Gesture.INSTANCE||(Gesture.INSTANCE=new Gesture),Gesture.INSTANCE.targets.push(e),{dispose:()=>{Gesture.INSTANCE.targets=Gesture.INSTANCE.targets.filter((t=>t!==e))}}):Disposable.None}static ignoreTarget(e){return Gesture.isTouchDevice()?(Gesture.INSTANCE||(Gesture.INSTANCE=new Gesture),Gesture.INSTANCE.ignoreTargets.push(e),{dispose:()=>{Gesture.INSTANCE.ignoreTargets=Gesture.INSTANCE.ignoreTargets.filter((t=>t!==e))}}):Disposable.None}static isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0}dispose(){this.handle&&(this.handle.dispose(),this.handle=null),super.dispose()}onTouchStart(e){let t=Date.now();this.handle&&(this.handle.dispose(),this.handle=null);for(let i=0,a=e.targetTouches.length;i<a;i++){let a=e.targetTouches.item(i);this.activeTouches[a.identifier]={id:a.identifier,initialTarget:a.target,initialTimeStamp:t,initialPageX:a.pageX,initialPageY:a.pageY,rollingTimestamps:[t],rollingPageX:[a.pageX],rollingPageY:[a.pageY]};let s=this.newGestureEvent(EventType.Start,a.target);s.pageX=a.pageX,s.pageY=a.pageY,this.dispatchEvent(s)}this.dispatched&&(e.preventDefault(),e.stopPropagation(),this.dispatched=!1)}onTouchEnd(e){let t=Date.now(),i=Object.keys(this.activeTouches).length;for(let a=0,s=e.changedTouches.length;a<s;a++){let s=e.changedTouches.item(a);if(!this.activeTouches.hasOwnProperty(String(s.identifier))){console.warn("move of an UNKNOWN touch",s);continue}let n=this.activeTouches[s.identifier],r=Date.now()-n.initialTimeStamp;if(r<Gesture.HOLD_DELAY&&Math.abs(n.initialPageX-arrays.tail(n.rollingPageX))<30&&Math.abs(n.initialPageY-arrays.tail(n.rollingPageY))<30){let e=this.newGestureEvent(EventType.Tap,n.initialTarget);e.pageX=arrays.tail(n.rollingPageX),e.pageY=arrays.tail(n.rollingPageY),this.dispatchEvent(e)}else if(r>=Gesture.HOLD_DELAY&&Math.abs(n.initialPageX-arrays.tail(n.rollingPageX))<30&&Math.abs(n.initialPageY-arrays.tail(n.rollingPageY))<30){let e=this.newGestureEvent(EventType.Contextmenu,n.initialTarget);e.pageX=arrays.tail(n.rollingPageX),e.pageY=arrays.tail(n.rollingPageY),this.dispatchEvent(e)}else if(1===i){let e=arrays.tail(n.rollingPageX),i=arrays.tail(n.rollingPageY),a=arrays.tail(n.rollingTimestamps)-n.rollingTimestamps[0],s=e-n.rollingPageX[0],r=i-n.rollingPageY[0];const o=this.targets.filter((e=>n.initialTarget instanceof Node&&e.contains(n.initialTarget)));this.inertia(o,t,Math.abs(s)/a,s>0?1:-1,e,Math.abs(r)/a,r>0?1:-1,i)}this.dispatchEvent(this.newGestureEvent(EventType.End,n.initialTarget)),delete this.activeTouches[s.identifier]}this.dispatched&&(e.preventDefault(),e.stopPropagation(),this.dispatched=!1)}newGestureEvent(e,t){let i=document.createEvent("CustomEvent");return i.initEvent(e,!1,!0),i.initialTarget=t,i.tapCount=0,i}dispatchEvent(e){if(e.type===EventType.Tap){const t=(new Date).getTime();let i=0;i=t-this._lastSetTapCountTime>Gesture.CLEAR_TAP_COUNT_TIME?1:2,this._lastSetTapCountTime=t,e.tapCount=i}else e.type!==EventType.Change&&e.type!==EventType.Contextmenu||(this._lastSetTapCountTime=0);for(let t=0;t<this.ignoreTargets.length;t++)if(e.initialTarget instanceof Node&&this.ignoreTargets[t].contains(e.initialTarget))return;this.targets.forEach((t=>{e.initialTarget instanceof Node&&t.contains(e.initialTarget)&&(t.dispatchEvent(e),this.dispatched=!0)}))}inertia(e,t,i,a,s,n,r,o){this.handle=DomUtils.scheduleAtNextAnimationFrame((()=>{let l=Date.now(),h=l-t,g=0,c=0,p=!0;i+=Gesture.SCROLL_FRICTION*h,n+=Gesture.SCROLL_FRICTION*h,i>0&&(p=!1,g=a*i*h),n>0&&(p=!1,c=r*n*h);let u=this.newGestureEvent(EventType.Change);u.translationX=g,u.translationY=c,e.forEach((e=>e.dispatchEvent(u))),p||this.inertia(e,l,i,a,s+g,n,r,o+c)}))}onTouchMove(e){let t=Date.now();for(let i=0,a=e.changedTouches.length;i<a;i++){let a=e.changedTouches.item(i);if(!this.activeTouches.hasOwnProperty(String(a.identifier))){console.warn("end of an UNKNOWN touch",a);continue}let s=this.activeTouches[a.identifier],n=this.newGestureEvent(EventType.Change,s.initialTarget);n.translationX=a.pageX-arrays.tail(s.rollingPageX),n.translationY=a.pageY-arrays.tail(s.rollingPageY),n.pageX=a.pageX,n.pageY=a.pageY,this.dispatchEvent(n),s.rollingPageX.length>3&&(s.rollingPageX.shift(),s.rollingPageY.shift(),s.rollingTimestamps.shift()),s.rollingPageX.push(a.pageX),s.rollingPageY.push(a.pageY),s.rollingTimestamps.push(t)}this.dispatched&&(e.preventDefault(),e.stopPropagation(),this.dispatched=!1)}}Gesture.SCROLL_FRICTION=-.005,Gesture.HOLD_DELAY=700,Gesture.CLEAR_TAP_COUNT_TIME=400,__decorate([memoize],Gesture,"isTouchDevice",null);