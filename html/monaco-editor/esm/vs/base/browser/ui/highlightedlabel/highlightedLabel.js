import*as dom from"../../dom.js";import{renderLabelWithIcons}from"../iconLabel/iconLabels.js";import*as objects from"../../../common/objects.js";export class HighlightedLabel{constructor(t,s){var e;this.text="",this.title="",this.highlights=[],this.didEverRender=!1,this.supportIcons=null!==(e=null===s||void 0===s?void 0:s.supportIcons)&&void 0!==e&&e,this.domNode=dom.append(t,dom.$("span.monaco-highlighted-label"))}get element(){return this.domNode}set(t,s=[],e="",i){t||(t=""),i&&(t=HighlightedLabel.escapeNewLines(t,s)),this.didEverRender&&this.text===t&&this.title===e&&objects.equals(this.highlights,s)||(this.text=t,this.title=e,this.highlights=s,this.render())}render(){const t=[];let s=0;for(const e of this.highlights){if(e.end===e.start)continue;if(s<e.start){const i=this.text.substring(s,e.start);t.push(dom.$("span",void 0,...this.supportIcons?renderLabelWithIcons(i):[i])),s=e.end}const i=this.text.substring(e.start,e.end),o=dom.$("span.highlight",void 0,...this.supportIcons?renderLabelWithIcons(i):[i]);e.extraClasses&&o.classList.add(...e.extraClasses),t.push(o),s=e.end}if(s<this.text.length){const e=this.text.substring(s);t.push(dom.$("span",void 0,...this.supportIcons?renderLabelWithIcons(e):[e]))}dom.reset(this.domNode,...t),this.title?this.domNode.title=this.title:this.domNode.removeAttribute("title"),this.didEverRender=!0}static escapeNewLines(t,s){let e=0,i=0;return t.replace(/\r\n|\r|\n/g,((t,o)=>{i="\r\n"===t?-1:0,o+=e;for(const e of s)e.end<=o||(e.start>=o&&(e.start+=i),e.end>=o&&(e.end+=i));return e+=i,"\u23ce"}))}}