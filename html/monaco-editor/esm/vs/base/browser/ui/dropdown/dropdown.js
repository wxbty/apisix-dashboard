import{$,addDisposableListener,append,EventHelper,EventType}from"../../dom.js";import{StandardKeyboardEvent}from"../../keyboardEvent.js";import{EventType as GestureEventType,Gesture}from"../../touch.js";import{ActionRunner}from"../../../common/actions.js";import{Emitter}from"../../../common/event.js";import"./dropdown.css";export class BaseDropdown extends ActionRunner{constructor(e,t){super(),this._onDidChangeVisibility=this._register(new Emitter),this.onDidChangeVisibility=this._onDidChangeVisibility.event,this._element=append(e,$(".monaco-dropdown")),this._label=append(this._element,$(".dropdown-label"));let i=t.labelRenderer;i||(i=e=>(e.textContent=t.label||"",null));for(const n of[EventType.CLICK,EventType.MOUSE_DOWN,GestureEventType.Tap])this._register(addDisposableListener(this.element,n,(e=>EventHelper.stop(e,!0))));for(const n of[EventType.MOUSE_DOWN,GestureEventType.Tap])this._register(addDisposableListener(this._label,n,(e=>{e instanceof MouseEvent&&e.detail>1||(this.visible?this.hide():this.show())})));this._register(addDisposableListener(this._label,EventType.KEY_UP,(e=>{const t=new StandardKeyboardEvent(e);(t.equals(3)||t.equals(10))&&(EventHelper.stop(e,!0),this.visible?this.hide():this.show())})));const s=i(this._label);s&&this._register(s),this._register(Gesture.addTarget(this._label))}get element(){return this._element}show(){this.visible||(this.visible=!0,this._onDidChangeVisibility.fire(!0))}hide(){this.visible&&(this.visible=!1,this._onDidChangeVisibility.fire(!1))}dispose(){super.dispose(),this.hide(),this.boxContainer&&(this.boxContainer.remove(),this.boxContainer=void 0),this.contents&&(this.contents.remove(),this.contents=void 0),this._label&&(this._label.remove(),this._label=void 0)}}export class DropdownMenu extends BaseDropdown{constructor(e,t){super(e,t),this._actions=[],this._contextMenuProvider=t.contextMenuProvider,this.actions=t.actions||[],this.actionProvider=t.actionProvider,this.menuClassName=t.menuClassName||"",this.menuAsChild=!!t.menuAsChild}set menuOptions(e){this._menuOptions=e}get menuOptions(){return this._menuOptions}get actions(){return this.actionProvider?this.actionProvider.getActions():this._actions}set actions(e){this._actions=e}show(){super.show(),this.element.classList.add("active"),this._contextMenuProvider.showContextMenu({getAnchor:()=>this.element,getActions:()=>this.actions,getActionsContext:()=>this.menuOptions?this.menuOptions.context:null,getActionViewItem:e=>this.menuOptions&&this.menuOptions.actionViewItemProvider?this.menuOptions.actionViewItemProvider(e):void 0,getKeyBinding:e=>this.menuOptions&&this.menuOptions.getKeyBinding?this.menuOptions.getKeyBinding(e):void 0,getMenuClassName:()=>this.menuClassName,onHide:()=>this.onHide(),actionRunner:this.menuOptions?this.menuOptions.actionRunner:void 0,anchorAlignment:this.menuOptions?this.menuOptions.anchorAlignment:0,domForShadowRoot:this.menuAsChild?this.element:void 0})}hide(){super.hide()}onHide(){this.hide(),this.element.classList.remove("active")}}