import*as dom from"../../dom.js";import{UILabelProvider}from"../../../common/keybindingLabels.js";import{equals}from"../../../common/objects.js";import"./keybindingLabel.css";import{localize}from"../../../../nls.js";const $=dom.$;export class KeybindingLabel{constructor(e,t,o){this.os=t,this.keyElements=new Set,this.options=o||Object.create(null),this.labelBackground=this.options.keybindingLabelBackground,this.labelForeground=this.options.keybindingLabelForeground,this.labelBorder=this.options.keybindingLabelBorder,this.labelBottomBorder=this.options.keybindingLabelBottomBorder,this.labelShadow=this.options.keybindingLabelShadow,this.domNode=dom.append(e,$(".monaco-keybinding")),this.didEverRender=!1,e.appendChild(this.domNode)}get element(){return this.domNode}set(e,t){this.didEverRender&&this.keybinding===e&&KeybindingLabel.areSame(this.matches,t)||(this.keybinding=e,this.matches=t,this.render())}render(){if(this.clear(),this.keybinding){let[e,t]=this.keybinding.getParts();e&&this.renderPart(this.domNode,e,this.matches?this.matches.firstPart:null),t&&(dom.append(this.domNode,$("span.monaco-keybinding-key-chord-separator",void 0," ")),this.renderPart(this.domNode,t,this.matches?this.matches.chordPart:null)),this.domNode.title=this.keybinding.getAriaLabel()||""}else this.options&&this.options.renderUnboundKeybindings&&this.renderUnbound(this.domNode);this.applyStyles(),this.didEverRender=!0}clear(){dom.clearNode(this.domNode),this.keyElements.clear()}renderPart(e,t,o){const i=UILabelProvider.modifierLabels[this.os];t.ctrlKey&&this.renderKey(e,i.ctrlKey,Boolean(null===o||void 0===o?void 0:o.ctrlKey),i.separator),t.shiftKey&&this.renderKey(e,i.shiftKey,Boolean(null===o||void 0===o?void 0:o.shiftKey),i.separator),t.altKey&&this.renderKey(e,i.altKey,Boolean(null===o||void 0===o?void 0:o.altKey),i.separator),t.metaKey&&this.renderKey(e,i.metaKey,Boolean(null===o||void 0===o?void 0:o.metaKey),i.separator);const r=t.keyLabel;r&&this.renderKey(e,r,Boolean(null===o||void 0===o?void 0:o.keyCode),"")}renderKey(e,t,o,i){dom.append(e,this.createKeyElement(t,o?".highlight":"")),i&&dom.append(e,$("span.monaco-keybinding-key-separator",void 0,i))}renderUnbound(e){dom.append(e,this.createKeyElement(localize("unbound","Unbound")))}createKeyElement(e,t=""){const o=$("span.monaco-keybinding-key"+t,void 0,e);return this.keyElements.add(o),o}style(e){this.labelBackground=e.keybindingLabelBackground,this.labelForeground=e.keybindingLabelForeground,this.labelBorder=e.keybindingLabelBorder,this.labelBottomBorder=e.keybindingLabelBottomBorder,this.labelShadow=e.keybindingLabelShadow,this.applyStyles()}applyStyles(){var e;if(this.element){for(const t of this.keyElements)this.labelBackground&&(t.style.backgroundColor=null===(e=this.labelBackground)||void 0===e?void 0:e.toString()),this.labelBorder&&(t.style.borderColor=this.labelBorder.toString()),this.labelBottomBorder&&(t.style.borderBottomColor=this.labelBottomBorder.toString()),this.labelShadow&&(t.style.boxShadow=`inset 0 -1px 0 ${this.labelShadow}`);this.labelForeground&&(this.element.style.color=this.labelForeground.toString())}}static areSame(e,t){return e===t||!e&&!t||!!e&&!!t&&equals(e.firstPart,t.firstPart)&&equals(e.chordPart,t.chordPart)}}