import*as dom from"../../dom.js";import{HighlightedLabel}from"../highlightedlabel/highlightedLabel.js";import{setupCustomHover,setupNativeHover}from"./iconLabelHover.js";import{Disposable}from"../../../common/lifecycle.js";import{equals}from"../../../common/objects.js";import{Range}from"../../../common/range.js";import"./iconlabel.css";class FastLabelNode{constructor(e){this._element=e}get element(){return this._element}set textContent(e){this.disposed||e===this._textContent||(this._textContent=e,this._element.textContent=e)}set className(e){this.disposed||e===this._className||(this._className=e,this._element.className=e)}set empty(e){this.disposed||e===this._empty||(this._empty=e,this._element.style.marginLeft=e?"0":"")}dispose(){this.disposed=!0}}export class IconLabel extends Disposable{constructor(e,t){super(),this.customHovers=new Map,this.domNode=this._register(new FastLabelNode(dom.append(e,dom.$(".monaco-icon-label")))),this.labelContainer=dom.append(this.domNode.element,dom.$(".monaco-icon-label-container"));const i=dom.append(this.labelContainer,dom.$("span.monaco-icon-name-container"));this.descriptionContainer=this._register(new FastLabelNode(dom.append(this.labelContainer,dom.$("span.monaco-icon-description-container")))),(null===t||void 0===t?void 0:t.supportHighlights)||(null===t||void 0===t?void 0:t.supportIcons)?this.nameNode=new LabelWithHighlights(i,!!t.supportIcons):this.nameNode=new Label(i),(null===t||void 0===t?void 0:t.supportDescriptionHighlights)?this.descriptionNodeFactory=()=>new HighlightedLabel(dom.append(this.descriptionContainer.element,dom.$("span.label-description")),{supportIcons:!!t.supportIcons}):this.descriptionNodeFactory=()=>this._register(new FastLabelNode(dom.append(this.descriptionContainer.element,dom.$("span.label-description")))),this.hoverDelegate=null===t||void 0===t?void 0:t.hoverDelegate}get element(){return this.domNode.element}setLabel(e,t,i){const s=["monaco-icon-label"];i&&(i.extraClasses&&s.push(...i.extraClasses),i.italic&&s.push("italic"),i.strikethrough&&s.push("strikethrough")),this.domNode.className=s.join(" "),this.setupHover((null===i||void 0===i?void 0:i.descriptionTitle)?this.labelContainer:this.element,null===i||void 0===i?void 0:i.title),this.nameNode.setLabel(e,i),(t||this.descriptionNode)&&(this.descriptionNode||(this.descriptionNode=this.descriptionNodeFactory()),this.descriptionNode instanceof HighlightedLabel?(this.descriptionNode.set(t||"",i?i.descriptionMatches:void 0),this.setupHover(this.descriptionNode.element,null===i||void 0===i?void 0:i.descriptionTitle)):(this.descriptionNode.textContent=t||"",this.setupHover(this.descriptionNode.element,(null===i||void 0===i?void 0:i.descriptionTitle)||""),this.descriptionNode.empty=!t))}setupHover(e,t){const i=this.customHovers.get(e);if(i&&(i.dispose(),this.customHovers.delete(e)),t)if(this.hoverDelegate){const i=setupCustomHover(this.hoverDelegate,e,t);i&&this.customHovers.set(e,i)}else setupNativeHover(e,t);else e.removeAttribute("title")}dispose(){super.dispose();for(const e of this.customHovers.values())e.dispose();this.customHovers.clear()}}class Label{constructor(e){this.container=e,this.label=void 0,this.singleLabel=void 0}setLabel(e,t){if(this.label!==e||!equals(this.options,t))if(this.label=e,this.options=t,"string"===typeof e)this.singleLabel||(this.container.innerText="",this.container.classList.remove("multiple"),this.singleLabel=dom.append(this.container,dom.$("a.label-name",{id:null===t||void 0===t?void 0:t.domId}))),this.singleLabel.textContent=e;else{this.container.innerText="",this.container.classList.add("multiple"),this.singleLabel=void 0;for(let i=0;i<e.length;i++){const s=e[i],o=(null===t||void 0===t?void 0:t.domId)&&`${null===t||void 0===t?void 0:t.domId}_${i}`;dom.append(this.container,dom.$("a.label-name",{id:o,"data-icon-label-count":e.length,"data-icon-label-index":i,role:"treeitem"},s)),i<e.length-1&&dom.append(this.container,dom.$("span.label-separator",void 0,(null===t||void 0===t?void 0:t.separator)||"/"))}}}}function splitMatches(e,t,i){if(!i)return;let s=0;return e.map((e=>{const o={start:s,end:s+e.length},n=i.map((e=>Range.intersect(o,e))).filter((e=>!Range.isEmpty(e))).map((({start:e,end:t})=>({start:e-s,end:t-s})));return s=o.end+t.length,n}))}class LabelWithHighlights{constructor(e,t){this.container=e,this.supportIcons=t,this.label=void 0,this.singleLabel=void 0}setLabel(e,t){if(this.label!==e||!equals(this.options,t))if(this.label=e,this.options=t,"string"===typeof e)this.singleLabel||(this.container.innerText="",this.container.classList.remove("multiple"),this.singleLabel=new HighlightedLabel(dom.append(this.container,dom.$("a.label-name",{id:null===t||void 0===t?void 0:t.domId})),{supportIcons:this.supportIcons})),this.singleLabel.set(e,null===t||void 0===t?void 0:t.matches,void 0,null===t||void 0===t?void 0:t.labelEscapeNewLines);else{this.container.innerText="",this.container.classList.add("multiple"),this.singleLabel=void 0;const i=(null===t||void 0===t?void 0:t.separator)||"/",s=splitMatches(e,i,null===t||void 0===t?void 0:t.matches);for(let o=0;o<e.length;o++){const n=e[o],l=s?s[o]:void 0,a=(null===t||void 0===t?void 0:t.domId)&&`${null===t||void 0===t?void 0:t.domId}_${o}`,d=dom.$("a.label-name",{id:a,"data-icon-label-count":e.length,"data-icon-label-index":o,role:"treeitem"}),r=new HighlightedLabel(dom.append(this.container,d),{supportIcons:this.supportIcons});r.set(n,l,void 0,null===t||void 0===t?void 0:t.labelEscapeNewLines),o<e.length-1&&dom.append(d,dom.$("span.label-separator",void 0,i))}}}}