let hasDifferentOriginAncestorFlag=!1,sameOriginWindowChainCache=null;function getParentWindowIfSameOrigin(i){if(!i.parent||i.parent===i)return null;try{let n=i.location,e=i.parent.location;if("null"!==n.origin&&"null"!==e.origin&&n.origin!==e.origin)return hasDifferentOriginAncestorFlag=!0,null}catch(n){return hasDifferentOriginAncestorFlag=!0,null}return i.parent}export class IframeUtils{static getSameOriginWindowChain(){if(!sameOriginWindowChainCache){sameOriginWindowChainCache=[];let i,n=window;do{i=getParentWindowIfSameOrigin(n),i?sameOriginWindowChainCache.push({window:n,iframeElement:n.frameElement||null}):sameOriginWindowChainCache.push({window:n,iframeElement:null}),n=i}while(n)}return sameOriginWindowChainCache.slice(0)}static hasDifferentOriginAncestor(){return sameOriginWindowChainCache||this.getSameOriginWindowChain(),hasDifferentOriginAncestorFlag}static getPositionOfChildWindowRelativeToAncestorWindow(i,n){if(!n||i===n)return{top:0,left:0};let e=0,t=0,r=this.getSameOriginWindowChain();for(const a of r){if(e+=a.window.scrollY,t+=a.window.scrollX,a.window===n)break;if(!a.iframeElement)break;let i=a.iframeElement.getBoundingClientRect();e+=i.top,t+=i.left}return{top:e,left:t}}}