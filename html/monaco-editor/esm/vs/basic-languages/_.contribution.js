var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__reExport=(e,a,o,r)=>{if(a&&"object"===typeof a||"function"===typeof a)for(let t of __getOwnPropNames(a))__hasOwnProp.call(e,t)||!o&&"default"===t||__defProp(e,t,{get:()=>a[t],enumerable:!(r=__getOwnPropDesc(a,t))||r.enumerable});return e},monaco_editor_core_exports={};__reExport(monaco_editor_core_exports,monaco_editor_core_star);import*as monaco_editor_core_star from"../editor/editor.api.js";var languageDefinitions={},lazyLanguageLoaders={},LazyLanguageLoader=class{static getOrCreate(e){return lazyLanguageLoaders[e]||(lazyLanguageLoaders[e]=new LazyLanguageLoader(e)),lazyLanguageLoaders[e]}_languageId;_loadingTriggered;_lazyLoadPromise;_lazyLoadPromiseResolve;_lazyLoadPromiseReject;constructor(e){this._languageId=e,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise(((e,a)=>{this._lazyLoadPromiseResolve=e,this._lazyLoadPromiseReject=a}))}load(){return this._loadingTriggered||(this._loadingTriggered=!0,languageDefinitions[this._languageId].loader().then((e=>this._lazyLoadPromiseResolve(e)),(e=>this._lazyLoadPromiseReject(e)))),this._lazyLoadPromise}};async function loadLanguage(e){await LazyLanguageLoader.getOrCreate(e).load();const a=monaco_editor_core_exports.editor.createModel("",e);a.dispose()}function registerLanguage(e){const a=e.id;languageDefinitions[a]=e,monaco_editor_core_exports.languages.register(e);const o=LazyLanguageLoader.getOrCreate(a);monaco_editor_core_exports.languages.registerTokensProviderFactory(a,{create:async()=>{const e=await o.load();return e.language}}),monaco_editor_core_exports.languages.onLanguage(a,(async()=>{const e=await o.load();monaco_editor_core_exports.languages.setLanguageConfiguration(a,e.conf)}))}export{loadLanguage,registerLanguage};