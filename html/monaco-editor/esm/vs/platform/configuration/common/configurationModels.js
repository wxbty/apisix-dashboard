import*as arrays from"../../../base/common/arrays.js";import{ResourceMap}from"../../../base/common/map.js";import*as objects from"../../../base/common/objects.js";import*as types from"../../../base/common/types.js";import{URI}from"../../../base/common/uri.js";import{addToValueTree,getConfigurationValue,removeFromValueTree,toValuesTree}from"./configuration.js";import{Extensions,overrideIdentifiersFromKey,OVERRIDE_PROPERTY_REGEX}from"./configurationRegistry.js";import{Registry}from"../../registry/common/platform.js";export class ConfigurationModel{constructor(e={},r=[],o=[]){this._contents=e,this._keys=r,this._overrides=o,this.isFrozen=!1,this.overrideConfigurations=new Map}get contents(){return this.checkAndFreeze(this._contents)}get overrides(){return this.checkAndFreeze(this._overrides)}get keys(){return this.checkAndFreeze(this._keys)}isEmpty(){return 0===this._keys.length&&0===Object.keys(this._contents).length&&0===this._overrides.length}getValue(e){return e?getConfigurationValue(this.contents,e):this.contents}getOverrideValue(e,r){const o=this.getContentsForOverrideIdentifer(r);return o?e?getConfigurationValue(o,e):o:void 0}override(e){let r=this.overrideConfigurations.get(e);return r||(r=this.createOverrideConfigurationModel(e),this.overrideConfigurations.set(e,r)),r}merge(...e){const r=objects.deepClone(this.contents),o=objects.deepClone(this.overrides),t=[...this.keys];for(const i of e){this.mergeContents(r,i.contents);for(const e of i.overrides){const[r]=o.filter((r=>arrays.equals(r.identifiers,e.identifiers)));r?(this.mergeContents(r.contents,e.contents),r.keys.push(...e.keys),r.keys=arrays.distinct(r.keys)):o.push(objects.deepClone(e))}for(const e of i.keys)-1===t.indexOf(e)&&t.push(e)}return new ConfigurationModel(r,t,o)}freeze(){return this.isFrozen=!0,this}createOverrideConfigurationModel(e){const r=this.getContentsForOverrideIdentifer(e);if(!r||"object"!==typeof r||!Object.keys(r).length)return this;let o={};for(const t of arrays.distinct([...Object.keys(this.contents),...Object.keys(r)])){let e=this.contents[t],i=r[t];i&&("object"===typeof e&&"object"===typeof i?(e=objects.deepClone(e),this.mergeContents(e,i)):e=i),o[t]=e}return new ConfigurationModel(o,this.keys,this.overrides)}mergeContents(e,r){for(const o of Object.keys(r))o in e&&types.isObject(e[o])&&types.isObject(r[o])?this.mergeContents(e[o],r[o]):e[o]=objects.deepClone(r[o])}checkAndFreeze(e){return this.isFrozen&&!Object.isFrozen(e)?objects.deepFreeze(e):e}getContentsForOverrideIdentifer(e){let r=null,o=null;const t=e=>{e&&(o?this.mergeContents(o,e):o=objects.deepClone(e))};for(const i of this.overrides)arrays.equals(i.identifiers,[e])?r=i.contents:i.identifiers.includes(e)&&t(i.contents);return t(r),o}toJSON(){return{contents:this.contents,overrides:this.overrides,keys:this.keys}}setValue(e,r){this.addKey(e),addToValueTree(this.contents,e,r,(e=>{throw new Error(e)}))}removeValue(e){this.removeKey(e)&&removeFromValueTree(this.contents,e)}addKey(e){let r=this.keys.length;for(let o=0;o<r;o++)0===e.indexOf(this.keys[o])&&(r=o);this.keys.splice(r,1,e)}removeKey(e){let r=this.keys.indexOf(e);return-1!==r&&(this.keys.splice(r,1),!0)}}export class DefaultConfigurationModel extends ConfigurationModel{constructor(e={}){const r=Registry.as(Extensions.Configuration).getConfigurationProperties(),o=Object.keys(r),t=Object.create(null),i=[];for(const n in r){const o=e[n],i=void 0!==o?o:r[n].default;addToValueTree(t,n,i,(e=>console.error(`Conflict in default settings: ${e}`)))}for(const n of Object.keys(t))OVERRIDE_PROPERTY_REGEX.test(n)&&i.push({identifiers:overrideIdentifiersFromKey(n),keys:Object.keys(t[n]),contents:toValuesTree(t[n],(e=>console.error(`Conflict in default settings file: ${e}`)))});super(t,o,i)}}export class Configuration{constructor(e,r,o=new ConfigurationModel,t=new ConfigurationModel,i=new ResourceMap,n=new ConfigurationModel,s=new ResourceMap,a=!0){this._defaultConfiguration=e,this._localUserConfiguration=r,this._remoteUserConfiguration=o,this._workspaceConfiguration=t,this._folderConfigurations=i,this._memoryConfiguration=n,this._memoryConfigurationByResource=s,this._freeze=a,this._workspaceConsolidatedConfiguration=null,this._foldersConsolidatedConfigurations=new ResourceMap,this._userConfiguration=null}getValue(e,r,o){const t=this.getConsolidateConfigurationModel(r,o);return t.getValue(e)}updateValue(e,r,o={}){let t;o.resource?(t=this._memoryConfigurationByResource.get(o.resource),t||(t=new ConfigurationModel,this._memoryConfigurationByResource.set(o.resource,t))):t=this._memoryConfiguration,void 0===r?t.removeValue(e):t.setValue(e,r),o.resource||(this._workspaceConsolidatedConfiguration=null)}inspect(e,r,o){const t=this.getConsolidateConfigurationModel(r,o),i=this.getFolderConfigurationModelForResource(r.resource,o),n=r.resource&&this._memoryConfigurationByResource.get(r.resource)||this._memoryConfiguration,s=r.overrideIdentifier?this._defaultConfiguration.freeze().override(r.overrideIdentifier).getValue(e):this._defaultConfiguration.freeze().getValue(e),a=r.overrideIdentifier?this.userConfiguration.freeze().override(r.overrideIdentifier).getValue(e):this.userConfiguration.freeze().getValue(e),u=r.overrideIdentifier?this.localUserConfiguration.freeze().override(r.overrideIdentifier).getValue(e):this.localUserConfiguration.freeze().getValue(e),d=r.overrideIdentifier?this.remoteUserConfiguration.freeze().override(r.overrideIdentifier).getValue(e):this.remoteUserConfiguration.freeze().getValue(e),f=o?r.overrideIdentifier?this._workspaceConfiguration.freeze().override(r.overrideIdentifier).getValue(e):this._workspaceConfiguration.freeze().getValue(e):void 0,l=i?r.overrideIdentifier?i.freeze().override(r.overrideIdentifier).getValue(e):i.freeze().getValue(e):void 0,g=r.overrideIdentifier?n.override(r.overrideIdentifier).getValue(e):n.getValue(e),c=t.getValue(e),h=arrays.distinct(arrays.flatten(t.overrides.map((e=>e.identifiers)))).filter((r=>void 0!==t.getOverrideValue(e,r)));return{defaultValue:s,userValue:a,userLocalValue:u,userRemoteValue:d,workspaceValue:f,workspaceFolderValue:l,memoryValue:g,value:c,default:void 0!==s?{value:this._defaultConfiguration.freeze().getValue(e),override:r.overrideIdentifier?this._defaultConfiguration.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,user:void 0!==a?{value:this.userConfiguration.freeze().getValue(e),override:r.overrideIdentifier?this.userConfiguration.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,userLocal:void 0!==u?{value:this.localUserConfiguration.freeze().getValue(e),override:r.overrideIdentifier?this.localUserConfiguration.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,userRemote:void 0!==d?{value:this.remoteUserConfiguration.freeze().getValue(e),override:r.overrideIdentifier?this.remoteUserConfiguration.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,workspace:void 0!==f?{value:this._workspaceConfiguration.freeze().getValue(e),override:r.overrideIdentifier?this._workspaceConfiguration.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,workspaceFolder:void 0!==l?{value:null===i||void 0===i?void 0:i.freeze().getValue(e),override:r.overrideIdentifier?null===i||void 0===i?void 0:i.freeze().getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,memory:void 0!==g?{value:n.getValue(e),override:r.overrideIdentifier?n.getOverrideValue(e,r.overrideIdentifier):void 0}:void 0,overrideIdentifiers:h.length?h:void 0}}get userConfiguration(){return this._userConfiguration||(this._userConfiguration=this._remoteUserConfiguration.isEmpty()?this._localUserConfiguration:this._localUserConfiguration.merge(this._remoteUserConfiguration),this._freeze&&this._userConfiguration.freeze()),this._userConfiguration}get localUserConfiguration(){return this._localUserConfiguration}get remoteUserConfiguration(){return this._remoteUserConfiguration}getConsolidateConfigurationModel(e,r){let o=this.getConsolidatedConfigurationModelForResource(e,r);return e.overrideIdentifier?o.override(e.overrideIdentifier):o}getConsolidatedConfigurationModelForResource({resource:e},r){let o=this.getWorkspaceConsolidatedConfiguration();if(r&&e){const t=r.getFolder(e);t&&(o=this.getFolderConsolidatedConfiguration(t.uri)||o);const i=this._memoryConfigurationByResource.get(e);i&&(o=o.merge(i))}return o}getWorkspaceConsolidatedConfiguration(){return this._workspaceConsolidatedConfiguration||(this._workspaceConsolidatedConfiguration=this._defaultConfiguration.merge(this.userConfiguration,this._workspaceConfiguration,this._memoryConfiguration),this._freeze&&(this._workspaceConfiguration=this._workspaceConfiguration.freeze())),this._workspaceConsolidatedConfiguration}getFolderConsolidatedConfiguration(e){let r=this._foldersConsolidatedConfigurations.get(e);if(!r){const o=this.getWorkspaceConsolidatedConfiguration(),t=this._folderConfigurations.get(e);t?(r=o.merge(t),this._freeze&&(r=r.freeze()),this._foldersConsolidatedConfigurations.set(e,r)):r=o}return r}getFolderConfigurationModelForResource(e,r){if(r&&e){const o=r.getFolder(e);if(o)return this._folderConfigurations.get(o.uri)}}toData(){return{defaults:{contents:this._defaultConfiguration.contents,overrides:this._defaultConfiguration.overrides,keys:this._defaultConfiguration.keys},user:{contents:this.userConfiguration.contents,overrides:this.userConfiguration.overrides,keys:this.userConfiguration.keys},workspace:{contents:this._workspaceConfiguration.contents,overrides:this._workspaceConfiguration.overrides,keys:this._workspaceConfiguration.keys},folders:[...this._folderConfigurations.keys()].reduce(((e,r)=>{const{contents:o,overrides:t,keys:i}=this._folderConfigurations.get(r);return e.push([r,{contents:o,overrides:t,keys:i}]),e}),[])}}static parse(e){const r=this.parseConfigurationModel(e.defaults),o=this.parseConfigurationModel(e.user),t=this.parseConfigurationModel(e.workspace),i=e.folders.reduce(((e,r)=>(e.set(URI.revive(r[0]),this.parseConfigurationModel(r[1])),e)),new ResourceMap);return new Configuration(r,o,new ConfigurationModel,t,i,new ConfigurationModel,new ResourceMap,!1)}static parseConfigurationModel(e){return new ConfigurationModel(e.contents,e.keys,e.overrides).freeze()}}export class ConfigurationChangeEvent{constructor(e,r,o,t){this.change=e,this.previous=r,this.currentConfiguraiton=o,this.currentWorkspace=t,this._previousConfiguration=void 0;const i=new Set;e.keys.forEach((e=>i.add(e))),e.overrides.forEach((([,e])=>e.forEach((e=>i.add(e))))),this.affectedKeys=[...i.values()];const n=new ConfigurationModel;this.affectedKeys.forEach((e=>n.setValue(e,{}))),this.affectedKeysTree=n.contents}get previousConfiguration(){return!this._previousConfiguration&&this.previous&&(this._previousConfiguration=Configuration.parse(this.previous.data)),this._previousConfiguration}affectsConfiguration(e,r){var o;if(this.doesAffectedKeysTreeContains(this.affectedKeysTree,e)){if(r){const t=this.previousConfiguration?this.previousConfiguration.getValue(e,r,null===(o=this.previous)||void 0===o?void 0:o.workspace):void 0,i=this.currentConfiguraiton.getValue(e,r,this.currentWorkspace);return!objects.equals(t,i)}return!0}return!1}doesAffectedKeysTreeContains(e,r){let o,t=toValuesTree({[r]:!0},(()=>{}));while("object"===typeof t&&(o=Object.keys(t)[0])){if(e=e[o],!e)return!1;t=t[o]}return!0}}