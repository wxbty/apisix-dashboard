import{KeyCodeUtils,IMMUTABLE_CODE_TO_KEY_CODE}from"../../../base/common/keyCodes.js";import{ChordKeybinding,SimpleKeybinding}from"../../../base/common/keybindings.js";import{BaseResolvedKeybinding}from"./baseResolvedKeybinding.js";import{removeElementsAfterNulls}from"./resolvedKeybindingItem.js";export class USLayoutResolvedKeybinding extends BaseResolvedKeybinding{constructor(e,r){super(r,e.parts)}_keyCodeToUILabel(e){if(2===this._os)switch(e){case 15:return"\u2190";case 16:return"\u2191";case 17:return"\u2192";case 18:return"\u2193"}return KeyCodeUtils.toString(e)}_getLabel(e){return e.isDuplicateModifierCase()?"":this._keyCodeToUILabel(e.keyCode)}_getAriaLabel(e){return e.isDuplicateModifierCase()?"":KeyCodeUtils.toString(e.keyCode)}_getElectronAccelerator(e){return KeyCodeUtils.toElectronAccelerator(e.keyCode)}_getDispatchPart(e){return USLayoutResolvedKeybinding.getDispatchStr(e)}static getDispatchStr(e){if(e.isModifierKey())return null;let r="";return e.ctrlKey&&(r+="ctrl+"),e.shiftKey&&(r+="shift+"),e.altKey&&(r+="alt+"),e.metaKey&&(r+="meta+"),r+=KeyCodeUtils.toString(e.keyCode),r}_getSingleModifierDispatchPart(e){return 5!==e.keyCode||e.shiftKey||e.altKey||e.metaKey?4!==e.keyCode||e.ctrlKey||e.altKey||e.metaKey?6!==e.keyCode||e.ctrlKey||e.shiftKey||e.metaKey?57!==e.keyCode||e.ctrlKey||e.shiftKey||e.altKey?null:"meta":"alt":"shift":"ctrl"}static _scanCodeToKeyCode(e){const r=IMMUTABLE_CODE_TO_KEY_CODE[e];if(-1!==r)return r;switch(e){case 10:return 31;case 11:return 32;case 12:return 33;case 13:return 34;case 14:return 35;case 15:return 36;case 16:return 37;case 17:return 38;case 18:return 39;case 19:return 40;case 20:return 41;case 21:return 42;case 22:return 43;case 23:return 44;case 24:return 45;case 25:return 46;case 26:return 47;case 27:return 48;case 28:return 49;case 29:return 50;case 30:return 51;case 31:return 52;case 32:return 53;case 33:return 54;case 34:return 55;case 35:return 56;case 36:return 22;case 37:return 23;case 38:return 24;case 39:return 25;case 40:return 26;case 41:return 27;case 42:return 28;case 43:return 29;case 44:return 30;case 45:return 21;case 51:return 83;case 52:return 81;case 53:return 87;case 54:return 89;case 55:return 88;case 56:return 0;case 57:return 80;case 58:return 90;case 59:return 86;case 60:return 82;case 61:return 84;case 62:return 85;case 106:return 92}return 0}static _resolveSimpleUserBinding(e){if(!e)return null;if(e instanceof SimpleKeybinding)return e;const r=this._scanCodeToKeyCode(e.scanCode);return 0===r?null:new SimpleKeybinding(e.ctrlKey,e.shiftKey,e.altKey,e.metaKey,r)}static resolveUserBinding(e,r){const t=removeElementsAfterNulls(e.map((e=>this._resolveSimpleUserBinding(e))));return t.length>0?[new USLayoutResolvedKeybinding(new ChordKeybinding(t),r)]:[]}}