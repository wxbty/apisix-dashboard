import{CSSIcon}from"../../../base/common/codicons.js";import{Emitter}from"../../../base/common/event.js";import{Disposable,toDisposable}from"../../../base/common/lifecycle.js";import{createDecorator}from"../../instantiation/common/instantiation.js";import*as platform from"../../registry/common/platform.js";import{ColorScheme}from"./theme.js";export const IThemeService=createDecorator("themeService");export var ThemeColor;(function(e){function t(e){return e&&"object"===typeof e&&"string"===typeof e.id}e.isThemeColor=t})(ThemeColor||(ThemeColor={}));export function themeColorFromId(e){return{id:e}}export var ThemeIcon;(function(e){function t(e){return e&&"object"===typeof e&&"string"===typeof e.id&&("undefined"===typeof e.color||ThemeColor.isThemeColor(e.color))}e.isThemeIcon=t;const o=new RegExp(`^\\$\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\)$`);function i(e){const t=o.exec(e);if(!t)return;let[,i]=t;return{id:i}}function n(e){return{id:e}}function r(e,t){let o=e.id;const i=o.lastIndexOf("~");return-1!==i&&(o=o.substring(0,i)),t&&(o=`${o}~${t}`),{id:o}}function s(e){const t=e.id.lastIndexOf("~");if(-1!==t)return e.id.substring(t+1)}function m(e,t){var o,i;return e.id===t.id&&(null===(o=e.color)||void 0===o?void 0:o.id)===(null===(i=t.color)||void 0===i?void 0:i.id)}function c(e,t){return{id:e.id,color:t?themeColorFromId(t):void 0}}e.fromString=i,e.fromId=n,e.modify=r,e.getModifier=s,e.isEqual=m,e.asThemeIcon=c,e.asClassNameArray=CSSIcon.asClassNameArray,e.asClassName=CSSIcon.asClassName,e.asCSSSelector=CSSIcon.asCSSSelector})(ThemeIcon||(ThemeIcon={}));export function getThemeTypeSelector(e){switch(e){case ColorScheme.DARK:return"vs-dark";case ColorScheme.HIGH_CONTRAST:return"hc-black";default:return"vs"}}export const Extensions={ThemingContribution:"base.contributions.theming"};class ThemingRegistry{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new Emitter}onColorThemeChange(e){return this.themingParticipants.push(e),this.onThemingParticipantAddedEmitter.fire(e),toDisposable((()=>{const t=this.themingParticipants.indexOf(e);this.themingParticipants.splice(t,1)}))}getThemingParticipants(){return this.themingParticipants}}let themingRegistry=new ThemingRegistry;platform.Registry.add(Extensions.ThemingContribution,themingRegistry);export function registerThemingParticipant(e){return themingRegistry.onColorThemeChange(e)}export class Themable extends Disposable{constructor(e){super(),this.themeService=e,this.theme=e.getColorTheme(),this._register(this.themeService.onDidColorThemeChange((e=>this.onThemeChange(e))))}onThemeChange(e){this.theme=e,this.updateStyles()}updateStyles(){}}