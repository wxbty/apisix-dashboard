import{Codicon}from"../../../base/common/codicons.js";import Severity from"../../../base/common/severity.js";import{problemsErrorIconForeground,problemsInfoIconForeground,problemsWarningIconForeground}from"../../theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../theme/common/themeService.js";export var SeverityIcon;(function(e){function t(e){switch(e){case Severity.Ignore:return"severity-ignore "+Codicon.info.classNames;case Severity.Info:return Codicon.info.classNames;case Severity.Warning:return Codicon.warning.classNames;case Severity.Error:return Codicon.error.classNames;default:return""}}e.className=t})(SeverityIcon||(SeverityIcon={})),registerThemingParticipant(((e,t)=>{const o=e.getColor(problemsErrorIconForeground);if(o){const e=Codicon.error.cssSelector;t.addRule(`\n\t\t\t.monaco-editor .zone-widget ${e},\n\t\t\t.markers-panel .marker-icon${e},\n\t\t\t.text-search-provider-messages .providerMessage ${e},\n\t\t\t.extensions-viewlet > .extensions ${e} {\n\t\t\t\tcolor: ${o};\n\t\t\t}\n\t\t`)}const r=e.getColor(problemsWarningIconForeground);if(r){const e=Codicon.warning.cssSelector;t.addRule(`\n\t\t\t.monaco-editor .zone-widget ${e},\n\t\t\t.markers-panel .marker-icon${e},\n\t\t\t.extensions-viewlet > .extensions ${e},\n\t\t\t.extension-editor ${e},\n\t\t\t.text-search-provider-messages .providerMessage ${e},\n\t\t\t.preferences-editor ${e} {\n\t\t\t\tcolor: ${r};\n\t\t\t}\n\t\t`)}const n=e.getColor(problemsInfoIconForeground);if(n){const e=Codicon.info.cssSelector;t.addRule(`\n\t\t\t.monaco-editor .zone-widget ${e},\n\t\t\t.markers-panel .marker-icon${e},\n\t\t\t.extensions-viewlet > .extensions ${e},\n\t\t\t.text-search-provider-messages .providerMessage ${e},\n\t\t\t.extension-editor ${e} {\n\t\t\t\tcolor: ${n};\n\t\t\t}\n\t\t`)}}));