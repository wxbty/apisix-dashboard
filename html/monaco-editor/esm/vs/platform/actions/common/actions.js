var __decorate=this&&this.__decorate||function(e,n,t,o){var u,i=arguments.length,d=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)d=Reflect.decorate(e,n,t,o);else for(var M=e.length-1;M>=0;M--)(u=e[M])&&(d=(i<3?u(d):i>3?u(n,t,d):u(n,t))||d);return i>3&&d&&Object.defineProperty(n,t,d),d},__param=this&&this.__param||function(e,n){return function(t,o){n(t,o,e)}};import{Separator,SubmenuAction}from"../../../base/common/actions.js";import{CSSIcon}from"../../../base/common/codicons.js";import{Emitter}from"../../../base/common/event.js";import{Iterable}from"../../../base/common/iterator.js";import{toDisposable}from"../../../base/common/lifecycle.js";import{LinkedList}from"../../../base/common/linkedList.js";import{ICommandService}from"../../commands/common/commands.js";import{IContextKeyService}from"../../contextkey/common/contextkey.js";import{createDecorator}from"../../instantiation/common/instantiation.js";import{ThemeIcon}from"../../theme/common/themeService.js";export function isIMenuItem(e){return void 0!==e.command}export class MenuId{constructor(e){this.id=MenuId._idPool++,this._debugName=e}}MenuId._idPool=0,MenuId.CommandPalette=new MenuId("CommandPalette"),MenuId.DebugBreakpointsContext=new MenuId("DebugBreakpointsContext"),MenuId.DebugCallStackContext=new MenuId("DebugCallStackContext"),MenuId.DebugConsoleContext=new MenuId("DebugConsoleContext"),MenuId.DebugVariablesContext=new MenuId("DebugVariablesContext"),MenuId.DebugWatchContext=new MenuId("DebugWatchContext"),MenuId.DebugToolBar=new MenuId("DebugToolBar"),MenuId.EditorContext=new MenuId("EditorContext"),MenuId.SimpleEditorContext=new MenuId("SimpleEditorContext"),MenuId.EditorContextCopy=new MenuId("EditorContextCopy"),MenuId.EditorContextPeek=new MenuId("EditorContextPeek"),MenuId.EditorTitle=new MenuId("EditorTitle"),MenuId.EditorTitleRun=new MenuId("EditorTitleRun"),MenuId.EditorTitleContext=new MenuId("EditorTitleContext"),MenuId.EmptyEditorGroup=new MenuId("EmptyEditorGroup"),MenuId.EmptyEditorGroupContext=new MenuId("EmptyEditorGroupContext"),MenuId.ExplorerContext=new MenuId("ExplorerContext"),MenuId.ExtensionContext=new MenuId("ExtensionContext"),MenuId.GlobalActivity=new MenuId("GlobalActivity"),MenuId.LayoutControlMenu=new MenuId("LayoutControlMenu"),MenuId.MenubarMainMenu=new MenuId("MenubarMainMenu"),MenuId.MenubarAppearanceMenu=new MenuId("MenubarAppearanceMenu"),MenuId.MenubarDebugMenu=new MenuId("MenubarDebugMenu"),MenuId.MenubarEditMenu=new MenuId("MenubarEditMenu"),MenuId.MenubarCopy=new MenuId("MenubarCopy"),MenuId.MenubarFileMenu=new MenuId("MenubarFileMenu"),MenuId.MenubarGoMenu=new MenuId("MenubarGoMenu"),MenuId.MenubarHelpMenu=new MenuId("MenubarHelpMenu"),MenuId.MenubarLayoutMenu=new MenuId("MenubarLayoutMenu"),MenuId.MenubarNewBreakpointMenu=new MenuId("MenubarNewBreakpointMenu"),MenuId.MenubarPanelAlignmentMenu=new MenuId("MenubarPanelAlignmentMenu"),MenuId.MenubarPreferencesMenu=new MenuId("MenubarPreferencesMenu"),MenuId.MenubarRecentMenu=new MenuId("MenubarRecentMenu"),MenuId.MenubarSelectionMenu=new MenuId("MenubarSelectionMenu"),MenuId.MenubarSwitchEditorMenu=new MenuId("MenubarSwitchEditorMenu"),MenuId.MenubarSwitchGroupMenu=new MenuId("MenubarSwitchGroupMenu"),MenuId.MenubarTerminalMenu=new MenuId("MenubarTerminalMenu"),MenuId.MenubarViewMenu=new MenuId("MenubarViewMenu"),MenuId.MenubarHomeMenu=new MenuId("MenubarHomeMenu"),MenuId.OpenEditorsContext=new MenuId("OpenEditorsContext"),MenuId.ProblemsPanelContext=new MenuId("ProblemsPanelContext"),MenuId.SCMChangeContext=new MenuId("SCMChangeContext"),MenuId.SCMResourceContext=new MenuId("SCMResourceContext"),MenuId.SCMResourceFolderContext=new MenuId("SCMResourceFolderContext"),MenuId.SCMResourceGroupContext=new MenuId("SCMResourceGroupContext"),MenuId.SCMSourceControl=new MenuId("SCMSourceControl"),MenuId.SCMTitle=new MenuId("SCMTitle"),MenuId.SearchContext=new MenuId("SearchContext"),MenuId.StatusBarWindowIndicatorMenu=new MenuId("StatusBarWindowIndicatorMenu"),MenuId.StatusBarRemoteIndicatorMenu=new MenuId("StatusBarRemoteIndicatorMenu"),MenuId.TestItem=new MenuId("TestItem"),MenuId.TestItemGutter=new MenuId("TestItemGutter"),MenuId.TestPeekElement=new MenuId("TestPeekElement"),MenuId.TestPeekTitle=new MenuId("TestPeekTitle"),MenuId.TouchBarContext=new MenuId("TouchBarContext"),MenuId.TitleBarContext=new MenuId("TitleBarContext"),MenuId.TunnelContext=new MenuId("TunnelContext"),MenuId.TunnelPrivacy=new MenuId("TunnelPrivacy"),MenuId.TunnelProtocol=new MenuId("TunnelProtocol"),MenuId.TunnelPortInline=new MenuId("TunnelInline"),MenuId.TunnelTitle=new MenuId("TunnelTitle"),MenuId.TunnelLocalAddressInline=new MenuId("TunnelLocalAddressInline"),MenuId.TunnelOriginInline=new MenuId("TunnelOriginInline"),MenuId.ViewItemContext=new MenuId("ViewItemContext"),MenuId.ViewContainerTitle=new MenuId("ViewContainerTitle"),MenuId.ViewContainerTitleContext=new MenuId("ViewContainerTitleContext"),MenuId.ViewTitle=new MenuId("ViewTitle"),MenuId.ViewTitleContext=new MenuId("ViewTitleContext"),MenuId.CommentThreadTitle=new MenuId("CommentThreadTitle"),MenuId.CommentThreadActions=new MenuId("CommentThreadActions"),MenuId.CommentTitle=new MenuId("CommentTitle"),MenuId.CommentActions=new MenuId("CommentActions"),MenuId.InteractiveToolbar=new MenuId("InteractiveToolbar"),MenuId.InteractiveCellTitle=new MenuId("InteractiveCellTitle"),MenuId.InteractiveCellExecute=new MenuId("InteractiveCellExecute"),MenuId.InteractiveInputExecute=new MenuId("InteractiveInputExecute"),MenuId.NotebookToolbar=new MenuId("NotebookToolbar"),MenuId.NotebookCellTitle=new MenuId("NotebookCellTitle"),MenuId.NotebookCellInsert=new MenuId("NotebookCellInsert"),MenuId.NotebookCellBetween=new MenuId("NotebookCellBetween"),MenuId.NotebookCellListTop=new MenuId("NotebookCellTop"),MenuId.NotebookCellExecute=new MenuId("NotebookCellExecute"),MenuId.NotebookCellExecutePrimary=new MenuId("NotebookCellExecutePrimary"),MenuId.NotebookDiffCellInputTitle=new MenuId("NotebookDiffCellInputTitle"),MenuId.NotebookDiffCellMetadataTitle=new MenuId("NotebookDiffCellMetadataTitle"),MenuId.NotebookDiffCellOutputsTitle=new MenuId("NotebookDiffCellOutputsTitle"),MenuId.NotebookOutputToolbar=new MenuId("NotebookOutputToolbar"),MenuId.NotebookEditorLayoutConfigure=new MenuId("NotebookEditorLayoutConfigure"),MenuId.BulkEditTitle=new MenuId("BulkEditTitle"),MenuId.BulkEditContext=new MenuId("BulkEditContext"),MenuId.TimelineItemContext=new MenuId("TimelineItemContext"),MenuId.TimelineTitle=new MenuId("TimelineTitle"),MenuId.TimelineTitleContext=new MenuId("TimelineTitleContext"),MenuId.AccountsContext=new MenuId("AccountsContext"),MenuId.PanelTitle=new MenuId("PanelTitle"),MenuId.TerminalInstanceContext=new MenuId("TerminalInstanceContext"),MenuId.TerminalEditorInstanceContext=new MenuId("TerminalEditorInstanceContext"),MenuId.TerminalNewDropdownContext=new MenuId("TerminalNewDropdownContext"),MenuId.TerminalTabContext=new MenuId("TerminalTabContext"),MenuId.TerminalTabEmptyAreaContext=new MenuId("TerminalTabEmptyAreaContext"),MenuId.TerminalInlineTabContext=new MenuId("TerminalInlineTabContext"),MenuId.WebviewContext=new MenuId("WebviewContext"),MenuId.InlineCompletionsActions=new MenuId("InlineCompletionsActions"),MenuId.NewFile=new MenuId("NewFile");export const IMenuService=createDecorator("menuService");export const MenuRegistry=new class{constructor(){this._commands=new Map,this._menuItems=new Map,this._onDidChangeMenu=new Emitter,this.onDidChangeMenu=this._onDidChangeMenu.event,this._commandPaletteChangeEvent={has:e=>e===MenuId.CommandPalette}}addCommand(e){return this.addCommands(Iterable.single(e))}addCommands(e){for(const n of e)this._commands.set(n.id,n);return this._onDidChangeMenu.fire(this._commandPaletteChangeEvent),toDisposable((()=>{let n=!1;for(const t of e)n=this._commands.delete(t.id)||n;n&&this._onDidChangeMenu.fire(this._commandPaletteChangeEvent)}))}getCommand(e){return this._commands.get(e)}getCommands(){const e=new Map;return this._commands.forEach(((n,t)=>e.set(t,n))),e}appendMenuItem(e,n){return this.appendMenuItems(Iterable.single({id:e,item:n}))}appendMenuItems(e){const n=new Set,t=new LinkedList;for(const{id:o,item:u}of e){let e=this._menuItems.get(o);e||(e=new LinkedList,this._menuItems.set(o,e)),t.push(e.push(u)),n.add(o)}return this._onDidChangeMenu.fire(n),toDisposable((()=>{if(t.size>0){for(let e of t)e();this._onDidChangeMenu.fire(n),t.clear()}}))}getMenuItems(e){let n;return n=this._menuItems.has(e)?[...this._menuItems.get(e)]:[],e===MenuId.CommandPalette&&this._appendImplicitItems(n),n}_appendImplicitItems(e){const n=new Set;for(const t of e)isIMenuItem(t)&&(n.add(t.command.id),t.alt&&n.add(t.alt.id));this._commands.forEach(((t,o)=>{n.has(o)||e.push({command:t})}))}};export class SubmenuItemAction extends SubmenuAction{constructor(e,n,t,o){super(`submenuitem.${e.submenu.id}`,"string"===typeof e.title?e.title:e.title.value,[],"submenu"),this.item=e,this._menuService=n,this._contextKeyService=t,this._options=o}get actions(){const e=[],n=this._menuService.createMenu(this.item.submenu,this._contextKeyService),t=n.getActions(this._options);n.dispose();for(const[,o]of t)o.length>0&&(e.push(...o),e.push(new Separator));return e.length&&e.pop(),e}}let MenuItemAction=class e{constructor(n,t,o,u,i){var d,M;if(this._commandService=i,this.id=n.id,this.label=(null===o||void 0===o?void 0:o.renderShortTitle)&&n.shortTitle?"string"===typeof n.shortTitle?n.shortTitle:n.shortTitle.value:"string"===typeof n.title?n.title:n.title.value,this.tooltip=null!==(M="string"===typeof n.tooltip?n.tooltip:null===(d=n.tooltip)||void 0===d?void 0:d.value)&&void 0!==M?M:"",this.enabled=!n.precondition||u.contextMatchesRules(n.precondition),this.checked=void 0,n.toggled){const e=n.toggled.condition?n.toggled:{condition:n.toggled};this.checked=u.contextMatchesRules(e.condition),this.checked&&e.tooltip&&(this.tooltip="string"===typeof e.tooltip?e.tooltip:e.tooltip.value),e.title&&(this.label="string"===typeof e.title?e.title:e.title.value)}this.item=n,this.alt=t?new e(t,void 0,o,u,i):void 0,this._options=o,ThemeIcon.isThemeIcon(n.icon)&&(this.class=CSSIcon.asClassName(n.icon))}dispose(){}run(...e){var n,t;let o=[];return(null===(n=this._options)||void 0===n?void 0:n.arg)&&(o=[...o,this._options.arg]),(null===(t=this._options)||void 0===t?void 0:t.shouldForwardArgs)&&(o=[...o,...e]),this._commandService.executeCommand(this.id,...o)}};MenuItemAction=__decorate([__param(3,IContextKeyService),__param(4,ICommandService)],MenuItemAction);export{MenuItemAction};