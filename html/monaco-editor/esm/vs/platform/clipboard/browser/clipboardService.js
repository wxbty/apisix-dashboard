var __decorate=this&&this.__decorate||function(e,t,i,r){var o,n=arguments.length,a=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)a=Reflect.decorate(e,t,i,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(n<3?o(a):n>3?o(t,i,a):o(t,i))||a);return n>3&&a&&Object.defineProperty(t,i,a),a},__param=this&&this.__param||function(e,t){return function(i,r){t(i,r,e)}},__awaiter=this&&this.__awaiter||function(e,t,i,r){function o(e){return e instanceof i?e:new i((function(t){t(e)}))}return new(i||(i=Promise))((function(i,n){function a(e){try{c(r.next(e))}catch(t){n(t)}}function s(e){try{c(r["throw"](e))}catch(t){n(t)}}function c(e){e.done?i(e.value):o(e.value).then(a,s)}c((r=r.apply(e,t||[])).next())}))};import{isSafari,isWebkitWebView}from"../../../base/browser/browser.js";import{$,addDisposableListener}from"../../../base/browser/dom.js";import{DeferredPromise}from"../../../base/common/async.js";import{Disposable}from"../../../base/common/lifecycle.js";import{ILayoutService}from"../../layout/browser/layoutService.js";import{ILogService}from"../../log/common/log.js";let BrowserClipboardService=class extends Disposable{constructor(e,t){super(),this.layoutService=e,this.logService=t,this.mapTextToType=new Map,this.findText="",(isSafari||isWebkitWebView)&&this.installWebKitWriteTextWorkaround()}installWebKitWriteTextWorkaround(){const e=()=>{const e=new DeferredPromise;this.webKitPendingClipboardWritePromise&&!this.webKitPendingClipboardWritePromise.isSettled&&this.webKitPendingClipboardWritePromise.cancel(),this.webKitPendingClipboardWritePromise=e,navigator.clipboard.write([new ClipboardItem({"text/plain":e.p})]).catch((t=>__awaiter(this,void 0,void 0,(function*(){t instanceof Error&&"NotAllowedError"===t.name&&e.isRejected||this.logService.error(t)}))))};this.layoutService.hasContainer&&(this._register(addDisposableListener(this.layoutService.container,"click",e)),this._register(addDisposableListener(this.layoutService.container,"keydown",e)))}writeText(e,t){return __awaiter(this,void 0,void 0,(function*(){if(t)return void this.mapTextToType.set(t,e);if(this.webKitPendingClipboardWritePromise)return this.webKitPendingClipboardWritePromise.complete(e);try{return yield navigator.clipboard.writeText(e)}catch(o){console.error(o)}const i=document.activeElement,r=document.body.appendChild($("textarea",{"aria-hidden":!0}));r.style.height="1px",r.style.width="1px",r.style.position="absolute",r.value=e,r.focus(),r.select(),document.execCommand("copy"),i instanceof HTMLElement&&i.focus(),document.body.removeChild(r)}))}readText(e){return __awaiter(this,void 0,void 0,(function*(){if(e)return this.mapTextToType.get(e)||"";try{return yield navigator.clipboard.readText()}catch(t){return console.error(t),""}}))}readFindText(){return __awaiter(this,void 0,void 0,(function*(){return this.findText}))}writeFindText(e){return __awaiter(this,void 0,void 0,(function*(){this.findText=e}))}};BrowserClipboardService=__decorate([__param(0,ILayoutService),__param(1,ILogService)],BrowserClipboardService);export{BrowserClipboardService};