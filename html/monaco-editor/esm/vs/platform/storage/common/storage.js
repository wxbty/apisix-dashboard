import{Emitter,PauseableEmitter}from"../../../base/common/event.js";import{Disposable}from"../../../base/common/lifecycle.js";import{isUndefinedOrNull}from"../../../base/common/types.js";import{InMemoryStorageDatabase,Storage}from"../../../base/parts/storage/common/storage.js";import{createDecorator}from"../../instantiation/common/instantiation.js";const TARGET_KEY="__$__targetStorageMarker";export const IStorageService=createDecorator("storageService");export var WillSaveStateReason;(function(e){e[e["NONE"]=0]="NONE",e[e["SHUTDOWN"]=1]="SHUTDOWN"})(WillSaveStateReason||(WillSaveStateReason={}));export class AbstractStorageService extends Disposable{constructor(e={flushInterval:AbstractStorageService.DEFAULT_FLUSH_INTERVAL}){super(),this.options=e,this._onDidChangeValue=this._register(new PauseableEmitter),this._onDidChangeTarget=this._register(new PauseableEmitter),this._onWillSaveState=this._register(new Emitter),this.onWillSaveState=this._onWillSaveState.event,this._workspaceKeyTargets=void 0,this._globalKeyTargets=void 0}emitDidChangeValue(e,t){t===TARGET_KEY?(0===e?this._globalKeyTargets=void 0:1===e&&(this._workspaceKeyTargets=void 0),this._onDidChangeTarget.fire({scope:e})):this._onDidChangeValue.fire({scope:e,key:t,target:this.getKeyTargets(e)[t]})}get(e,t,r){var a;return null===(a=this.getStorage(t))||void 0===a?void 0:a.get(e,r)}getBoolean(e,t,r){var a;return null===(a=this.getStorage(t))||void 0===a?void 0:a.getBoolean(e,r)}getNumber(e,t,r){var a;return null===(a=this.getStorage(t))||void 0===a?void 0:a.getNumber(e,r)}store(e,t,r,a){isUndefinedOrNull(t)?this.remove(e,r):this.withPausedEmitters((()=>{var s;this.updateKeyTarget(e,r,a),null===(s=this.getStorage(r))||void 0===s||s.set(e,t)}))}remove(e,t){this.withPausedEmitters((()=>{var r;this.updateKeyTarget(e,t,void 0),null===(r=this.getStorage(t))||void 0===r||r.delete(e)}))}withPausedEmitters(e){this._onDidChangeValue.pause(),this._onDidChangeTarget.pause();try{e()}finally{this._onDidChangeValue.resume(),this._onDidChangeTarget.resume()}}updateKeyTarget(e,t,r){var a,s;const i=this.getKeyTargets(t);"number"===typeof r?i[e]!==r&&(i[e]=r,null===(a=this.getStorage(t))||void 0===a||a.set(TARGET_KEY,JSON.stringify(i))):"number"===typeof i[e]&&(delete i[e],null===(s=this.getStorage(t))||void 0===s||s.set(TARGET_KEY,JSON.stringify(i)))}get workspaceKeyTargets(){return this._workspaceKeyTargets||(this._workspaceKeyTargets=this.loadKeyTargets(1)),this._workspaceKeyTargets}get globalKeyTargets(){return this._globalKeyTargets||(this._globalKeyTargets=this.loadKeyTargets(0)),this._globalKeyTargets}getKeyTargets(e){return 0===e?this.globalKeyTargets:this.workspaceKeyTargets}loadKeyTargets(e){const t=this.get(TARGET_KEY,e);if(t)try{return JSON.parse(t)}catch(r){}return Object.create(null)}}AbstractStorageService.DEFAULT_FLUSH_INTERVAL=6e4;export class InMemoryStorageService extends AbstractStorageService{constructor(){super(),this.globalStorage=this._register(new Storage(new InMemoryStorageDatabase)),this.workspaceStorage=this._register(new Storage(new InMemoryStorageDatabase)),this._register(this.workspaceStorage.onDidChangeStorage((e=>this.emitDidChangeValue(1,e)))),this._register(this.globalStorage.onDidChangeStorage((e=>this.emitDidChangeValue(0,e))))}getStorage(e){return 0===e?this.globalStorage:this.workspaceStorage}}