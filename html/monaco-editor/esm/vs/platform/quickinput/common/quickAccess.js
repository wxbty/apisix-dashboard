import{coalesce}from"../../../base/common/arrays.js";import{toDisposable}from"../../../base/common/lifecycle.js";import{Registry}from"../../registry/common/platform.js";export var DefaultQuickAccessFilterValue;(function(e){e[e["PRESERVE"]=0]="PRESERVE",e[e["LAST"]=1]="LAST"})(DefaultQuickAccessFilterValue||(DefaultQuickAccessFilterValue={}));export const Extensions={Quickaccess:"workbench.contributions.quickaccess"};export class QuickAccessRegistry{constructor(){this.providers=[],this.defaultProvider=void 0}registerQuickAccessProvider(e){return 0===e.prefix.length?this.defaultProvider=e:this.providers.push(e),this.providers.sort(((e,s)=>s.prefix.length-e.prefix.length)),toDisposable((()=>{this.providers.splice(this.providers.indexOf(e),1),this.defaultProvider===e&&(this.defaultProvider=void 0)}))}getQuickAccessProviders(){return coalesce([this.defaultProvider,...this.providers])}getQuickAccessProvider(e){const s=e&&this.providers.find((s=>e.startsWith(s.prefix)))||void 0;return s||this.defaultProvider}}Registry.add(Extensions.Quickaccess,new QuickAccessRegistry);