var __decorate=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a},__param=this&&this.__param||function(e,t){return function(n,o){t(n,o,e)}};import{FindInput}from"../../../base/browser/ui/findinput/findInput.js";import{ReplaceInput}from"../../../base/browser/ui/findinput/replaceInput.js";import{ContextKeyExpr,IContextKeyService,RawContextKey}from"../../contextkey/common/contextkey.js";import{KeybindingsRegistry}from"../../keybinding/common/keybindingsRegistry.js";const suggestWidgetVisibleContext="suggestWidgetVisible";export const HistoryNavigationWidgetContext="historyNavigationWidget";const HistoryNavigationForwardsEnablementContext="historyNavigationForwardsEnabled",HistoryNavigationBackwardsEnablementContext="historyNavigationBackwardsEnabled";function bindContextScopedWidget(e,t,n){new RawContextKey(n,t).bindTo(e)}function createWidgetScopedContextKeyService(e,t){return e.createScoped(t.target)}function getContextScopedWidget(e,t){return e.getContext(document.activeElement).getValue(t)}export function createAndBindHistoryNavigationWidgetScopedContextKeyService(e,t){const n=createWidgetScopedContextKeyService(e,t);bindContextScopedWidget(n,t,HistoryNavigationWidgetContext);const o=new RawContextKey(HistoryNavigationForwardsEnablementContext,!0).bindTo(n),i=new RawContextKey(HistoryNavigationBackwardsEnablementContext,!0).bindTo(n);return{scopedContextKeyService:n,historyNavigationForwardsEnablement:o,historyNavigationBackwardsEnablement:i}}let ContextScopedFindInput=class extends FindInput{constructor(e,t,n,o,i=!1){super(e,t,i,n),this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(o,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};ContextScopedFindInput=__decorate([__param(3,IContextKeyService)],ContextScopedFindInput);export{ContextScopedFindInput};let ContextScopedReplaceInput=class extends ReplaceInput{constructor(e,t,n,o,i=!1){super(e,t,i,n),this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(o,{target:this.inputBox.element,historyNavigator:this.inputBox}).scopedContextKeyService)}};ContextScopedReplaceInput=__decorate([__param(3,IContextKeyService)],ContextScopedReplaceInput);export{ContextScopedReplaceInput};KeybindingsRegistry.registerCommandAndKeybindingRule({id:"history.showPrevious",weight:200,when:ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext),ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext,!0),ContextKeyExpr.equals(suggestWidgetVisibleContext,!1)),primary:16,secondary:[528],handler:e=>{const t=getContextScopedWidget(e.get(IContextKeyService),HistoryNavigationWidgetContext);if(t){const e=t.historyNavigator;e.showPreviousValue()}}}),KeybindingsRegistry.registerCommandAndKeybindingRule({id:"history.showNext",weight:200,when:ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext),ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext,!0),ContextKeyExpr.equals(suggestWidgetVisibleContext,!1)),primary:18,secondary:[530],handler:e=>{const t=getContextScopedWidget(e.get(IContextKeyService),HistoryNavigationWidgetContext);if(t){const e=t.historyNavigator;e.showNextValue()}}});